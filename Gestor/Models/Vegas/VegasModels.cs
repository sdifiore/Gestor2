namespace Gestor.Models.Vegas
{
    using System;
    using System.Data.Entity;
    using System.ComponentModel.DataAnnotations.Schema;
    using System.Linq;

    public partial class VegasModels : DbContext
    {
        public VegasModels()
            : base("name=VegasModels")
        {
        }

        public virtual DbSet<ag_agendatmp> ag_agendatmp { get; set; }
        public virtual DbSet<ag_categag> ag_categag { get; set; }
        public virtual DbSet<ag_categeve> ag_categeve { get; set; }
        public virtual DbSet<ag_categlemb> ag_categlemb { get; set; }
        public virtual DbSet<ag_config> ag_config { get; set; }
        public virtual DbSet<ag_evdiconf> ag_evdiconf { get; set; }
        public virtual DbSet<ag_evlog> ag_evlog { get; set; }
        public virtual DbSet<ag_evlog_m> ag_evlog_m { get; set; }
        public virtual DbSet<ag_log> ag_log { get; set; }
        public virtual DbSet<ag_log_m> ag_log_m { get; set; }
        public virtual DbSet<ag_permconf> ag_permconf { get; set; }
        public virtual DbSet<ag_prioridade> ag_prioridade { get; set; }
        public virtual DbSet<ag_statusag> ag_statusag { get; set; }
        public virtual DbSet<ag_statuseve> ag_statuseve { get; set; }
        public virtual DbSet<ag_statuslem> ag_statuslem { get; set; }
        public virtual DbSet<ag_tpaviso> ag_tpaviso { get; set; }
        public virtual DbSet<ag_tpconceve> ag_tpconceve { get; set; }
        public virtual DbSet<ag_tpconclemb> ag_tpconclemb { get; set; }
        public virtual DbSet<ag_tpconcluag> ag_tpconcluag { get; set; }
        public virtual DbSet<ag_tpevento> ag_tpevento { get; set; }
        public virtual DbSet<amolog> amologs { get; set; }
        public virtual DbSet<base_amocateg> base_amocateg { get; set; }
        public virtual DbSet<base_amostatus> base_amostatus { get; set; }
        public virtual DbSet<base_amotpser> base_amotpser { get; set; }
        public virtual DbSet<base_ccctpmov> base_ccctpmov { get; set; }
        public virtual DbSet<base_ccftpmov> base_ccftpmov { get; set; }
        public virtual DbSet<base_cep_tplogr> base_cep_tplogr { get; set; }
        public virtual DbSet<base_cep_uf> base_cep_uf { get; set; }
        public virtual DbSet<base_cep_uf_fimov> base_cep_uf_fimov { get; set; }
        public virtual DbSet<base_chcadevo> base_chcadevo { get; set; }
        public virtual DbSet<base_chcastat> base_chcastat { get; set; }
        public virtual DbSet<base_chcatpag> base_chcatpag { get; set; }
        public virtual DbSet<base_chcatphi> base_chcatphi { get; set; }
        public virtual DbSet<base_cobrcateg> base_cobrcateg { get; set; }
        public virtual DbSet<base_cobrorig> base_cobrorig { get; set; }
        public virtual DbSet<base_cobrstat> base_cobrstat { get; set; }
        public virtual DbSet<base_contcat> base_contcat { get; set; }
        public virtual DbSet<base_contenvsta> base_contenvsta { get; set; }
        public virtual DbSet<base_contfamil> base_contfamil { get; set; }
        public virtual DbSet<base_contocorsta> base_contocorsta { get; set; }
        public virtual DbSet<base_contstatus> base_contstatus { get; set; }
        public virtual DbSet<base_conttpocor> base_conttpocor { get; set; }
        public virtual DbSet<base_cotcateg> base_cotcateg { get; set; }
        public virtual DbSet<base_cotforma> base_cotforma { get; set; }
        public virtual DbSet<base_cotstat> base_cotstat { get; set; }
        public virtual DbSet<base_cottipo> base_cottipo { get; set; }
        public virtual DbSet<base_cottpenv> base_cottpenv { get; set; }
        public virtual DbSet<base_cottpinf> base_cottpinf { get; set; }
        public virtual DbSet<base_coturgen> base_coturgen { get; set; }
        public virtual DbSet<base_cpagstat> base_cpagstat { get; set; }
        public virtual DbSet<base_cpatpinf> base_cpatpinf { get; set; }
        public virtual DbSet<base_crecnfbaixa> base_crecnfbaixa { get; set; }
        public virtual DbSet<base_crecstat> base_crecstat { get; set; }
        public virtual DbSet<base_cretpinf> base_cretpinf { get; set; }
        public virtual DbSet<base_dpto> base_dpto { get; set; }
        public virtual DbSet<base_empresa> base_empresa { get; set; }
        public virtual DbSet<base_entformapg> base_entformapg { get; set; }
        public virtual DbSet<base_entformapgparc> base_entformapgparc { get; set; }
        public virtual DbSet<base_entstat> base_entstat { get; set; }
        public virtual DbSet<base_enttipo> base_enttipo { get; set; }
        public virtual DbSet<base_enttpdoc> base_enttpdoc { get; set; }
        public virtual DbSet<base_enttpext> base_enttpext { get; set; }
        public virtual DbSet<base_equcateg> base_equcateg { get; set; }
        public virtual DbSet<base_equfamil> base_equfamil { get; set; }
        public virtual DbSet<base_equgrupo> base_equgrupo { get; set; }
        public virtual DbSet<base_equmarca> base_equmarca { get; set; }
        public virtual DbSet<base_equstatus> base_equstatus { get; set; }
        public virtual DbSet<base_equtipo> base_equtipo { get; set; }
        public virtual DbSet<base_equtpage> base_equtpage { get; set; }
        public virtual DbSet<base_equtpinf> base_equtpinf { get; set; }
        public virtual DbSet<base_equtpoco> base_equtpoco { get; set; }
        public virtual DbSet<base_fatimpostos> base_fatimpostos { get; set; }
        public virtual DbSet<base_fatstat> base_fatstat { get; set; }
        public virtual DbSet<base_fattpext> base_fattpext { get; set; }
        public virtual DbSet<base_fattpfat> base_fattpfat { get; set; }
        public virtual DbSet<base_fattpinf> base_fattpinf { get; set; }
        public virtual DbSet<base_fattpmsg> base_fattpmsg { get; set; }
        public virtual DbSet<base_fattpvia> base_fattpvia { get; set; }
        public virtual DbSet<base_ficoninf> base_ficoninf { get; set; }
        public virtual DbSet<base_ficotpin> base_ficotpin { get; set; }
        public virtual DbSet<base_fimtpinf> base_fimtpinf { get; set; }
        public virtual DbSet<base_finclass> base_finclass { get; set; }
        public virtual DbSet<base_finconta> base_finconta { get; set; }
        public virtual DbSet<base_fincusto> base_fincusto { get; set; }
        public virtual DbSet<base_finfoco> base_finfoco { get; set; }
        public virtual DbSet<base_finplano> base_finplano { get; set; }
        public virtual DbSet<base_fintpconta> base_fintpconta { get; set; }
        public virtual DbSet<base_fintpdoc> base_fintpdoc { get; set; }
        public virtual DbSet<base_fisc_baselegal> base_fisc_baselegal { get; set; }
        public virtual DbSet<base_fisc_icmsredu> base_fisc_icmsredu { get; set; }
        public virtual DbSet<base_fisc_icmsreduv> base_fisc_icmsreduv { get; set; }
        public virtual DbSet<base_fisc_op_calc> base_fisc_op_calc { get; set; }
        public virtual DbSet<base_fisc_op_cfop> base_fisc_op_cfop { get; set; }
        public virtual DbSet<base_fisc_op_cntxto> base_fisc_op_cntxto { get; set; }
        public virtual DbSet<base_fisc_op_csllcnf> base_fisc_op_csllcnf { get; set; }
        public virtual DbSet<base_fisc_op_forma> base_fisc_op_forma { get; set; }
        public virtual DbSet<base_fisc_op_icmscnf> base_fisc_op_icmscnf { get; set; }
        public virtual DbSet<base_fisc_op_insscnf> base_fisc_op_insscnf { get; set; }
        public virtual DbSet<base_fisc_op_ipicnf> base_fisc_op_ipicnf { get; set; }
        public virtual DbSet<base_fisc_op_ircnf> base_fisc_op_ircnf { get; set; }
        public virtual DbSet<base_fisc_op_isscnf> base_fisc_op_isscnf { get; set; }
        public virtual DbSet<base_fisc_op_piscnf> base_fisc_op_piscnf { get; set; }
        public virtual DbSet<base_fisc_op_tipo> base_fisc_op_tipo { get; set; }
        public virtual DbSet<base_fisc_op_tpxmat> base_fisc_op_tpxmat { get; set; }
        public virtual DbSet<base_fistatus> base_fistatus { get; set; }
        public virtual DbSet<base_fxcateg> base_fxcateg { get; set; }
        public virtual DbSet<base_fxcstat> base_fxcstat { get; set; }
        public virtual DbSet<base_fxctpinf> base_fxctpinf { get; set; }
        public virtual DbSet<base_fxdcate> base_fxdcate { get; set; }
        public virtual DbSet<base_fxdgrupo> base_fxdgrupo { get; set; }
        public virtual DbSet<base_fxdstat> base_fxdstat { get; set; }
        public virtual DbSet<base_fxdtpinf> base_fxdtpinf { get; set; }
        public virtual DbSet<base_fxgrupo> base_fxgrupo { get; set; }
        public virtual DbSet<base_ger_espec> base_ger_espec { get; set; }
        public virtual DbSet<base_ger_juros> base_ger_juros { get; set; }
        public virtual DbSet<base_ger_midiatp> base_ger_midiatp { get; set; }
        public virtual DbSet<base_ger_tabdisp> base_ger_tabdisp { get; set; }
        public virtual DbSet<base_ger_tabdispit> base_ger_tabdispit { get; set; }
        public virtual DbSet<base_gercancel> base_gercancel { get; set; }
        public virtual DbSet<base_gerindicador> base_gerindicador { get; set; }
        public virtual DbSet<base_germoedaind> base_germoedaind { get; set; }
        public virtual DbSet<base_gernatureza> base_gernatureza { get; set; }
        public virtual DbSet<base_gersequencia> base_gersequencia { get; set; }
        public virtual DbSet<base_gertpmo> base_gertpmo { get; set; }
        public virtual DbSet<base_ivc_condpgto> base_ivc_condpgto { get; set; }
        public virtual DbSet<base_ivc_tpembala> base_ivc_tpembala { get; set; }
        public virtual DbSet<base_ivc_tpfrete> base_ivc_tpfrete { get; set; }
        public virtual DbSet<base_ivc_tpinf> base_ivc_tpinf { get; set; }
        public virtual DbSet<base_ivc_tpivc> base_ivc_tpivc { get; set; }
        public virtual DbSet<base_matformapg> base_matformapg { get; set; }
        public virtual DbSet<base_matformapgparc> base_matformapgparc { get; set; }
        public virtual DbSet<base_matmovstat> base_matmovstat { get; set; }
        public virtual DbSet<base_matmovtipo> base_matmovtipo { get; set; }
        public virtual DbSet<base_matmovtpfe> base_matmovtpfe { get; set; }
        public virtual DbSet<base_mattpdoc> base_mattpdoc { get; set; }
        public virtual DbSet<base_nfe_cce_tp> base_nfe_cce_tp { get; set; }
        public virtual DbSet<base_nfe_lotfatsta> base_nfe_lotfatsta { get; set; }
        public virtual DbSet<base_nfe_tplog> base_nfe_tplog { get; set; }
        public virtual DbSet<base_nfe_tplote> base_nfe_tplote { get; set; }
        public virtual DbSet<base_nfe_tplotevars> base_nfe_tplotevars { get; set; }
        public virtual DbSet<base_nfeclass> base_nfeclass { get; set; }
        public virtual DbSet<base_nfestat> base_nfestat { get; set; }
        public virtual DbSet<base_nfetpent> base_nfetpent { get; set; }
        public virtual DbSet<base_nfetpext> base_nfetpext { get; set; }
        public virtual DbSet<base_nfetpinf> base_nfetpinf { get; set; }
        public virtual DbSet<base_nfetpvia> base_nfetpvia { get; set; }
        public virtual DbSet<base_os_ativtp> base_os_ativtp { get; set; }
        public virtual DbSet<base_os_categ> base_os_categ { get; set; }
        public virtual DbSet<base_os_chkliststa> base_os_chkliststa { get; set; }
        public virtual DbSet<base_os_chklisttp> base_os_chklisttp { get; set; }
        public virtual DbSet<base_os_dna> base_os_dna { get; set; }
        public virtual DbSet<base_os_dna_plugin> base_os_dna_plugin { get; set; }
        public virtual DbSet<base_os_envoltp> base_os_envoltp { get; set; }
        public virtual DbSet<base_os_infotp> base_os_infotp { get; set; }
        public virtual DbSet<base_os_moprevsta> base_os_moprevsta { get; set; }
        public virtual DbSet<base_os_prodprevsta> base_os_prodprevsta { get; set; }
        public virtual DbSet<base_os_respostatp> base_os_respostatp { get; set; }
        public virtual DbSet<base_os_status> base_os_status { get; set; }
        public virtual DbSet<base_os_tipo> base_os_tipo { get; set; }
        public virtual DbSet<base_patcateg> base_patcateg { get; set; }
        public virtual DbSet<base_patclass> base_patclass { get; set; }
        public virtual DbSet<base_patgrupo> base_patgrupo { get; set; }
        public virtual DbSet<base_patstatus> base_patstatus { get; set; }
        public virtual DbSet<base_pattipo> base_pattipo { get; set; }
        public virtual DbSet<base_pattpinf> base_pattpinf { get; set; }
        public virtual DbSet<base_pattpman> base_pattpman { get; set; }
        public virtual DbSet<base_pct_status> base_pct_status { get; set; }
        public virtual DbSet<base_pct_tpendereco> base_pct_tpendereco { get; set; }
        public virtual DbSet<base_pct_tpinfo> base_pct_tpinfo { get; set; }
        public virtual DbSet<base_pct_tpitem> base_pct_tpitem { get; set; }
        public virtual DbSet<base_pct_tpopera> base_pct_tpopera { get; set; }
        public virtual DbSet<base_pct_tppacote> base_pct_tppacote { get; set; }
        public virtual DbSet<base_pedcateg> base_pedcateg { get; set; }
        public virtual DbSet<base_pedstat> base_pedstat { get; set; }
        public virtual DbSet<base_pedstatp> base_pedstatp { get; set; }
        public virtual DbSet<base_pedtipo> base_pedtipo { get; set; }
        public virtual DbSet<base_pedtpext> base_pedtpext { get; set; }
        public virtual DbSet<base_pedtpinf> base_pedtpinf { get; set; }
        public virtual DbSet<base_pedtpnco> base_pedtpnco { get; set; }
        public virtual DbSet<base_pedtptra> base_pedtptra { get; set; }
        public virtual DbSet<base_pescateg> base_pescateg { get; set; }
        public virtual DbSet<base_pesgrupo> base_pesgrupo { get; set; }
        public virtual DbSet<base_pesmotbl> base_pesmotbl { get; set; }
        public virtual DbSet<base_pessegme> base_pessegme { get; set; }
        public virtual DbSet<base_pesstatus> base_pesstatus { get; set; }
        public virtual DbSet<base_pestipo> base_pestipo { get; set; }
        public virtual DbSet<base_pestpcred> base_pestpcred { get; set; }
        public virtual DbSet<base_pestpdep> base_pestpdep { get; set; }
        public virtual DbSet<base_pestpemp_icms> base_pestpemp_icms { get; set; }
        public virtual DbSet<base_pestpemp_ipi> base_pestpemp_ipi { get; set; }
        public virtual DbSet<base_pestpemp_iss> base_pestpemp_iss { get; set; }
        public virtual DbSet<base_pestpemp_pis> base_pestpemp_pis { get; set; }
        public virtual DbSet<base_pestpend> base_pestpend { get; set; }
        public virtual DbSet<base_pestpfoto> base_pestpfoto { get; set; }
        public virtual DbSet<base_pestphom> base_pestphom { get; set; }
        public virtual DbSet<base_pestpindic> base_pestpindic { get; set; }
        public virtual DbSet<base_pestpinfo> base_pestpinfo { get; set; }
        public virtual DbSet<base_proclass> base_proclass { get; set; }
        public virtual DbSet<base_proclfiscal> base_proclfiscal { get; set; }
        public virtual DbSet<base_prodpto> base_prodpto { get; set; }
        public virtual DbSet<base_profamil> base_profamil { get; set; }
        public virtual DbSet<base_profisc_clcalc> base_profisc_clcalc { get; set; }
        public virtual DbSet<base_profisc_icmscnf> base_profisc_icmscnf { get; set; }
        public virtual DbSet<base_profisc_icmsmotdes> base_profisc_icmsmotdes { get; set; }
        public virtual DbSet<base_profisc_iicnf> base_profisc_iicnf { get; set; }
        public virtual DbSet<base_profisc_ipicnf> base_profisc_ipicnf { get; set; }
        public virtual DbSet<base_profisc_ipicst> base_profisc_ipicst { get; set; }
        public virtual DbSet<base_profisc_isscnf> base_profisc_isscnf { get; set; }
        public virtual DbSet<base_profisc_mate> base_profisc_mate { get; set; }
        public virtual DbSet<base_profisc_origem> base_profisc_origem { get; set; }
        public virtual DbSet<base_profisc_piscf_oper> base_profisc_piscf_oper { get; set; }
        public virtual DbSet<base_profisc_piscnf> base_profisc_piscnf { get; set; }
        public virtual DbSet<base_profisc_ufxst> base_profisc_ufxst { get; set; }
        public virtual DbSet<base_prograde> base_prograde { get; set; }
        public virtual DbSet<base_progrupo> base_progrupo { get; set; }
        public virtual DbSet<base_proicm> base_proicm { get; set; }
        public virtual DbSet<base_proicmsub> base_proicmsub { get; set; }
        public virtual DbSet<base_proipi> base_proipi { get; set; }
        public virtual DbSet<base_proiss> base_proiss { get; set; }
        public virtual DbSet<base_prolinha> base_prolinha { get; set; }
        public virtual DbSet<base_prolocal> base_prolocal { get; set; }
        public virtual DbSet<base_promarca> base_promarca { get; set; }
        public virtual DbSet<base_propvgru> base_propvgru { get; set; }
        public virtual DbSet<base_propvtip> base_propvtip { get; set; }
        public virtual DbSet<base_prostatus> base_prostatus { get; set; }
        public virtual DbSet<base_protartpinfo> base_protartpinfo { get; set; }
        public virtual DbSet<base_protpace> base_protpace { get; set; }
        public virtual DbSet<base_protpfoto> base_protpfoto { get; set; }
        public virtual DbSet<base_protpgra> base_protpgra { get; set; }
        public virtual DbSet<base_protpinfo> base_protpinfo { get; set; }
        public virtual DbSet<base_protplink> base_protplink { get; set; }
        public virtual DbSet<base_protpopc> base_protpopc { get; set; }
        public virtual DbSet<base_protpvariacao> base_protpvariacao { get; set; }
        public virtual DbSet<base_respevenunid> base_respevenunid { get; set; }
        public virtual DbSet<base_respfunc> base_respfunc { get; set; }
        public virtual DbSet<base_respgrupo> base_respgrupo { get; set; }
        public virtual DbSet<base_respstatus> base_respstatus { get; set; }
        public virtual DbSet<base_resptpeven> base_resptpeven { get; set; }
        public virtual DbSet<base_resptpfoto> base_resptpfoto { get; set; }
        public virtual DbSet<base_resptpinfo> base_resptpinfo { get; set; }
        public virtual DbSet<base_saitipo> base_saitipo { get; set; }
        public virtual DbSet<base_saitpext> base_saitpext { get; set; }
        public virtual DbSet<base_se_smtp> base_se_smtp { get; set; }
        public virtual DbSet<base_sped_proctp> base_sped_proctp { get; set; }
        public virtual DbSet<base_un_banco> base_un_banco { get; set; }
        public virtual DbSet<base_un_banmot> base_un_banmot { get; set; }
        public virtual DbSet<base_un_banocor> base_un_banocor { get; set; }
        public virtual DbSet<base_un_cartao> base_un_cartao { get; set; }
        public virtual DbSet<base_un_cartao_ocor> base_un_cartao_ocor { get; set; }
        public virtual DbSet<base_un_cartao_oper> base_un_cartao_oper { get; set; }
        public virtual DbSet<base_un_corpele> base_un_corpele { get; set; }
        public virtual DbSet<base_un_diasemana> base_un_diasemana { get; set; }
        public virtual DbSet<base_un_estcivil> base_un_estcivil { get; set; }
        public virtual DbSet<base_un_medida> base_un_medida { get; set; }
        public virtual DbSet<base_un_moeda> base_un_moeda { get; set; }
        public virtual DbSet<base_un_pais> base_un_pais { get; set; }
        public virtual DbSet<base_un_pesquisadost> base_un_pesquisadost { get; set; }
        public virtual DbSet<base_un_pesquisast> base_un_pesquisast { get; set; }
        public virtual DbSet<base_un_prn> base_un_prn { get; set; }
        public virtual DbSet<base_un_religiao> base_un_religiao { get; set; }
        public virtual DbSet<base_un_sexo> base_un_sexo { get; set; }
        public virtual DbSet<base_ven_acaomkt> base_ven_acaomkt { get; set; }
        public virtual DbSet<base_ven_categ> base_ven_categ { get; set; }
        public virtual DbSet<base_ven_expfor> base_ven_expfor { get; set; }
        public virtual DbSet<base_ven_expstat> base_ven_expstat { get; set; }
        public virtual DbSet<base_ven_formapg> base_ven_formapg { get; set; }
        public virtual DbSet<base_ven_motrep> base_ven_motrep { get; set; }
        public virtual DbSet<base_ven_origem> base_ven_origem { get; set; }
        public virtual DbSet<base_ven_status> base_ven_status { get; set; }
        public virtual DbSet<base_ven_tipo> base_ven_tipo { get; set; }
        public virtual DbSet<base_ven_tpaprova> base_ven_tpaprova { get; set; }
        public virtual DbSet<base_ven_tpdoc> base_ven_tpdoc { get; set; }
        public virtual DbSet<base_ven_tpparc> base_ven_tpparc { get; set; }
        public virtual DbSet<base_ven_tpverdade> base_ven_tpverdade { get; set; }
        public virtual DbSet<cccli_m> cccli_m { get; set; }
        public virtual DbSet<ccclient> ccclients { get; set; }
        public virtual DbSet<ccclog> ccclogs { get; set; }
        public virtual DbSet<ccflog> ccflogs { get; set; }
        public virtual DbSet<ccfor_m> ccfor_m { get; set; }
        public virtual DbSet<ccforne> ccfornes { get; set; }
        public virtual DbSet<cep_bairro> cep_bairro { get; set; }
        public virtual DbSet<cep_cidade> cep_cidade { get; set; }
        public virtual DbSet<cep_logra> cep_logra { get; set; }
        public virtual DbSet<chca> chcas { get; set; }
        public virtual DbSet<chca_cartaoarq> chca_cartaoarq { get; set; }
        public virtual DbSet<chca_cartaodet> chca_cartaodet { get; set; }
        public virtual DbSet<chca_m> chca_m { get; set; }
        public virtual DbSet<chcaag_m> chcaag_m { get; set; }
        public virtual DbSet<chcaagen> chcaagens { get; set; }
        public virtual DbSet<chcacateg> chcacategs { get; set; }
        public virtual DbSet<chcahi_m> chcahi_m { get; set; }
        public virtual DbSet<chcahist> chcahists { get; set; }
        public virtual DbSet<chcalog> chcalogs { get; set; }
        public virtual DbSet<chcarat> chcarats { get; set; }
        public virtual DbSet<chcarat_m> chcarat_m { get; set; }
        public virtual DbSet<cnslgarq> cnslgarqs { get; set; }
        public virtual DbSet<cnslgger> cnslggers { get; set; }
        public virtual DbSet<cnssincpos> cnssincpos { get; set; }
        public virtual DbSet<cnssincseq> cnssincseqs { get; set; }
        public virtual DbSet<cobdoc_m> cobdoc_m { get; set; }
        public virtual DbSet<cobexpmovconf> cobexpmovconfs { get; set; }
        public virtual DbSet<cobglobalvar> cobglobalvars { get; set; }
        public virtual DbSet<coblog_m> coblog_m { get; set; }
        public virtual DbSet<cobra_m> cobra_m { get; set; }
        public virtual DbSet<cobranca> cobrancas { get; set; }
        public virtual DbSet<cobrconv> cobrconvs { get; set; }
        public virtual DbSet<cobrconvlog> cobrconvlogs { get; set; }
        public virtual DbSet<cobrconvparc> cobrconvparcs { get; set; }
        public virtual DbSet<cobrdocu> cobrdocus { get; set; }
        public virtual DbSet<cobrlog> cobrlogs { get; set; }
        public virtual DbSet<contdedica> contdedicas { get; set; }
        public virtual DbSet<contenvol> contenvols { get; set; }
        public virtual DbSet<contfinan> contfinans { get; set; }
        public virtual DbSet<contfinansta> contfinanstas { get; set; }
        public virtual DbSet<contgrupo> contgrupoes { get; set; }
        public virtual DbSet<continfo> continfoes { get; set; }
        public virtual DbSet<continfocontsta> continfocontstas { get; set; }
        public virtual DbSet<contlogcont> contlogconts { get; set; }
        public virtual DbSet<contocor> contocors { get; set; }
        public virtual DbSet<contrato> contratos { get; set; }
        public virtual DbSet<contresme> contresmes { get; set; }
        public virtual DbSet<contrevisao> contrevisaos { get; set; }
        public virtual DbSet<conttipo> conttipoes { get; set; }
        public virtual DbSet<conttpinfo> conttpinfoes { get; set; }
        public virtual DbSet<conttprev> conttprevs { get; set; }
        public virtual DbSet<contxgrupo> contxgrupoes { get; set; }
        public virtual DbSet<cotacao> cotacaos { get; set; }
        public virtual DbSet<cotchkgab> cotchkgabs { get; set; }
        public virtual DbSet<cotchkliststa> cotchkliststas { get; set; }
        public virtual DbSet<cotchklisttp> cotchklisttps { get; set; }
        public virtual DbSet<cotforne> cotfornes { get; set; }
        public virtual DbSet<cotinfo> cotinfoes { get; set; }
        public virtual DbSet<cotlog> cotlogs { get; set; }
        public virtual DbSet<cotprodu> cotprodus { get; set; }
        public virtual DbSet<cotprxfo> cotprxfoes { get; set; }
        public virtual DbSet<cpagar> cpagars { get; set; }
        public virtual DbSet<cpagar_m> cpagar_m { get; set; }
        public virtual DbSet<cpagbcfmpgto> cpagbcfmpgtoes { get; set; }
        public virtual DbSet<cpagbctppgto> cpagbctppgtoes { get; set; }
        public virtual DbSet<cpagbctppgtotrib> cpagbctppgtotribs { get; set; }
        public virtual DbSet<cpagimppgto> cpagimppgtoes { get; set; }
        public virtual DbSet<cpagimpret> cpagimprets { get; set; }
        public virtual DbSet<cpaginfo> cpaginfoes { get; set; }
        public virtual DbSet<cpaglog> cpaglogs { get; set; }
        public virtual DbSet<cpagrat> cpagrats { get; set; }
        public virtual DbSet<cpagreneg> cpagrenegs { get; set; }
        public virtual DbSet<cpinf_m> cpinf_m { get; set; }
        public virtual DbSet<cplog_m> cplog_m { get; set; }
        public virtual DbSet<cprat_m> cprat_m { get; set; }
        public virtual DbSet<crecatual> crecatuals { get; set; }
        public virtual DbSet<creceb_m> creceb_m { get; set; }
        public virtual DbSet<creceber> crecebers { get; set; }
        public virtual DbSet<crecinfo> crecinfoes { get; set; }
        public virtual DbSet<creclog> creclogs { get; set; }
        public virtual DbSet<crecnegocia> crecnegocias { get; set; }
        public virtual DbSet<crecoriginal> crecoriginals { get; set; }
        public virtual DbSet<crecprod> crecprods { get; set; }
        public virtual DbSet<crecrat> crecrats { get; set; }
        public virtual DbSet<crecreneg> crecrenegs { get; set; }
        public virtual DbSet<crinf_m> crinf_m { get; set; }
        public virtual DbSet<crlog_m> crlog_m { get; set; }
        public virtual DbSet<crrat_m> crrat_m { get; set; }
        public virtual DbSet<dic_scr_arqcampos> dic_scr_arqcampos { get; set; }
        public virtual DbSet<dic_scr_arqtabelas> dic_scr_arqtabelas { get; set; }
        public virtual DbSet<difw_dicctrl> difw_dicctrl { get; set; }
        public virtual DbSet<difw_tablog> difw_tablog { get; set; }
        public virtual DbSet<empcert> empcerts { get; set; }
        public virtual DbSet<empinfo> empinfoes { get; set; }
        public virtual DbSet<emptpinfo> emptpinfoes { get; set; }
        public virtual DbSet<equagend> equagends { get; set; }
        public virtual DbSet<equinfo> equinfoes { get; set; }
        public virtual DbSet<equipame> equipames { get; set; }
        public virtual DbSet<equlocal> equlocals { get; set; }
        public virtual DbSet<equlog> equlogs { get; set; }
        public virtual DbSet<equocorr> equocorrs { get; set; }
        public virtual DbSet<equxgrp> equxgrps { get; set; }
        public virtual DbSet<fatcomiss> fatcomisses { get; set; }
        public virtual DbSet<fatcomisstp> fatcomisstps { get; set; }
        public virtual DbSet<fatextra> fatextras { get; set; }
        public virtual DbSet<fatgrvalidnf> fatgrvalidnfs { get; set; }
        public virtual DbSet<fatinfo> fatinfoes { get; set; }
        public virtual DbSet<fatlog> fatlogs { get; set; }
        public virtual DbSet<fatprodu> fatprodus { get; set; }
        public virtual DbSet<fatserie> fatseries { get; set; }
        public virtual DbSet<fattribu> fattribus { get; set; }
        public virtual DbSet<fatura> faturas { get; set; }
        public virtual DbSet<fatvalidanf> fatvalidanfs { get; set; }
        public virtual DbSet<fatvenc> fatvencs { get; set; }
        public virtual DbSet<ficonlog> ficonlogs { get; set; }
        public virtual DbSet<fimovdre_estr> fimovdre_estr { get; set; }
        public virtual DbSet<fimovi_m> fimovi_m { get; set; }
        public virtual DbSet<fimovime> fimovimes { get; set; }
        public virtual DbSet<fimovinf> fimovinfs { get; set; }
        public virtual DbSet<fimovinf_m> fimovinf_m { get; set; }
        public virtual DbSet<fimovl_m> fimovl_m { get; set; }
        public virtual DbSet<fimovlog> fimovlogs { get; set; }
        public virtual DbSet<fimovpre> fimovpres { get; set; }
        public virtual DbSet<fimovrat> fimovrats { get; set; }
        public virtual DbSet<fimovxch> fimovxches { get; set; }
        public virtual DbSet<fimovxcp> fimovxcps { get; set; }
        public virtual DbSet<fimovxcr> fimovxcrs { get; set; }
        public virtual DbSet<fimrat_m> fimrat_m { get; set; }
        public virtual DbSet<fimxch_m> fimxch_m { get; set; }
        public virtual DbSet<fimxcp_m> fimxcp_m { get; set; }
        public virtual DbSet<fimxcr_m> fimxcr_m { get; set; }
        public virtual DbSet<finfecha> finfechas { get; set; }
        public virtual DbSet<finfoco_info> finfoco_info { get; set; }
        public virtual DbSet<finfoco_infotp> finfoco_infotp { get; set; }
        public virtual DbSet<finfocoxconta> finfocoxcontas { get; set; }
        public virtual DbSet<firateio> firateios { get; set; }
        public virtual DbSet<firatfil> firatfils { get; set; }
        public virtual DbSet<firatlan> firatlans { get; set; }
        public virtual DbSet<fireccateg> fireccategs { get; set; }
        public virtual DbSet<firecgrupo> firecgrupoes { get; set; }
        public virtual DbSet<firechist> firechists { get; set; }
        public virtual DbSet<firecinfo> firecinfoes { get; set; }
        public virtual DbSet<fireclog> fireclogs { get; set; }
        public virtual DbSet<firecorrente> firecorrentes { get; set; }
        public virtual DbSet<firecprodu> firecprodus { get; set; }
        public virtual DbSet<firecrat> firecrats { get; set; }
        public virtual DbSet<firecstat> firecstats { get; set; }
        public virtual DbSet<firectpinfo> firectpinfoes { get; set; }
        public virtual DbSet<fisc_cest> fisc_cest { get; set; }
        public virtual DbSet<fisc_credcart> fisc_credcart { get; set; }
        public virtual DbSet<fisc_ipi_enq> fisc_ipi_enq { get; set; }
        public virtual DbSet<fisc_op_fluxo> fisc_op_fluxo { get; set; }
        public virtual DbSet<fisc_partilha> fisc_partilha { get; set; }
        public virtual DbSet<fxcarte> fxcartes { get; set; }
        public virtual DbSet<fxchist> fxchists { get; set; }
        public virtual DbSet<fxcinfo> fxcinfoes { get; set; }
        public virtual DbSet<fxclog> fxclogs { get; set; }
        public virtual DbSet<fxcprodu> fxcprodus { get; set; }
        public virtual DbSet<fxcrat> fxcrats { get; set; }
        public virtual DbSet<fxdesp> fxdesps { get; set; }
        public virtual DbSet<fxdhist> fxdhists { get; set; }
        public virtual DbSet<fxdinfo> fxdinfoes { get; set; }
        public virtual DbSet<fxdlog> fxdlogs { get; set; }
        public virtual DbSet<fxdprodu> fxdprodus { get; set; }
        public virtual DbSet<fxdrat> fxdrats { get; set; }
        public virtual DbSet<geddocsta> geddocstas { get; set; }
        public virtual DbSet<gedgabfluxopub> gedgabfluxopubs { get; set; }
        public virtual DbSet<gedinfo> gedinfoes { get; set; }
        public virtual DbSet<gedinfotp> gedinfotps { get; set; }
        public virtual DbSet<gedstafluxopub> gedstafluxopubs { get; set; }
        public virtual DbSet<gedtipdoc> gedtipdocs { get; set; }
        public virtual DbSet<gedtpatividade> gedtpatividades { get; set; }
        public virtual DbSet<gedtpfluxo> gedtpfluxoes { get; set; }
        public virtual DbSet<gedtrigger> gedtriggers { get; set; }
        public virtual DbSet<ger_email> ger_email { get; set; }
        public virtual DbSet<ger_regdesacr> ger_regdesacr { get; set; }
        public virtual DbSet<ger_tabreg_pk> ger_tabreg_pk { get; set; }
        public virtual DbSet<ger_tabreg_tabelas> ger_tabreg_tabelas { get; set; }
        public virtual DbSet<ger_tabreg_tbfilhas> ger_tabreg_tbfilhas { get; set; }
        public virtual DbSet<gerlocalizacao> gerlocalizacaos { get; set; }
        public virtual DbSet<gerlogconexao> gerlogconexaos { get; set; }
        public virtual DbSet<gerprnpr> gerprnprs { get; set; }
        public virtual DbSet<gerregiao> gerregiaos { get; set; }
        public virtual DbSet<gerregistro> gerregistroes { get; set; }
        public virtual DbSet<gerservpostal> gerservpostals { get; set; }
        public virtual DbSet<itsaixetiq> itsaixetiqs { get; set; }
        public virtual DbSet<ivc_info> ivc_info { get; set; }
        public virtual DbSet<matmovime> matmovimes { get; set; }
        public virtual DbSet<matmovlog> matmovlogs { get; set; }
        public virtual DbSet<matmovprod> matmovprods { get; set; }
        public virtual DbSet<mftmp_mov> mftmp_mov { get; set; }
        public virtual DbSet<mftmp_pro> mftmp_pro { get; set; }
        public virtual DbSet<mftmp_ven> mftmp_ven { get; set; }
        public virtual DbSet<mi_kit> mi_kit { get; set; }
        public virtual DbSet<mi_log> mi_log { get; set; }
        public virtual DbSet<mi_status> mi_status { get; set; }
        public virtual DbSet<mi_tpmov> mi_tpmov { get; set; }
        public virtual DbSet<mi_tpperda> mi_tpperda { get; set; }
        public virtual DbSet<movfciproc> movfciprocs { get; set; }
        public virtual DbSet<mp_monitconf> mp_monitconf { get; set; }
        public virtual DbSet<mp_tbcodavalia> mp_tbcodavalia { get; set; }
        public virtual DbSet<nfe_cce_log> nfe_cce_log { get; set; }
        public virtual DbSet<nfe_log> nfe_log { get; set; }
        public virtual DbSet<nfe_lote> nfe_lote { get; set; }
        public virtual DbSet<nfe_lotxfat> nfe_lotxfat { get; set; }
        public virtual DbSet<nfe_municipio_ibge> nfe_municipio_ibge { get; set; }
        public virtual DbSet<nfe_municipio_siafi> nfe_municipio_siafi { get; set; }
        public virtual DbSet<nfe_pais_bacen> nfe_pais_bacen { get; set; }
        public virtual DbSet<nfeextra> nfeextras { get; set; }
        public virtual DbSet<nfeinfo> nfeinfoes { get; set; }
        public virtual DbSet<nfelog> nfelogs { get; set; }
        public virtual DbSet<nfentra> nfentras { get; set; }
        public virtual DbSet<nfeprodu> nfeprodus { get; set; }
        public virtual DbSet<nferat> nferats { get; set; }
        public virtual DbSet<nfetribu> nfetribus { get; set; }
        public virtual DbSet<nfevenc> nfevencs { get; set; }
        public virtual DbSet<op_categ> op_categ { get; set; }
        public virtual DbSet<op_log> op_log { get; set; }
        public virtual DbSet<op_ltprsta> op_ltprsta { get; set; }
        public virtual DbSet<op_sta> op_sta { get; set; }
        public virtual DbSet<op_tipo> op_tipo { get; set; }
        public virtual DbSet<o> os { get; set; }
        public virtual DbSet<os_ativ_orca> os_ativ_orca { get; set; }
        public virtual DbSet<os_atividade> os_atividade { get; set; }
        public virtual DbSet<os_ativrec> os_ativrec { get; set; }
        public virtual DbSet<os_atv_dstfato> os_atv_dstfato { get; set; }
        public virtual DbSet<os_atv_fato> os_atv_fato { get; set; }
        public virtual DbSet<os_atv_tpfato> os_atv_tpfato { get; set; }
        public virtual DbSet<os_atvpred> os_atvpred { get; set; }
        public virtual DbSet<os_atvprioridade> os_atvprioridade { get; set; }
        public virtual DbSet<os_atvsta> os_atvsta { get; set; }
        public virtual DbSet<os_chkgab> os_chkgab { get; set; }
        public virtual DbSet<os_chklist> os_chklist { get; set; }
        public virtual DbSet<os_chklistresult> os_chklistresult { get; set; }
        public virtual DbSet<os_comumeio> os_comumeio { get; set; }
        public virtual DbSet<os_comunica> os_comunica { get; set; }
        public virtual DbSet<os_comuperiod> os_comuperiod { get; set; }
        public virtual DbSet<os_conf> os_conf { get; set; }
        public virtual DbSet<os_envolsta> os_envolsta { get; set; }
        public virtual DbSet<os_envolvidos> os_envolvidos { get; set; }
        public virtual DbSet<os_equipcateg> os_equipcateg { get; set; }
        public virtual DbSet<os_equipxos> os_equipxos { get; set; }
        public virtual DbSet<os_grupo> os_grupo { get; set; }
        public virtual DbSet<os_grupoos> os_grupoos { get; set; }
        public virtual DbSet<os_info> os_info { get; set; }
        public virtual DbSet<os_integrext> os_integrext { get; set; }
        public virtual DbSet<os_log> os_log { get; set; }
        public virtual DbSet<os_moprev> os_moprev { get; set; }
        public virtual DbSet<os_papel> os_papel { get; set; }
        public virtual DbSet<os_planeja> os_planeja { get; set; }
        public virtual DbSet<os_prodprev> os_prodprev { get; set; }
        public virtual DbSet<os_recexprcalc> os_recexprcalc { get; set; }
        public virtual DbSet<os_rectpfato> os_rectpfato { get; set; }
        public virtual DbSet<os_recurso> os_recurso { get; set; }
        public virtual DbSet<os_recursotp> os_recursotp { get; set; }
        public virtual DbSet<os_recxativ_sum> os_recxativ_sum { get; set; }
        public virtual DbSet<os_recxativ_vpt> os_recxativ_vpt { get; set; }
        public virtual DbSet<os_recxresp> os_recxresp { get; set; }
        public virtual DbSet<os_recxvalor> os_recxvalor { get; set; }
        public virtual DbSet<os_risco> os_risco { get; set; }
        public virtual DbSet<os_riscocateg> os_riscocateg { get; set; }
        public virtual DbSet<os_riscoclass> os_riscoclass { get; set; }
        public virtual DbSet<os_riscoimpac> os_riscoimpac { get; set; }
        public virtual DbSet<os_riscoprob> os_riscoprob { get; set; }
        public virtual DbSet<os_riscosta> os_riscosta { get; set; }
        public virtual DbSet<os_riscotp> os_riscotp { get; set; }
        public virtual DbSet<os_tpfoco> os_tpfoco { get; set; }
        public virtual DbSet<os_tpplaneja> os_tpplaneja { get; set; }
        public virtual DbSet<os_tppred> os_tppred { get; set; }
        public virtual DbSet<os_tprestr> os_tprestr { get; set; }
        public virtual DbSet<patlog> patlogs { get; set; }
        public virtual DbSet<patmanut> patmanuts { get; set; }
        public virtual DbSet<patmovim> patmovims { get; set; }
        public virtual DbSet<patrinfo> patrinfoes { get; set; }
        public virtual DbSet<patxgrp> patxgrps { get; set; }
        public virtual DbSet<pct_staitem> pct_staitem { get; set; }
        public virtual DbSet<ped_conf> ped_conf { get; set; }
        public virtual DbSet<ped_rec_hist> ped_rec_hist { get; set; }
        public virtual DbSet<ped_rec_info> ped_rec_info { get; set; }
        public virtual DbSet<ped_rec_log> ped_rec_log { get; set; }
        public virtual DbSet<ped_rec_prod> ped_rec_prod { get; set; }
        public virtual DbSet<ped_rec_prrat> ped_rec_prrat { get; set; }
        public virtual DbSet<ped_rec_tpinfo> ped_rec_tpinfo { get; set; }
        public virtual DbSet<ped_recorrencia> ped_recorrencia { get; set; }
        public virtual DbSet<pedcmpcalc> pedcmpcalcs { get; set; }
        public virtual DbSet<pedformapg> pedformapgs { get; set; }
        public virtual DbSet<pedprdetlog> pedprdetlogs { get; set; }
        public virtual DbSet<pedprdetsta> pedprdetstas { get; set; }
        public virtual DbSet<pedtpdoc> pedtpdocs { get; set; }
        public virtual DbSet<pedtpend> pedtpends { get; set; }
        public virtual DbSet<pescontabanco> pescontabancoes { get; set; }
        public virtual DbSet<pescredit> pescredits { get; set; }
        public virtual DbSet<pesdepen> pesdepens { get; set; }
        public virtual DbSet<pesender> pesenders { get; set; }
        public virtual DbSet<pesfoto> pesfotoes { get; set; }
        public virtual DbSet<peshomol> peshomols { get; set; }
        public virtual DbSet<pesinfo> pesinfoes { get; set; }
        public virtual DbSet<peslog> peslogs { get; set; }
        public virtual DbSet<pesregpreench> pesregpreenches { get; set; }
        public virtual DbSet<pessoa> pessoas { get; set; }
        public virtual DbSet<pesxdoc> pesxdocs { get; set; }
        public virtual DbSet<pesxgrupo> pesxgrupoes { get; set; }
        public virtual DbSet<pinv_conf> pinv_conf { get; set; }
        public virtual DbSet<pinv_it_det> pinv_it_det { get; set; }
        public virtual DbSet<pinv_tpfecha> pinv_tpfecha { get; set; }
        public virtual DbSet<plan_fant_tp> plan_fant_tp { get; set; }
        public virtual DbSet<plan_ft_tp> plan_ft_tp { get; set; }
        public virtual DbSet<prco_proccab> prco_proccab { get; set; }
        public virtual DbSet<prco_procmov> prco_procmov { get; set; }
        public virtual DbSet<prco_regra> prco_regra { get; set; }
        public virtual DbSet<prco_regratp> prco_regratp { get; set; }
        public virtual DbSet<pro_cockpit_tpinfo> pro_cockpit_tpinfo { get; set; }
        public virtual DbSet<pro_conf> pro_conf { get; set; }
        public virtual DbSet<proacert> proacerts { get; set; }
        public virtual DbSet<proalter> proalters { get; set; }
        public virtual DbSet<probarra> probarras { get; set; }
        public virtual DbSet<prochklisttp> prochklisttps { get; set; }
        public virtual DbSet<proclcusto> proclcustoes { get; set; }
        public virtual DbSet<procmpcalc> procmpcalcs { get; set; }
        public virtual DbSet<proctativi> proctativis { get; set; }
        public virtual DbSet<proctativi_rec> proctativi_rec { get; set; }
        public virtual DbSet<proctattp> proctattps { get; set; }
        public virtual DbSet<proctrab> proctrabs { get; set; }
        public virtual DbSet<proctrabimg> proctrabimgs { get; set; }
        public virtual DbSet<proctrabtpimg> proctrabtpimgs { get; set; }
        public virtual DbSet<proctrest> proctrests { get; set; }
        public virtual DbSet<procusto> procustos { get; set; }
        public virtual DbSet<procustotp> procustotps { get; set; }
        public virtual DbSet<produto> produtoes { get; set; }
        public virtual DbSet<proengversao> proengversaos { get; set; }
        public virtual DbSet<proestru> proestrus { get; set; }
        public virtual DbSet<proestruref> proestrurefs { get; set; }
        public virtual DbSet<proestsubpro> proestsubproes { get; set; }
        public virtual DbSet<proesttar> proesttars { get; set; }
        public virtual DbSet<proferramenta> proferramentas { get; set; }
        public virtual DbSet<profisc_servxufxcl> profisc_servxufxcl { get; set; }
        public virtual DbSet<profoto> profotoes { get; set; }
        public virtual DbSet<proftconv> proftconvs { get; set; }
        public virtual DbSet<proinfo> proinfoes { get; set; }
        public virtual DbSet<proinventar> proinventars { get; set; }
        public virtual DbSet<prolgmv_tp> prolgmv_tp { get; set; }
        public virtual DbSet<prolink> prolinks { get; set; }
        public virtual DbSet<prolock> prolocks { get; set; }
        public virtual DbSet<prolog> prologs { get; set; }
        public virtual DbSet<promburro> promburroes { get; set; }
        public virtual DbSet<proneccalc> proneccalcs { get; set; }
        public virtual DbSet<proneccalc_t> proneccalc_t { get; set; }
        public virtual DbSet<proneccalctar> proneccalctars { get; set; }
        public virtual DbSet<proneccalcvar> proneccalcvars { get; set; }
        public virtual DbSet<proneccomp> proneccomps { get; set; }
        public virtual DbSet<pronecconf> pronecconfs { get; set; }
        public virtual DbSet<pronecmanu> pronecmanus { get; set; }
        public virtual DbSet<pronecorigem> pronecorigems { get; set; }
        public virtual DbSet<pronecprin> pronecprins { get; set; }
        public virtual DbSet<pronecprod> pronecprods { get; set; }
        public virtual DbSet<pronecprodvar> pronecprodvars { get; set; }
        public virtual DbSet<pronutri> pronutris { get; set; }
        public virtual DbSet<proopc_preco> proopc_preco { get; set; }
        public virtual DbSet<proopcio> proopcios { get; set; }
        public virtual DbSet<prooperacao> prooperacaos { get; set; }
        public virtual DbSet<propcven> propcvens { get; set; }
        public virtual DbSet<propesovar> propesovars { get; set; }
        public virtual DbSet<proplntipo> proplntipoes { get; set; }
        public virtual DbSet<proprfoto> proprfotoes { get; set; }
        public virtual DbSet<proprftpai> proprftpais { get; set; }
        public virtual DbSet<proprtpfoto> proprtpfotoes { get; set; }
        public virtual DbSet<prorec_familrec> prorec_familrec { get; set; }
        public virtual DbSet<prorec_familrecimg> prorec_familrecimg { get; set; }
        public virtual DbSet<prorec_familrectpimg> prorec_familrectpimg { get; set; }
        public virtual DbSet<prorec_progstd> prorec_progstd { get; set; }
        public virtual DbSet<prorec_recursoimg> prorec_recursoimg { get; set; }
        public virtual DbSet<prorec_recursotpimg> prorec_recursotpimg { get; set; }
        public virtual DbSet<prorec_staplaneja> prorec_staplaneja { get; set; }
        public virtual DbSet<prorec_tpplaneja> prorec_tpplaneja { get; set; }
        public virtual DbSet<prorec_tpplanner> prorec_tpplanner { get; set; }
        public virtual DbSet<prorec_tpprogextra> prorec_tpprogextra { get; set; }
        public virtual DbSet<prorec_tprealizado> prorec_tprealizado { get; set; }
        public virtual DbSet<prorec_tprecurso> prorec_tprecurso { get; set; }
        public virtual DbSet<protarefa> protarefas { get; set; }
        public virtual DbSet<protarinfo> protarinfoes { get; set; }
        public virtual DbSet<protarinstru> protarinstrus { get; set; }
        public virtual DbSet<protarxfer> protarxfers { get; set; }
        public virtual DbSet<protp> protps { get; set; }
        public virtual DbSet<protpfer> protpfers { get; set; }
        public virtual DbSet<protpinstru> protpinstrus { get; set; }
        public virtual DbSet<protplocal> protplocals { get; set; }
        public virtual DbSet<protpvarval> protpvarvals { get; set; }
        public virtual DbSet<provariacao> provariacaos { get; set; }
        public virtual DbSet<proxcust> proxcusts { get; set; }
        public virtual DbSet<proxfor> proxfors { get; set; }
        public virtual DbSet<proxgrade> proxgrades { get; set; }
        public virtual DbSet<proxgrp> proxgrps { get; set; }
        public virtual DbSet<proxopt> proxopts { get; set; }
        public virtual DbSet<rem_log> rem_log { get; set; }
        public virtual DbSet<rem_proc> rem_proc { get; set; }
        public virtual DbSet<rem_refsta> rem_refsta { get; set; }
        public virtual DbSet<rem_tpinfo> rem_tpinfo { get; set; }
        public virtual DbSet<respcompet> respcompets { get; set; }
        public virtual DbSet<respdepen> respdepens { get; set; }
        public virtual DbSet<respdisp> respdisps { get; set; }
        public virtual DbSet<respevento> respeventoes { get; set; }
        public virtual DbSet<respfoto> respfotoes { get; set; }
        public virtual DbSet<respfuncomp> respfuncomps { get; set; }
        public virtual DbSet<respfuncresp> respfuncresps { get; set; }
        public virtual DbSet<respgookey> respgookeys { get; set; }
        public virtual DbSet<respinfo> respinfoes { get; set; }
        public virtual DbSet<resplog> resplogs { get; set; }
        public virtual DbSet<responsa> responsas { get; set; }
        public virtual DbSet<respregimecontr> respregimecontrs { get; set; }
        public virtual DbSet<respresponsa> respresponsas { get; set; }
        public virtual DbSet<resptpdep> resptpdeps { get; set; }
        public virtual DbSet<respxgrupo> respxgrupoes { get; set; }
        public virtual DbSet<romaneioxped_temp_gina> romaneioxped_temp_gina { get; set; }
        public virtual DbSet<romaneioxped_temp_ivens> romaneioxped_temp_ivens { get; set; }
        public virtual DbSet<romaneioxped_temp_junior> romaneioxped_temp_junior { get; set; }
        public virtual DbSet<romaneioxped_temp_monique> romaneioxped_temp_monique { get; set; }
        public virtual DbSet<romaneioxped_temp_paula> romaneioxped_temp_paula { get; set; }
        public virtual DbSet<romaneioxped_temp_viviane> romaneioxped_temp_viviane { get; set; }
        public virtual DbSet<romaneioxped_tempcintia> romaneioxped_tempcintia { get; set; }
        public virtual DbSet<romaneioxped_tempedmea> romaneioxped_tempedmea { get; set; }
        public virtual DbSet<romaneioxped_tempelianacns> romaneioxped_tempelianacns { get; set; }
        public virtual DbSet<romaneioxped_tempgina> romaneioxped_tempgina { get; set; }
        public virtual DbSet<romaneioxped_tempivens> romaneioxped_tempivens { get; set; }
        public virtual DbSet<romaneioxped_tempmarcelo> romaneioxped_tempmarcelo { get; set; }
        public virtual DbSet<romaneioxped_tempmateuscns> romaneioxped_tempmateuscns { get; set; }
        public virtual DbSet<romaneioxped_temppaula> romaneioxped_temppaula { get; set; }
        public virtual DbSet<romaneioxped_temprafaelkcns> romaneioxped_temprafaelkcns { get; set; }
        public virtual DbSet<romaneioxped_temproberto> romaneioxped_temproberto { get; set; }
        public virtual DbSet<romaneioxped_temprodrigocns> romaneioxped_temprodrigocns { get; set; }
        public virtual DbSet<rot_chkgabarito> rot_chkgabarito { get; set; }
        public virtual DbSet<rot_chklist> rot_chklist { get; set; }
        public virtual DbSet<rot_chkstatus> rot_chkstatus { get; set; }
        public virtual DbSet<rot_chktp> rot_chktp { get; set; }
        public virtual DbSet<rot_dialogo> rot_dialogo { get; set; }
        public virtual DbSet<rot_dialogolido> rot_dialogolido { get; set; }
        public virtual DbSet<rot_envolgab> rot_envolgab { get; set; }
        public virtual DbSet<rot_local> rot_local { get; set; }
        public virtual DbSet<rot_log> rot_log { get; set; }
        public virtual DbSet<rot_ocorenvol> rot_ocorenvol { get; set; }
        public virtual DbSet<rot_ocorimg> rot_ocorimg { get; set; }
        public virtual DbSet<rot_ocorlog> rot_ocorlog { get; set; }
        public virtual DbSet<rot_ocorrencia> rot_ocorrencia { get; set; }
        public virtual DbSet<rot_ocorstatus> rot_ocorstatus { get; set; }
        public virtual DbSet<rot_ocortp> rot_ocortp { get; set; }
        public virtual DbSet<rot_ocortpimg> rot_ocortpimg { get; set; }
        public virtual DbSet<rot_perfil> rot_perfil { get; set; }
        public virtual DbSet<rot_provcateg> rot_provcateg { get; set; }
        public virtual DbSet<rot_provclass> rot_provclass { get; set; }
        public virtual DbSet<rot_provclassfecha> rot_provclassfecha { get; set; }
        public virtual DbSet<rot_provgab> rot_provgab { get; set; }
        public virtual DbSet<rot_providencia> rot_providencia { get; set; }
        public virtual DbSet<rot_provlog> rot_provlog { get; set; }
        public virtual DbSet<rot_provstatus> rot_provstatus { get; set; }
        public virtual DbSet<rot_provtipo> rot_provtipo { get; set; }
        public virtual DbSet<rot_provtpderiv> rot_provtpderiv { get; set; }
        public virtual DbSet<rot_provurgencia> rot_provurgencia { get; set; }
        public virtual DbSet<rot_status> rot_status { get; set; }
        public virtual DbSet<rot_tpfecha> rot_tpfecha { get; set; }
        public virtual DbSet<rot_tpturno> rot_tpturno { get; set; }
        public virtual DbSet<roturno> roturnoes { get; set; }
        public virtual DbSet<sai_conf> sai_conf { get; set; }
        public virtual DbSet<saistat> saistats { get; set; }
        public virtual DbSet<sccn_inspagrup> sccn_inspagrup { get; set; }
        public virtual DbSet<sccn_inspcnf> sccn_inspcnf { get; set; }
        public virtual DbSet<se_email_log> se_email_log { get; set; }
        public virtual DbSet<se_emails_env> se_emails_env { get; set; }
        public virtual DbSet<se_grupo_email> se_grupo_email { get; set; }
        public virtual DbSet<sped_log> sped_log { get; set; }
        public virtual DbSet<temp_alessandro_libqtd> temp_alessandro_libqtd { get; set; }
        public virtual DbSet<temp_cobimpor> temp_cobimpor { get; set; }
        public virtual DbSet<temp_cockpitmater_info_jonas> temp_cockpitmater_info_jonas { get; set; }
        public virtual DbSet<temp_cockpitmater_info_marcelo> temp_cockpitmater_info_marcelo { get; set; }
        public virtual DbSet<temp_cockpitmater_info_paula> temp_cockpitmater_info_paula { get; set; }
        public virtual DbSet<temp_cockpitmater_info_tatiane> temp_cockpitmater_info_tatiane { get; set; }
        public virtual DbSet<temp_cockpitmater_pro_jonas> temp_cockpitmater_pro_jonas { get; set; }
        public virtual DbSet<temp_cockpitmater_pro_marcelo> temp_cockpitmater_pro_marcelo { get; set; }
        public virtual DbSet<temp_cockpitmater_pro_paula> temp_cockpitmater_pro_paula { get; set; }
        public virtual DbSet<temp_cockpitmater_pro_tatiane> temp_cockpitmater_pro_tatiane { get; set; }
        public virtual DbSet<temp_cockpitmater_qtd_jonas> temp_cockpitmater_qtd_jonas { get; set; }
        public virtual DbSet<temp_cockpitmater_qtd_marcelo> temp_cockpitmater_qtd_marcelo { get; set; }
        public virtual DbSet<temp_cockpitmater_qtd_paula> temp_cockpitmater_qtd_paula { get; set; }
        public virtual DbSet<temp_cockpitmater_qtd_tatiane> temp_cockpitmater_qtd_tatiane { get; set; }
        public virtual DbSet<temp_engpos_a> temp_engpos_a { get; set; }
        public virtual DbSet<temp_engpos_assuero> temp_engpos_assuero { get; set; }
        public virtual DbSet<temp_engpos_brunoscns> temp_engpos_brunoscns { get; set; }
        public virtual DbSet<temp_engpos_ernando> temp_engpos_ernando { get; set; }
        public virtual DbSet<temp_engpos_gilmarcio> temp_engpos_gilmarcio { get; set; }
        public virtual DbSet<temp_engpos_gina> temp_engpos_gina { get; set; }
        public virtual DbSet<temp_engpos_isaac> temp_engpos_isaac { get; set; }
        public virtual DbSet<temp_engpos_ivens> temp_engpos_ivens { get; set; }
        public virtual DbSet<temp_engpos_jailson> temp_engpos_jailson { get; set; }
        public virtual DbSet<temp_engpos_jonas> temp_engpos_jonas { get; set; }
        public virtual DbSet<temp_engpos_junior> temp_engpos_junior { get; set; }
        public virtual DbSet<temp_engpos_marcelo> temp_engpos_marcelo { get; set; }
        public virtual DbSet<temp_engpos_marvin> temp_engpos_marvin { get; set; }
        public virtual DbSet<temp_engpos_paula> temp_engpos_paula { get; set; }
        public virtual DbSet<temp_entxped_edmea> temp_entxped_edmea { get; set; }
        public virtual DbSet<temp_entxped_edmea_f> temp_entxped_edmea_f { get; set; }
        public virtual DbSet<temp_entxped_gina> temp_entxped_gina { get; set; }
        public virtual DbSet<temp_entxped_gina_f> temp_entxped_gina_f { get; set; }
        public virtual DbSet<temp_entxped_ivens> temp_entxped_ivens { get; set; }
        public virtual DbSet<temp_entxped_ivens_f> temp_entxped_ivens_f { get; set; }
        public virtual DbSet<temp_entxped_paula> temp_entxped_paula { get; set; }
        public virtual DbSet<temp_entxped_paula_f> temp_entxped_paula_f { get; set; }
        public virtual DbSet<temp_jonas_compedprod> temp_jonas_compedprod { get; set; }
        public virtual DbSet<temp_luis_libqtd> temp_luis_libqtd { get; set; }
        public virtual DbSet<temp_montaregralote> temp_montaregralote { get; set; }
        public virtual DbSet<temp_opconsu_alexandre> temp_opconsu_alexandre { get; set; }
        public virtual DbSet<temp_opconsu_alexandre_f> temp_opconsu_alexandre_f { get; set; }
        public virtual DbSet<temp_opconsu_assuero> temp_opconsu_assuero { get; set; }
        public virtual DbSet<temp_opconsu_assuero_f> temp_opconsu_assuero_f { get; set; }
        public virtual DbSet<temp_opconsu_claudiana> temp_opconsu_claudiana { get; set; }
        public virtual DbSet<temp_opconsu_claudiana_f> temp_opconsu_claudiana_f { get; set; }
        public virtual DbSet<temp_opconsu_edmea> temp_opconsu_edmea { get; set; }
        public virtual DbSet<temp_opconsu_edmea_f> temp_opconsu_edmea_f { get; set; }
        public virtual DbSet<temp_opconsu_ernando> temp_opconsu_ernando { get; set; }
        public virtual DbSet<temp_opconsu_ernando_f> temp_opconsu_ernando_f { get; set; }
        public virtual DbSet<temp_opconsu_gilmarcio> temp_opconsu_gilmarcio { get; set; }
        public virtual DbSet<temp_opconsu_gilmarcio_f> temp_opconsu_gilmarcio_f { get; set; }
        public virtual DbSet<temp_opconsu_gina> temp_opconsu_gina { get; set; }
        public virtual DbSet<temp_opconsu_gina_f> temp_opconsu_gina_f { get; set; }
        public virtual DbSet<temp_opconsu_ivens> temp_opconsu_ivens { get; set; }
        public virtual DbSet<temp_opconsu_ivens_f> temp_opconsu_ivens_f { get; set; }
        public virtual DbSet<temp_opconsu_jailson> temp_opconsu_jailson { get; set; }
        public virtual DbSet<temp_opconsu_jailson_f> temp_opconsu_jailson_f { get; set; }
        public virtual DbSet<temp_opconsu_jonas> temp_opconsu_jonas { get; set; }
        public virtual DbSet<temp_opconsu_jonas_f> temp_opconsu_jonas_f { get; set; }
        public virtual DbSet<temp_opconsu_paula> temp_opconsu_paula { get; set; }
        public virtual DbSet<temp_opconsu_paula_f> temp_opconsu_paula_f { get; set; }
        public virtual DbSet<temp_opprod_alexandre> temp_opprod_alexandre { get; set; }
        public virtual DbSet<temp_opprod_alexandre_f> temp_opprod_alexandre_f { get; set; }
        public virtual DbSet<temp_opprod_assuero> temp_opprod_assuero { get; set; }
        public virtual DbSet<temp_opprod_assuero_f> temp_opprod_assuero_f { get; set; }
        public virtual DbSet<temp_opprod_claudiana> temp_opprod_claudiana { get; set; }
        public virtual DbSet<temp_opprod_claudiana_f> temp_opprod_claudiana_f { get; set; }
        public virtual DbSet<temp_opprod_edmea> temp_opprod_edmea { get; set; }
        public virtual DbSet<temp_opprod_edmea_f> temp_opprod_edmea_f { get; set; }
        public virtual DbSet<temp_opprod_ernando> temp_opprod_ernando { get; set; }
        public virtual DbSet<temp_opprod_ernando_f> temp_opprod_ernando_f { get; set; }
        public virtual DbSet<temp_opprod_gilmarcio> temp_opprod_gilmarcio { get; set; }
        public virtual DbSet<temp_opprod_gilmarcio_f> temp_opprod_gilmarcio_f { get; set; }
        public virtual DbSet<temp_opprod_gina> temp_opprod_gina { get; set; }
        public virtual DbSet<temp_opprod_gina_f> temp_opprod_gina_f { get; set; }
        public virtual DbSet<temp_opprod_ivens> temp_opprod_ivens { get; set; }
        public virtual DbSet<temp_opprod_ivens_f> temp_opprod_ivens_f { get; set; }
        public virtual DbSet<temp_opprod_jailson> temp_opprod_jailson { get; set; }
        public virtual DbSet<temp_opprod_jailson_f> temp_opprod_jailson_f { get; set; }
        public virtual DbSet<temp_opprod_jonas> temp_opprod_jonas { get; set; }
        public virtual DbSet<temp_opprod_jonas_f> temp_opprod_jonas_f { get; set; }
        public virtual DbSet<temp_opprod_paula> temp_opprod_paula { get; set; }
        public virtual DbSet<temp_opprod_paula_f> temp_opprod_paula_f { get; set; }
        public virtual DbSet<temp_paula_compedprod> temp_paula_compedprod { get; set; }
        public virtual DbSet<temp_paula_libqtd> temp_paula_libqtd { get; set; }
        public virtual DbSet<temp_pedmonitsta_marcelo> temp_pedmonitsta_marcelo { get; set; }
        public virtual DbSet<temp_pedmonitsta_paula> temp_pedmonitsta_paula { get; set; }
        public virtual DbSet<temp_pedmonitsta_tatiane> temp_pedmonitsta_tatiane { get; set; }
        public virtual DbSet<temp_prodatendido> temp_prodatendido { get; set; }
        public virtual DbSet<temp_prodped> temp_prodped { get; set; }
        public virtual DbSet<temp_prodproduzido> temp_prodproduzido { get; set; }
        public virtual DbSet<temp_raquel_libqtd> temp_raquel_libqtd { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_a> temp_rateio_aprven_pedido_a { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_alexandre> temp_rateio_aprven_pedido_alexandre { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_brunofcns> temp_rateio_aprven_pedido_brunofcns { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_claudiana> temp_rateio_aprven_pedido_claudiana { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_edmea> temp_rateio_aprven_pedido_edmea { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_ernando> temp_rateio_aprven_pedido_ernando { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_eunice> temp_rateio_aprven_pedido_eunice { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_gilmarcio> temp_rateio_aprven_pedido_gilmarcio { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_gina> temp_rateio_aprven_pedido_gina { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_ivens> temp_rateio_aprven_pedido_ivens { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_julio> temp_rateio_aprven_pedido_julio { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_junior> temp_rateio_aprven_pedido_junior { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_leonardomcns> temp_rateio_aprven_pedido_leonardomcns { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_luis> temp_rateio_aprven_pedido_luis { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_monique> temp_rateio_aprven_pedido_monique { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_norberto> temp_rateio_aprven_pedido_norberto { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_paula> temp_rateio_aprven_pedido_paula { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_raquel> temp_rateio_aprven_pedido_raquel { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_renatomcns> temp_rateio_aprven_pedido_renatomcns { get; set; }
        public virtual DbSet<temp_rateio_aprven_pedido_teste> temp_rateio_aprven_pedido_teste { get; set; }
        public virtual DbSet<temp_rateio_entrada_alexandre> temp_rateio_entrada_alexandre { get; set; }
        public virtual DbSet<temp_rateio_entrada_amauri> temp_rateio_entrada_amauri { get; set; }
        public virtual DbSet<temp_rateio_entrada_assuero> temp_rateio_entrada_assuero { get; set; }
        public virtual DbSet<temp_rateio_entrada_brunofcns> temp_rateio_entrada_brunofcns { get; set; }
        public virtual DbSet<temp_rateio_entrada_camilocns> temp_rateio_entrada_camilocns { get; set; }
        public virtual DbSet<temp_rateio_entrada_claudiana> temp_rateio_entrada_claudiana { get; set; }
        public virtual DbSet<temp_rateio_entrada_edmea> temp_rateio_entrada_edmea { get; set; }
        public virtual DbSet<temp_rateio_entrada_elianagcns> temp_rateio_entrada_elianagcns { get; set; }
        public virtual DbSet<temp_rateio_entrada_ernando> temp_rateio_entrada_ernando { get; set; }
        public virtual DbSet<temp_rateio_entrada_gilmarcio> temp_rateio_entrada_gilmarcio { get; set; }
        public virtual DbSet<temp_rateio_entrada_gina> temp_rateio_entrada_gina { get; set; }
        public virtual DbSet<temp_rateio_entrada_ivens> temp_rateio_entrada_ivens { get; set; }
        public virtual DbSet<temp_rateio_entrada_jailson> temp_rateio_entrada_jailson { get; set; }
        public virtual DbSet<temp_rateio_entrada_jonas> temp_rateio_entrada_jonas { get; set; }
        public virtual DbSet<temp_rateio_entrada_kelly> temp_rateio_entrada_kelly { get; set; }
        public virtual DbSet<temp_rateio_entrada_luis> temp_rateio_entrada_luis { get; set; }
        public virtual DbSet<temp_rateio_entrada_marvin> temp_rateio_entrada_marvin { get; set; }
        public virtual DbSet<temp_rateio_entrada_paula> temp_rateio_entrada_paula { get; set; }
        public virtual DbSet<temp_rateio_entrada_serginhocns> temp_rateio_entrada_serginhocns { get; set; }
        public virtual DbSet<temp_rateio_entrada_tatiane> temp_rateio_entrada_tatiane { get; set; }
        public virtual DbSet<temp_rateio_entrada_teresaacns> temp_rateio_entrada_teresaacns { get; set; }
        public virtual DbSet<temp_rateio_entrada_teste> temp_rateio_entrada_teste { get; set; }
        public virtual DbSet<temp_rateio_entrada_thiago> temp_rateio_entrada_thiago { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_a> temp_rateio_fecven_pedido_a { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_alessandro> temp_rateio_fecven_pedido_alessandro { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_andrecns> temp_rateio_fecven_pedido_andrecns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_assuero> temp_rateio_fecven_pedido_assuero { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_auditoria> temp_rateio_fecven_pedido_auditoria { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_brunofcns> temp_rateio_fecven_pedido_brunofcns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_brunoscns> temp_rateio_fecven_pedido_brunoscns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_cintia> temp_rateio_fecven_pedido_cintia { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_elianagcns> temp_rateio_fecven_pedido_elianagcns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_eunice> temp_rateio_fecven_pedido_eunice { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_gina> temp_rateio_fecven_pedido_gina { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_ivens> temp_rateio_fecven_pedido_ivens { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_jonas> temp_rateio_fecven_pedido_jonas { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_julio> temp_rateio_fecven_pedido_julio { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_junior> temp_rateio_fecven_pedido_junior { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_luis> temp_rateio_fecven_pedido_luis { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_marcelo> temp_rateio_fecven_pedido_marcelo { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_monique> temp_rateio_fecven_pedido_monique { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_nicolemcns> temp_rateio_fecven_pedido_nicolemcns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_norberto> temp_rateio_fecven_pedido_norberto { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_paula> temp_rateio_fecven_pedido_paula { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_raquel> temp_rateio_fecven_pedido_raquel { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_renatomcns> temp_rateio_fecven_pedido_renatomcns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_ricardobcns> temp_rateio_fecven_pedido_ricardobcns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_samerscns> temp_rateio_fecven_pedido_samerscns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_teresaacns> temp_rateio_fecven_pedido_teresaacns { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_viviane> temp_rateio_fecven_pedido_viviane { get; set; }
        public virtual DbSet<temp_rateio_fecven_pedido_williamccns> temp_rateio_fecven_pedido_williamccns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_alessandro> temp_rateio_lanven_pedido_alessandro { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_andrecns> temp_rateio_lanven_pedido_andrecns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_assuero> temp_rateio_lanven_pedido_assuero { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_auditoria> temp_rateio_lanven_pedido_auditoria { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_brunofcns> temp_rateio_lanven_pedido_brunofcns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_brunoscns> temp_rateio_lanven_pedido_brunoscns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_camilocns> temp_rateio_lanven_pedido_camilocns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_cintia> temp_rateio_lanven_pedido_cintia { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_diegoscns> temp_rateio_lanven_pedido_diegoscns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_edegardscns> temp_rateio_lanven_pedido_edegardscns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_eimy> temp_rateio_lanven_pedido_eimy { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_elianagcns> temp_rateio_lanven_pedido_elianagcns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_eunice> temp_rateio_lanven_pedido_eunice { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_gina> temp_rateio_lanven_pedido_gina { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_ivens> temp_rateio_lanven_pedido_ivens { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_jailson> temp_rateio_lanven_pedido_jailson { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_julio> temp_rateio_lanven_pedido_julio { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_junior> temp_rateio_lanven_pedido_junior { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_leandro> temp_rateio_lanven_pedido_leandro { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_luis> temp_rateio_lanven_pedido_luis { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_marcelo> temp_rateio_lanven_pedido_marcelo { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_monique> temp_rateio_lanven_pedido_monique { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_nicolemcns> temp_rateio_lanven_pedido_nicolemcns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_norberto> temp_rateio_lanven_pedido_norberto { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_paula> temp_rateio_lanven_pedido_paula { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_rafaelrcns> temp_rateio_lanven_pedido_rafaelrcns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_raquel> temp_rateio_lanven_pedido_raquel { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_renatomcns> temp_rateio_lanven_pedido_renatomcns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_roberto> temp_rateio_lanven_pedido_roberto { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_teresaacns> temp_rateio_lanven_pedido_teresaacns { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_teste> temp_rateio_lanven_pedido_teste { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_viviane> temp_rateio_lanven_pedido_viviane { get; set; }
        public virtual DbSet<temp_rateio_lanven_pedido_williamccns> temp_rateio_lanven_pedido_williamccns { get; set; }
        public virtual DbSet<temp_rateio_o_fecven_pedido_alessandro> temp_rateio_o_fecven_pedido_alessandro { get; set; }
        public virtual DbSet<temp_rateio_o_fecven_pedido_eimy> temp_rateio_o_fecven_pedido_eimy { get; set; }
        public virtual DbSet<temp_rateio_o_fecven_pedido_junior> temp_rateio_o_fecven_pedido_junior { get; set; }
        public virtual DbSet<temp_rateio_o_fecven_pedido_luis> temp_rateio_o_fecven_pedido_luis { get; set; }
        public virtual DbSet<temp_rateio_o_fecven_pedido_monique> temp_rateio_o_fecven_pedido_monique { get; set; }
        public virtual DbSet<temp_rateio_o_fecven_pedido_paula> temp_rateio_o_fecven_pedido_paula { get; set; }
        public virtual DbSet<temp_rateio_o_fecven_pedido_raquel> temp_rateio_o_fecven_pedido_raquel { get; set; }
        public virtual DbSet<temp_rateio_o_fecven_pedido_renatomcns> temp_rateio_o_fecven_pedido_renatomcns { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_alessandro> temp_rateio_o_lanven_pedido_alessandro { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_assuero> temp_rateio_o_lanven_pedido_assuero { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_auditoria> temp_rateio_o_lanven_pedido_auditoria { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_brunoscns> temp_rateio_o_lanven_pedido_brunoscns { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_eimy> temp_rateio_o_lanven_pedido_eimy { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_eunice> temp_rateio_o_lanven_pedido_eunice { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_gina> temp_rateio_o_lanven_pedido_gina { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_jailson> temp_rateio_o_lanven_pedido_jailson { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_jonas> temp_rateio_o_lanven_pedido_jonas { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_junior> temp_rateio_o_lanven_pedido_junior { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_luis> temp_rateio_o_lanven_pedido_luis { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_monique> temp_rateio_o_lanven_pedido_monique { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_norberto> temp_rateio_o_lanven_pedido_norberto { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_paula> temp_rateio_o_lanven_pedido_paula { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_raquel> temp_rateio_o_lanven_pedido_raquel { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_teresaacns> temp_rateio_o_lanven_pedido_teresaacns { get; set; }
        public virtual DbSet<temp_rateio_o_lanven_pedido_teste> temp_rateio_o_lanven_pedido_teste { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_brunofcns> temp_rateio_o_ven_pedido_brunofcns { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_eimy> temp_rateio_o_ven_pedido_eimy { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_gina> temp_rateio_o_ven_pedido_gina { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_jailson> temp_rateio_o_ven_pedido_jailson { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_leonardomcns> temp_rateio_o_ven_pedido_leonardomcns { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_luis> temp_rateio_o_ven_pedido_luis { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_monique> temp_rateio_o_ven_pedido_monique { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_paula> temp_rateio_o_ven_pedido_paula { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_raquel> temp_rateio_o_ven_pedido_raquel { get; set; }
        public virtual DbSet<temp_rateio_o_ven_pedido_teresaacns> temp_rateio_o_ven_pedido_teresaacns { get; set; }
        public virtual DbSet<temp_rateio_ped_recorrencia_claudiana> temp_rateio_ped_recorrencia_claudiana { get; set; }
        public virtual DbSet<temp_rateio_ped_recorrencia_ernando> temp_rateio_ped_recorrencia_ernando { get; set; }
        public virtual DbSet<temp_rateio_ped_recorrencia_gilmarcio> temp_rateio_ped_recorrencia_gilmarcio { get; set; }
        public virtual DbSet<temp_rateio_ped_recorrencia_gina> temp_rateio_ped_recorrencia_gina { get; set; }
        public virtual DbSet<temp_rateio_ped_recorrencia_leandro> temp_rateio_ped_recorrencia_leandro { get; set; }
        public virtual DbSet<temp_rateio_ped_recorrencia_paula> temp_rateio_ped_recorrencia_paula { get; set; }
        public virtual DbSet<temp_rateio_pedido_alexandre> temp_rateio_pedido_alexandre { get; set; }
        public virtual DbSet<temp_rateio_pedido_amauri> temp_rateio_pedido_amauri { get; set; }
        public virtual DbSet<temp_rateio_pedido_assuero> temp_rateio_pedido_assuero { get; set; }
        public virtual DbSet<temp_rateio_pedido_auditoria> temp_rateio_pedido_auditoria { get; set; }
        public virtual DbSet<temp_rateio_pedido_brunofcns> temp_rateio_pedido_brunofcns { get; set; }
        public virtual DbSet<temp_rateio_pedido_edmea> temp_rateio_pedido_edmea { get; set; }
        public virtual DbSet<temp_rateio_pedido_ernando> temp_rateio_pedido_ernando { get; set; }
        public virtual DbSet<temp_rateio_pedido_gilmarcio> temp_rateio_pedido_gilmarcio { get; set; }
        public virtual DbSet<temp_rateio_pedido_gina> temp_rateio_pedido_gina { get; set; }
        public virtual DbSet<temp_rateio_pedido_isaac> temp_rateio_pedido_isaac { get; set; }
        public virtual DbSet<temp_rateio_pedido_ivens> temp_rateio_pedido_ivens { get; set; }
        public virtual DbSet<temp_rateio_pedido_jailson> temp_rateio_pedido_jailson { get; set; }
        public virtual DbSet<temp_rateio_pedido_jonas> temp_rateio_pedido_jonas { get; set; }
        public virtual DbSet<temp_rateio_pedido_julio> temp_rateio_pedido_julio { get; set; }
        public virtual DbSet<temp_rateio_pedido_junior> temp_rateio_pedido_junior { get; set; }
        public virtual DbSet<temp_rateio_pedido_leonardomcns> temp_rateio_pedido_leonardomcns { get; set; }
        public virtual DbSet<temp_rateio_pedido_marcelo> temp_rateio_pedido_marcelo { get; set; }
        public virtual DbSet<temp_rateio_pedido_paula> temp_rateio_pedido_paula { get; set; }
        public virtual DbSet<temp_rateio_pedido_renatomcns> temp_rateio_pedido_renatomcns { get; set; }
        public virtual DbSet<temp_rateio_pedido_ricardobcns> temp_rateio_pedido_ricardobcns { get; set; }
        public virtual DbSet<temp_rateio_pedido_roberto> temp_rateio_pedido_roberto { get; set; }
        public virtual DbSet<temp_rateio_pedido_tatiane> temp_rateio_pedido_tatiane { get; set; }
        public virtual DbSet<temp_rateio_pedido_teresaacns> temp_rateio_pedido_teresaacns { get; set; }
        public virtual DbSet<temp_rateio_pedido_thiago> temp_rateio_pedido_thiago { get; set; }
        public virtual DbSet<temp_rateio_pedido_williamccns> temp_rateio_pedido_williamccns { get; set; }
        public virtual DbSet<temp_rateio_saida_a> temp_rateio_saida_a { get; set; }
        public virtual DbSet<temp_rateio_saida_alexandre> temp_rateio_saida_alexandre { get; set; }
        public virtual DbSet<temp_rateio_saida_amauri> temp_rateio_saida_amauri { get; set; }
        public virtual DbSet<temp_rateio_saida_assuero> temp_rateio_saida_assuero { get; set; }
        public virtual DbSet<temp_rateio_saida_brunofcns> temp_rateio_saida_brunofcns { get; set; }
        public virtual DbSet<temp_rateio_saida_cintia> temp_rateio_saida_cintia { get; set; }
        public virtual DbSet<temp_rateio_saida_claudiana> temp_rateio_saida_claudiana { get; set; }
        public virtual DbSet<temp_rateio_saida_edegardscns> temp_rateio_saida_edegardscns { get; set; }
        public virtual DbSet<temp_rateio_saida_edmea> temp_rateio_saida_edmea { get; set; }
        public virtual DbSet<temp_rateio_saida_erikaycns> temp_rateio_saida_erikaycns { get; set; }
        public virtual DbSet<temp_rateio_saida_ernando> temp_rateio_saida_ernando { get; set; }
        public virtual DbSet<temp_rateio_saida_gilmarcio> temp_rateio_saida_gilmarcio { get; set; }
        public virtual DbSet<temp_rateio_saida_gina> temp_rateio_saida_gina { get; set; }
        public virtual DbSet<temp_rateio_saida_ivens> temp_rateio_saida_ivens { get; set; }
        public virtual DbSet<temp_rateio_saida_jailson> temp_rateio_saida_jailson { get; set; }
        public virtual DbSet<temp_rateio_saida_jonas> temp_rateio_saida_jonas { get; set; }
        public virtual DbSet<temp_rateio_saida_junior> temp_rateio_saida_junior { get; set; }
        public virtual DbSet<temp_rateio_saida_kelly> temp_rateio_saida_kelly { get; set; }
        public virtual DbSet<temp_rateio_saida_luis> temp_rateio_saida_luis { get; set; }
        public virtual DbSet<temp_rateio_saida_marvin> temp_rateio_saida_marvin { get; set; }
        public virtual DbSet<temp_rateio_saida_monique> temp_rateio_saida_monique { get; set; }
        public virtual DbSet<temp_rateio_saida_norberto> temp_rateio_saida_norberto { get; set; }
        public virtual DbSet<temp_rateio_saida_paula> temp_rateio_saida_paula { get; set; }
        public virtual DbSet<temp_rateio_saida_teste> temp_rateio_saida_teste { get; set; }
        public virtual DbSet<temp_rateio_saida_williamccns> temp_rateio_saida_williamccns { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_a> temp_rateio_ven_pedido_a { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_alessandro> temp_rateio_ven_pedido_alessandro { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_alexandre> temp_rateio_ven_pedido_alexandre { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_amauri> temp_rateio_ven_pedido_amauri { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_andrecns> temp_rateio_ven_pedido_andrecns { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_assuero> temp_rateio_ven_pedido_assuero { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_brunofcns> temp_rateio_ven_pedido_brunofcns { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_cintia> temp_rateio_ven_pedido_cintia { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_edegardscns> temp_rateio_ven_pedido_edegardscns { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_edmea> temp_rateio_ven_pedido_edmea { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_eimy> temp_rateio_ven_pedido_eimy { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_ernando> temp_rateio_ven_pedido_ernando { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_eunice> temp_rateio_ven_pedido_eunice { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_gilmarcio> temp_rateio_ven_pedido_gilmarcio { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_gina> temp_rateio_ven_pedido_gina { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_ivens> temp_rateio_ven_pedido_ivens { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_jailson> temp_rateio_ven_pedido_jailson { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_jonas> temp_rateio_ven_pedido_jonas { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_julio> temp_rateio_ven_pedido_julio { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_junior> temp_rateio_ven_pedido_junior { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_leonardomcns> temp_rateio_ven_pedido_leonardomcns { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_luis> temp_rateio_ven_pedido_luis { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_marcelo> temp_rateio_ven_pedido_marcelo { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_marvin> temp_rateio_ven_pedido_marvin { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_monique> temp_rateio_ven_pedido_monique { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_norberto> temp_rateio_ven_pedido_norberto { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_paula> temp_rateio_ven_pedido_paula { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_raquel> temp_rateio_ven_pedido_raquel { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_roberto> temp_rateio_ven_pedido_roberto { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_teste> temp_rateio_ven_pedido_teste { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_viviane> temp_rateio_ven_pedido_viviane { get; set; }
        public virtual DbSet<temp_rateio_ven_pedido_williamccns> temp_rateio_ven_pedido_williamccns { get; set; }
        public virtual DbSet<temp_rateio_ven_recorrencia_alexandre> temp_rateio_ven_recorrencia_alexandre { get; set; }
        public virtual DbSet<temp_rateio_ven_recorrencia_gilmarcio> temp_rateio_ven_recorrencia_gilmarcio { get; set; }
        public virtual DbSet<temp_rateio_ven_recorrencia_junior> temp_rateio_ven_recorrencia_junior { get; set; }
        public virtual DbSet<temp_rateio_ven_recorrencia_luis> temp_rateio_ven_recorrencia_luis { get; set; }
        public virtual DbSet<temp_rateio_ven_recorrencia_norberto> temp_rateio_ven_recorrencia_norberto { get; set; }
        public virtual DbSet<temp_rateio_ven_recorrencia_viviane> temp_rateio_ven_recorrencia_viviane { get; set; }
        public virtual DbSet<tempprodped_ivens> tempprodped_ivens { get; set; }
        public virtual DbSet<tempprodped_luis> tempprodped_luis { get; set; }
        public virtual DbSet<tempprodped_norberto> tempprodped_norberto { get; set; }
        public virtual DbSet<tempprodped_paula> tempprodped_paula { get; set; }
        public virtual DbSet<tempprodped_viviane> tempprodped_viviane { get; set; }
        public virtual DbSet<tg_categoria> tg_categoria { get; set; }
        public virtual DbSet<tg_globalvars> tg_globalvars { get; set; }
        public virtual DbSet<tg_log> tg_log { get; set; }
        public virtual DbSet<tg_log_generico> tg_log_generico { get; set; }
        public virtual DbSet<tg_tarefa> tg_tarefa { get; set; }
        public virtual DbSet<tg_unidade> tg_unidade { get; set; }
        public virtual DbSet<tg_vars> tg_vars { get; set; }
        public virtual DbSet<tm_criterios> tm_criterios { get; set; }
        public virtual DbSet<tm_critxtpserv> tm_critxtpserv { get; set; }
        public virtual DbSet<tm_justific> tm_justific { get; set; }
        public virtual DbSet<tmp_brunoscns_crecrat> tmp_brunoscns_crecrat { get; set; }
        public virtual DbSet<tmp_cintia_cpagrat> tmp_cintia_cpagrat { get; set; }
        public virtual DbSet<tmp_cintia_crecrat> tmp_cintia_crecrat { get; set; }
        public virtual DbSet<tmp_cintia_fimovrat> tmp_cintia_fimovrat { get; set; }
        public virtual DbSet<tmp_cintia_ven_rateio> tmp_cintia_ven_rateio { get; set; }
        public virtual DbSet<tmp_edmea_cpagrat> tmp_edmea_cpagrat { get; set; }
        public virtual DbSet<tmp_edmea_pedrateio> tmp_edmea_pedrateio { get; set; }
        public virtual DbSet<tmp_elianagcns_ven_rateio> tmp_elianagcns_ven_rateio { get; set; }
        public virtual DbSet<tmp_gina_cpagrat> tmp_gina_cpagrat { get; set; }
        public virtual DbSet<tmp_gina_crecrat> tmp_gina_crecrat { get; set; }
        public virtual DbSet<tmp_gina_fimovrat> tmp_gina_fimovrat { get; set; }
        public virtual DbSet<tmp_gina_ven_rateio> tmp_gina_ven_rateio { get; set; }
        public virtual DbSet<tmp_ivens_cpagrat> tmp_ivens_cpagrat { get; set; }
        public virtual DbSet<tmp_ivens_fimovrat> tmp_ivens_fimovrat { get; set; }
        public virtual DbSet<tmp_ivens_ven_rateio> tmp_ivens_ven_rateio { get; set; }
        public virtual DbSet<tmp_julio_ajustesaldo> tmp_julio_ajustesaldo { get; set; }
        public virtual DbSet<tmp_julio_cpagrat> tmp_julio_cpagrat { get; set; }
        public virtual DbSet<tmp_junior_sairateio> tmp_junior_sairateio { get; set; }
        public virtual DbSet<tmp_monique_ven_rateio> tmp_monique_ven_rateio { get; set; }
        public virtual DbSet<tmp_nicolemcns_ven_rateio> tmp_nicolemcns_ven_rateio { get; set; }
        public virtual DbSet<tmp_norberto_ven_rateio> tmp_norberto_ven_rateio { get; set; }
        public virtual DbSet<tmp_paula_cpagrat> tmp_paula_cpagrat { get; set; }
        public virtual DbSet<tmp_paula_crecrat> tmp_paula_crecrat { get; set; }
        public virtual DbSet<tmp_paula_fimovrat> tmp_paula_fimovrat { get; set; }
        public virtual DbSet<tmp_paula_pedrateio> tmp_paula_pedrateio { get; set; }
        public virtual DbSet<tmp_paula_ven_rateio> tmp_paula_ven_rateio { get; set; }
        public virtual DbSet<tmp_roberto_cpagrat> tmp_roberto_cpagrat { get; set; }
        public virtual DbSet<tmp_teste_cpagrat> tmp_teste_cpagrat { get; set; }
        public virtual DbSet<tmp_teste_ven_rateio> tmp_teste_ven_rateio { get; set; }
        public virtual DbSet<tmp_thiago_pedrateio> tmp_thiago_pedrateio { get; set; }
        public virtual DbSet<tmp_vanessa_cpagrat> tmp_vanessa_cpagrat { get; set; }
        public virtual DbSet<tmp_williamccns_sairateio> tmp_williamccns_sairateio { get; set; }
        public virtual DbSet<torpedo> torpedoes { get; set; }
        public virtual DbSet<torpresp> torpresps { get; set; }
        public virtual DbSet<torptipo> torptipoes { get; set; }
        public virtual DbSet<un_banocpgto> un_banocpgto { get; set; }
        public virtual DbSet<un_criterio> un_criterio { get; set; }
        public virtual DbSet<un_loggeral> un_loggeral { get; set; }
        public virtual DbSet<un_medconv> un_medconv { get; set; }
        public virtual DbSet<un_pesqinfo> un_pesqinfo { get; set; }
        public virtual DbSet<un_pesqtipo> un_pesqtipo { get; set; }
        public virtual DbSet<un_pesquisa> un_pesquisa { get; set; }
        public virtual DbSet<ven_avaliaregra> ven_avaliaregra { get; set; }
        public virtual DbSet<ven_conf> ven_conf { get; set; }
        public virtual DbSet<ven_fase> ven_fase { get; set; }
        public virtual DbSet<ven_formapgparc> ven_formapgparc { get; set; }
        public virtual DbSet<ven_info> ven_info { get; set; }
        public virtual DbSet<ven_lote> ven_lote { get; set; }
        public virtual DbSet<ven_motbloq> ven_motbloq { get; set; }
        public virtual DbSet<ven_prodstatus> ven_prodstatus { get; set; }
        public virtual DbSet<ven_rec_hist> ven_rec_hist { get; set; }
        public virtual DbSet<ven_rec_info> ven_rec_info { get; set; }
        public virtual DbSet<ven_rec_log> ven_rec_log { get; set; }
        public virtual DbSet<ven_rec_prod> ven_rec_prod { get; set; }
        public virtual DbSet<ven_rec_prrat> ven_rec_prrat { get; set; }
        public virtual DbSet<ven_rec_tpinfo> ven_rec_tpinfo { get; set; }
        public virtual DbSet<ven_recorrencia> ven_recorrencia { get; set; }
        public virtual DbSet<ven_regitem> ven_regitem { get; set; }
        public virtual DbSet<ven_regra> ven_regra { get; set; }
        public virtual DbSet<ven_tpender> ven_tpender { get; set; }
        public virtual DbSet<ven_tpinfo> ven_tpinfo { get; set; }
        public virtual DbSet<ven_tplog> ven_tplog { get; set; }
        public virtual DbSet<ven_tpvender> ven_tpvender { get; set; }
        public virtual DbSet<ven_validacao> ven_validacao { get; set; }
        public virtual DbSet<ven_vendedor> ven_vendedor { get; set; }
        public virtual DbSet<ven_verdade> ven_verdade { get; set; }
        public virtual DbSet<ws_log> ws_log { get; set; }
        public virtual DbSet<ws_servpars> ws_servpars { get; set; }
        public virtual DbSet<ws_servxusu> ws_servxusu { get; set; }
        public virtual DbSet<ws_tipodado> ws_tipodado { get; set; }
        public virtual DbSet<ag_acoes> ag_acoes { get; set; }
        public virtual DbSet<ag_agenda> ag_agenda { get; set; }
        public virtual DbSet<ag_agenda_m> ag_agenda_m { get; set; }
        public virtual DbSet<ag_eveeditmp> ag_eveeditmp { get; set; }
        public virtual DbSet<ag_eventos> ag_eventos { get; set; }
        public virtual DbSet<ag_eventos_m> ag_eventos_m { get; set; }
        public virtual DbSet<ag_lembretes> ag_lembretes { get; set; }
        public virtual DbSet<amo> amoes { get; set; }
        public virtual DbSet<base_gerindice> base_gerindice { get; set; }
        public virtual DbSet<base_germoedaind_mov> base_germoedaind_mov { get; set; }
        public virtual DbSet<base_ivc_tpinfxtpivc> base_ivc_tpinfxtpivc { get; set; }
        public virtual DbSet<base_ven_tpgabaprova> base_ven_tpgabaprova { get; set; }
        public virtual DbSet<cobloteimpor> cobloteimpors { get; set; }
        public virtual DbSet<cotchklist> cotchklists { get; set; }
        public virtual DbSet<csmovimento> csmovimentoes { get; set; }
        public virtual DbSet<entextra> entextras { get; set; }
        public virtual DbSet<entinfo> entinfoes { get; set; }
        public virtual DbSet<entlog> entlogs { get; set; }
        public virtual DbSet<entprodu> entprodus { get; set; }
        public virtual DbSet<entrada> entradas { get; set; }
        public virtual DbSet<entrateio> entrateios { get; set; }
        public virtual DbSet<entvenc> entvencs { get; set; }
        public virtual DbSet<entxped_itens> entxped_itens { get; set; }
        public virtual DbSet<fatlinkfatxnfe> fatlinkfatxnfes { get; set; }
        public virtual DbSet<fisc_substitutoxuf> fisc_substitutoxuf { get; set; }
        public virtual DbSet<geddoc> geddocs { get; set; }
        public virtual DbSet<geddocarq> geddocarqs { get; set; }
        public virtual DbSet<geddocarqant> geddocarqants { get; set; }
        public virtual DbSet<gedfluxopub> gedfluxopubs { get; set; }
        public virtual DbSet<gedlink> gedlinks { get; set; }
        public virtual DbSet<gedlog> gedlogs { get; set; }
        public virtual DbSet<gedtipdoc_cmp> gedtipdoc_cmp { get; set; }
        public virtual DbSet<ger_midia> ger_midia { get; set; }
        public virtual DbSet<ger_midialink> ger_midialink { get; set; }
        public virtual DbSet<gerferiado> gerferiadoes { get; set; }
        public virtual DbSet<gerlogsincro> gerlogsincroes { get; set; }
        public virtual DbSet<itens_saixped> itens_saixped { get; set; }
        public virtual DbSet<ivc_invoice> ivc_invoice { get; set; }
        public virtual DbSet<ivc_packlist> ivc_packlist { get; set; }
        public virtual DbSet<ivc_produto> ivc_produto { get; set; }
        public virtual DbSet<mi_carrinho> mi_carrinho { get; set; }
        public virtual DbSet<mi_kitprod> mi_kitprod { get; set; }
        public virtual DbSet<mi_prod> mi_prod { get; set; }
        public virtual DbSet<movfci> movfcis { get; set; }
        public virtual DbSet<mp_monitproc> mp_monitproc { get; set; }
        public virtual DbSet<mp_monitregs> mp_monitregs { get; set; }
        public virtual DbSet<nfe_cce> nfe_cce { get; set; }
        public virtual DbSet<op> ops { get; set; }
        public virtual DbSet<op_item> op_item { get; set; }
        public virtual DbSet<op_linkconpro> op_linkconpro { get; set; }
        public virtual DbSet<op_linksubpro> op_linksubpro { get; set; }
        public virtual DbSet<op_linktarpro> op_linktarpro { get; set; }
        public virtual DbSet<op_tarefa> op_tarefa { get; set; }
        public virtual DbSet<os_atvplconf> os_atvplconf { get; set; }
        public virtual DbSet<patrimonio> patrimonios { get; set; }
        public virtual DbSet<pct_endereco> pct_endereco { get; set; }
        public virtual DbSet<pct_info> pct_info { get; set; }
        public virtual DbSet<pct_item> pct_item { get; set; }
        public virtual DbSet<pct_pacote> pct_pacote { get; set; }
        public virtual DbSet<pedender> pedenders { get; set; }
        public virtual DbSet<pedextra> pedextras { get; set; }
        public virtual DbSet<pedformapgparc> pedformapgparcs { get; set; }
        public virtual DbSet<pedido> pedidoes { get; set; }
        public virtual DbSet<pedinfo> pedinfoes { get; set; }
        public virtual DbSet<pedlog> pedlogs { get; set; }
        public virtual DbSet<pedprodu> pedprodus { get; set; }
        public virtual DbSet<pedprodudet> pedprodudets { get; set; }
        public virtual DbSet<pedrateio> pedrateios { get; set; }
        public virtual DbSet<pedrepre> pedrepres { get; set; }
        public virtual DbSet<pedvenc> pedvencs { get; set; }
        public virtual DbSet<pesindicador> pesindicadors { get; set; }
        public virtual DbSet<pinv_fecha> pinv_fecha { get; set; }
        public virtual DbSet<pinv_it_hfisc> pinv_it_hfisc { get; set; }
        public virtual DbSet<pinv_it_hreal> pinv_it_hreal { get; set; }
        public virtual DbSet<pinv_item> pinv_item { get; set; }
        public virtual DbSet<pinv_log> pinv_log { get; set; }
        public virtual DbSet<plan_fanotacao> plan_fanotacao { get; set; }
        public virtual DbSet<plan_fatos> plan_fatos { get; set; }
        public virtual DbSet<procargatrib> procargatribs { get; set; }
        public virtual DbSet<prochklist> prochklists { get; set; }
        public virtual DbSet<procustotempo> procustotempoes { get; set; }
        public virtual DbSet<profisc_prodxclfisc> profisc_prodxclfisc { get; set; }
        public virtual DbSet<profisc_recupera> profisc_recupera { get; set; }
        public virtual DbSet<proicmaliq> proicmaliqs { get; set; }
        public virtual DbSet<proissaliq> proissaliqs { get; set; }
        public virtual DbSet<prolgmv> prolgmvs { get; set; }
        public virtual DbSet<proplnprod> proplnprods { get; set; }
        public virtual DbSet<proplnprod_dt> proplnprod_dt { get; set; }
        public virtual DbSet<proqtd> proqtds { get; set; }
        public virtual DbSet<proqtdtmp> proqtdtmps { get; set; }
        public virtual DbSet<proqtdvarlote> proqtdvarlotes { get; set; }
        public virtual DbSet<prorec_familrecxetar> prorec_familrecxetar { get; set; }
        public virtual DbSet<prorec_familrecxrec> prorec_familrecxrec { get; set; }
        public virtual DbSet<prorec_familrecxtar> prorec_familrecxtar { get; set; }
        public virtual DbSet<prorec_planeja> prorec_planeja { get; set; }
        public virtual DbSet<prorec_planner> prorec_planner { get; set; }
        public virtual DbSet<prorec_planrec> prorec_planrec { get; set; }
        public virtual DbSet<prorec_predecessao> prorec_predecessao { get; set; }
        public virtual DbSet<prorec_progextra> prorec_progextra { get; set; }
        public virtual DbSet<prorec_progstddisp> prorec_progstddisp { get; set; }
        public virtual DbSet<prorec_realizado> prorec_realizado { get; set; }
        public virtual DbSet<prorec_rec_custo> prorec_rec_custo { get; set; }
        public virtual DbSet<prorec_recurso> prorec_recurso { get; set; }
        public virtual DbSet<proxoperacao> proxoperacaos { get; set; }
        public virtual DbSet<rem_fecha> rem_fecha { get; set; }
        public virtual DbSet<rem_param> rem_param { get; set; }
        public virtual DbSet<rem_refer> rem_refer { get; set; }
        public virtual DbSet<saida> saidas { get; set; }
        public virtual DbSet<saiextra> saiextras { get; set; }
        public virtual DbSet<saiinfo> saiinfoes { get; set; }
        public virtual DbSet<sailog> sailogs { get; set; }
        public virtual DbSet<saiprodu> saiprodus { get; set; }
        public virtual DbSet<sairateio> sairateios { get; set; }
        public virtual DbSet<saivenc> saivencs { get; set; }
        public virtual DbSet<sccn_gadgets> sccn_gadgets { get; set; }
        public virtual DbSet<sccn_ggetuser> sccn_ggetuser { get; set; }
        public virtual DbSet<sccn_ggetuvars> sccn_ggetuvars { get; set; }
        public virtual DbSet<sccn_ggetvars> sccn_ggetvars { get; set; }
        public virtual DbSet<sccn_panels> sccn_panels { get; set; }
        public virtual DbSet<sccn_panvars> sccn_panvars { get; set; }
        public virtual DbSet<se_email> se_email { get; set; }
        public virtual DbSet<se_email_entr> se_email_entr { get; set; }
        public virtual DbSet<se_email_entranexo> se_email_entranexo { get; set; }
        public virtual DbSet<sped_efd_0120> sped_efd_0120 { get; set; }
        public virtual DbSet<sped_efd_0145> sped_efd_0145 { get; set; }
        public virtual DbSet<sped_efd_0208> sped_efd_0208 { get; set; }
        public virtual DbSet<sped_efd_p010> sped_efd_p010 { get; set; }
        public virtual DbSet<sped_efd_p100> sped_efd_p100 { get; set; }
        public virtual DbSet<sped_efd_p110> sped_efd_p110 { get; set; }
        public virtual DbSet<sped_efd_p119> sped_efd_p119 { get; set; }
        public virtual DbSet<sped_efd_p200> sped_efd_p200 { get; set; }
        public virtual DbSet<sped_efd_p210> sped_efd_p210 { get; set; }
        public virtual DbSet<sped_fiscal_1600> sped_fiscal_1600 { get; set; }
        public virtual DbSet<sped_proc> sped_proc { get; set; }
        public virtual DbSet<sped_procvars> sped_procvars { get; set; }
        public virtual DbSet<sped_variaveis> sped_variaveis { get; set; }
        public virtual DbSet<un_pesqestru> un_pesqestru { get; set; }
        public virtual DbSet<un_pesqlog> un_pesqlog { get; set; }
        public virtual DbSet<un_pesqresp> un_pesqresp { get; set; }
        public virtual DbSet<un_pesqrestr> un_pesqrestr { get; set; }
        public virtual DbSet<un_pesquisado> un_pesquisado { get; set; }
        public virtual DbSet<un_pesquisadolog> un_pesquisadolog { get; set; }
        public virtual DbSet<uuid_dup> uuid_dup { get; set; }
        public virtual DbSet<ven_aprova> ven_aprova { get; set; }
        public virtual DbSet<ven_avalia> ven_avalia { get; set; }
        public virtual DbSet<ven_comissao> ven_comissao { get; set; }
        public virtual DbSet<ven_ender> ven_ender { get; set; }
        public virtual DbSet<ven_log> ven_log { get; set; }
        public virtual DbSet<ven_loteprodu> ven_loteprodu { get; set; }
        public virtual DbSet<ven_parc> ven_parc { get; set; }
        public virtual DbSet<ven_pedido> ven_pedido { get; set; }
        public virtual DbSet<ven_produ> ven_produ { get; set; }
        public virtual DbSet<ven_provariacao> ven_provariacao { get; set; }
        public virtual DbSet<ven_rateio> ven_rateio { get; set; }
        public virtual DbSet<venc_saixped> venc_saixped { get; set; }
        public virtual DbSet<ws_agrupserv> ws_agrupserv { get; set; }
        public virtual DbSet<ws_agrupservtab> ws_agrupservtab { get; set; }
        public virtual DbSet<ws_agrupservtabxusu> ws_agrupservtabxusu { get; set; }
        public virtual DbSet<ws_agrupservusu> ws_agrupservusu { get; set; }
        public virtual DbSet<ws_agrupservvars> ws_agrupservvars { get; set; }
        public virtual DbSet<ws_estrut> ws_estrut { get; set; }
        public virtual DbSet<ws_estrutcmp> ws_estrutcmp { get; set; }
        public virtual DbSet<ws_servicos> ws_servicos { get; set; }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categag>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CODCATEGEVE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categeve>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CODCATEGLEMB)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_categlemb>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_config>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_config>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_config>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_config>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_config>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evdiconf>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evdiconf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evdiconf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog_m>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog_m>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog_m>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_evlog_m>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log_m>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log_m>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log_m>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_log_m>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_permconf>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_permconf>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_permconf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_permconf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CODPRIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_prioridade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CONCLUSAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statusag>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuseve>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_statuslem>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CODTPAVISO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpaviso>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CODTPCONCEVE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconceve>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CODTPCONCLEMB)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconclemb>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CODTPCONC)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpconcluag>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CODTPEVE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_tpevento>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<amolog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<amolog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<amolog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<amolog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amocateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amostatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.RECURSOFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_amotpser>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccctpmov>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ccftpmov>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_tplogr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CODUF)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.SIGLA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CODPAIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.UFORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.UFDESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.CODCLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.ICMS_RBASECOD)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cep_uf_fimov>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CODDEV)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcadevo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.NCONSIDFLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcastat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatpag>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_chcatphi>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrcateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CODORIG)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrorig>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cobrstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contcat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contenvsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CODFAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contfamil>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contocorsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_contstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_conttpocor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CATPEDDEF)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotcateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotforma>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.REALIZA_FECHA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cotstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.TPPEDDEF)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpenv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cottpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_coturgen>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.ESTIMATIVA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.NAOBAIXAR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpagstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cpatpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.CODCNFBAIXA)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.SINALIZACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.CONVENIO)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.TIPOBAIXA)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.PLANOCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.CENTROCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.RATEAR)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecnfbaixa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.ESTIMATIVA)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.NAOBAIXAR)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.NCONSIDFLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_crecstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_cretpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CODDPTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.LOGO_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_dpto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.CODEMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.DESCRICAO1)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.DESCRICAO2)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.LOGO_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.FOTO_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_empresa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CARTAOCRED)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.DIAFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapgparc>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapgparc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapgparc>()
                .Property(e => e.TPDOCFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapgparc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapgparc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapgparc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entformapgparc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.DESCRHIST)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.REALIZA_FECHA)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.REALIZA_EXPFINAN)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.RASTREABILIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.NCONSIDFLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_entstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.AJUSTAPROD)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.FECHA_GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.FISC_INV_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.NAO_EXP_FINAN)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.NAO_MOV_ESTOQUE)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.OBRIGA_DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.DESCONHOMOLFORNEC)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.IMPORTACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.NFE_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.NFE_STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.NFE_OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.NFE_OPCGERAR)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.FECHA_NOTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.TRANSFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.ROM_STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.ROM_FORNMULT)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CODTPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.NAO_FISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpdoc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.RATEIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_enttpext>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equcateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CODFAMIL)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equfamil>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CODMARCA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equmarca>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpage>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_equtpoco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatimpostos>()
                .Property(e => e.CODIMPOSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatimpostos>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatimpostos>()
                .Property(e => e.ACUMULA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatimpostos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatimpostos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatimpostos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatimpostos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fatstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpext>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.TIPOSAIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.STATSAIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.GERASAIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CODOPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.BUSCARPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.GERACRECEBER)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.NAOFCH_NF_INVALIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CALCNOBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CALCNCALC)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpfat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpmsg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fattpvia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficoninf>()
                .Property(e => e.CODCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficoninf>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficoninf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficoninf>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficoninf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficoninf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficoninf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficoninf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ficotpin>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fimtpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CODCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.DEB_CRED)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finclass>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.CODCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.AGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.AGENDIG)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.MOEDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.NUMDIG)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.CONTATO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.PADRAOEMPR)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.VISUAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.CONCILIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.PAGBANCONV)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.PAGBANPROC)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.PAGBANVARS)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.USUCONCILIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finconta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CODCCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.DEB_CRED)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fincusto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CODFOCO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finfoco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CODPLANO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.DEB_CRED)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.FLAGPLANFINAN)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CODDRE)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSALIAS)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_finplano>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpconta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CHEQUE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fintpdoc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.DESC_SCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.CODCLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.UFORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.UFDESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_baselegal>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CODICMSREDU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsredu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsreduv>()
                .Property(e => e.CODICMSREDU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsreduv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsreduv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsreduv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_icmsreduv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CODCALC)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_calc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CODCFOP)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CODCNTXTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CALC_CUSTOM)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CNF_PROP_POSS)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cfop>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CODCNTXTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_cntxto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CODCSLLCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_csllcnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_forma>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CODICMSCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_icmscnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CODINSSCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_insscnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CODIPICNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ipicnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CODIRCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_ircnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CODISSCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_isscnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CODPISCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_piscnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.OPTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.CLFIMAT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.FIS_JUR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.ICMS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.CFOP_INTERNO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.CFOP_INTESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.CFOP_EXTERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fisc_op_tpxmat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fistatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.STARECDEF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.NAOCOB)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.NAOFAT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.TPDEPEND)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxcstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxctpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.STAPAGDEF)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdcate>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxdtpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_fxgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CODESPEC)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_espec>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.CODJUROS)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.J_DIAMEN)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.J_SIMPCOMP)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.J_FORAMES)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.M_MULTAVLR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.M_FORAMES)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_juros>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_midiatp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.CODDISP)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdisp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdispit>()
                .Property(e => e.CODDISP)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdispit>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdispit>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdispit>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ger_tabdispit>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.CODMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gercancel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindicador>()
                .Property(e => e.CODINDICADOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindicador>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindicador>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindicador>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindicador>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindicador>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindicador>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.IDINDICA)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.PERIODO)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.SCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CODNAT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.OPERFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.OPERTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.MOVESTOQUE)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.OPERFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.MOVFINAN)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.NFCOMPL)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.OPERCOMPL)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.OBSNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.ICMS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.ICMS_CALC)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.ICMS_CODREDU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.ICMS_SUBSTRIB)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.ICMS_MOTDESONERA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.IPI_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.IPI_CST_ENTRADA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.IPI_CENQ_ENT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.IPI_CST_SAIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.IPI_CENQ_SAI)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.PISCOFINS_CALC)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.PIS_IPIBASE)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.COF_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.COF_NATRECEITA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.COF_IPIBASE)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.ISS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CFOP_INTERNO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CFOP_INTESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CFOP_EXTERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CSLL_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.INSS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.MOVIMENTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.IR_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.IPI_APLIC)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.IPI_RECUP)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gernatureza>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gersequencia>()
                .Property(e => e.CODSEQUENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gersequencia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gersequencia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gersequencia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gersequencia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gersequencia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gertpmo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_condpgto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpembala>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.DESCRRESU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpfrete>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CODEMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CODSEQUENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpivc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CARTAOCRED)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.DIAFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapgparc>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapgparc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapgparc>()
                .Property(e => e.TPDOCFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapgparc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapgparc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapgparc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matformapgparc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_matmovtpfe>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CODTPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.NAO_FISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_mattpdoc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.TIPOEVENTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CONDICAOUSO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_cce_tp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_lotfatsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplog>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CHKLOTENC)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNFPROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNFVARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplote>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplotevars>()
                .Property(e => e.TPLOTE)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplotevars>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplotevars>()
                .Property(e => e.CNFVARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplotevars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplotevars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplotevars>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfe_tplotevars>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CODCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfeclass>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfestat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.TIPOENTRADA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.STATENTRADA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.GERAENTRADA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CTRLDATAMATE)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CODOPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CALCNOBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CALCNCALC)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.VENCOBRIGA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.NAOFCH_NF_INVALIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.GERACPAGAR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpent>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpext>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_nfetpvia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.DNAPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.TEM_LIBERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.TEM_HOMOLOG)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.GRP_RESP)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_ativtp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CODPERS)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_categ>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chkliststa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_chklisttp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CODDNA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.CODDNA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.ATIVADO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.CODEVENTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.STATUS_AVAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.DATAAVALIADA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_dna_plugin>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_envoltp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_infotp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_moprevsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_prodprevsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_respostatp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.NAO_HAB_APONTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_status>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_os_tipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patcateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CODCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patclass>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_patstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.PERAGENDAR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.TIPOPATRI)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pattpman>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_status>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpendereco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpitem>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tpopera>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pct_tppacote>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedcateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.DESCRHIST)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.REALIZA_FECHA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.REALIZA_CONCL)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.RASTREABILIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedstatp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.PEDSTATUSINI)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.DETSTATUSINI)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.IMPORTACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.PROD_DESCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.NFE_OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.GERA_ENTRADA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.ENT_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.ENT_STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpext>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtpnco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pedtptra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.GRUPOPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.VEN_FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pescateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesmotbl>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CODSEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pessegme>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pesstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpcred>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpdep>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CODTPEMPICMS)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_icms>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CODTPEMPIPI)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_ipi>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CODTPEMPISS)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_iss>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CODTPEMPPIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpemp_pis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpend>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpfoto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestphom>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpindic>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_pestpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CODCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclass>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CODCLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CLFISCAL_COD)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.EXTIPI)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CAPITULONCM)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CODMATERIAL_E)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CODMATERIAL_S)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ICMS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ICMS_ALIQRED)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ICMS_CALC)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ICMS_RBASECOD)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ICMS_ISENTONZERAREDU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ICMS_SUBSTRIB)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ICMSST_CEST)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.IPI_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.IPI_CST_ENTRADA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.IPI_CENQ_ENT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.IPI_CST_SAIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.IPI_CENQ_SAI)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.PIS_CNF_E)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.COF_CNF_E)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.COF_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ISS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ISS_CODSERV)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.ISS_CODTRIBMUN)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.II_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.IPI_NCM)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.IPI_APLIC)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proclfiscal>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CODDPTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.BAIXA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.TRANSFCUST)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.SALDONEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CTRLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.WEB)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.NAODESTVENDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.NAODESTCOMPRA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.PLANO_E)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.PLANO_S)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prodpto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CODFAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.DEPARTAMEN)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.AUTCOD_PREFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profamil>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CODCALC)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_clcalc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CODICMSCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmscnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CODMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_icmsmotdes>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CODIICNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_iicnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CODIPICNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CODIPICST)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ipicst>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CODISSCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_isscnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CODMATERIAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_mate>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_origem>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.CODTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.GRUPOS)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.CODIGOOPER)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.CST)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscf_oper>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CODPISCNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_piscnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.UFORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.UFDESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.ICMS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.CODCLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.USARFATORCNV_PAUTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.CALCDIFALIQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.ICMS_RBASECOD)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.LIBERA_LISTANEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_profisc_ufxst>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.TIPOGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prograde>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_progrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CODICM)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.ALIAS)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.TRIBUTACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.SUBST)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.PDV_TRIB)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicm>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicmsub>()
                .Property(e => e.CODICM)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicmsub>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicmsub>()
                .Property(e => e.SUBST)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicmsub>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicmsub>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicmsub>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proicmsub>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CODIPI)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.ATRIBUI)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CLASFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proipi>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CODISS)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.ALIAS)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.PDV_TRIB)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_proiss>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CODLINHA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolinha>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prolocal>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CODMARCA)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_promarca>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvgru>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_propvtip>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_prostatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protartpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpace>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpfoto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpgra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protplink>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CODTPOPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpopc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CODTPVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.TIPODADO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.SEMPREMOSTRAR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.VARLOTE)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_protpvariacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CODUNID)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respevenunid>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.FUNCAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respfunc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_respstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpeven>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpfoto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_resptpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FECHA_GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FISC_INV_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.NAO_EXP_FINAN)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.NAO_MOV_ESTOQUE)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.OBRIGA_DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FAT_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FAT_STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FAT_OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FAT_OPERACOMPLE)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FAT_GERANUMFAT)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FECHA_NOTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FAT_SERIE)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.FAT_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.TRANSFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.RATEIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_saitpext>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.SMTP_HOST)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.SMTP_USER)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.SMTP_PWD)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_se_smtp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_sped_proctp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CODBANCO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banmot>()
                .Property(e => e.CODBANCO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banmot>()
                .Property(e => e.MOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banmot>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banmot>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banmot>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banmot>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banmot>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banmot>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.CODBANCO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.OCORRENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.BAIXADEB)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.RECOBRAR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.LAYOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.METODO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_banocor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CODCARTAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CODOPERADORA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_ocor>()
                .Property(e => e.CODOPERADORA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_ocor>()
                .Property(e => e.OCORRENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_ocor>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_ocor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_ocor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CODOPERADORA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_cartao_oper>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CODCORPELE)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_corpele>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_diasemana>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_diasemana>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_diasemana>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_diasemana>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_diasemana>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CODESTCIV)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_estcivil>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CODUNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.DESCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_medida>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CODMOEDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.DESCRRESU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.SIMBOLO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_moeda>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CODPAIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.DESCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.DDI)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.NOBRIGACNPJCPF)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CNPJCPFUNICO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pais>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisadost>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_pesquisast>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CODIMPR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.ATIVA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.MATRIX)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.IMPRESSORA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.VARMATRIX)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_prn>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CODRELIG)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_religiao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CODSEXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_un_sexo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CODMKT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_acaomkt>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_categ>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expfor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_expstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CODMATFORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CARTAOCRED)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.DIAFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.VALID_FILTRO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_formapg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CODMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_motrep>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_origem>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.ORCAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CONCLUIDO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CODFASE)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_status>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.TIPOPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.GRPALTPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.GERA_SAIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.SAI_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.FECHA_SAIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.SAI_STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.GERA_NOTA_COMPL)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.FAT_OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.INFO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.PERMISSAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpaprova>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CODTPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.NAO_FISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpdoc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpparc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpverdade>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpverdade>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpverdade>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpverdade>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpverdade>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpverdade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpverdade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpverdade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.TIPOMOVIME)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.LIGACAOTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.DESTTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cccli_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.TIPOMOVIME)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.LIGACAOTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.DESTTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccclient>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccclog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ccclog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ccclog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ccclog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccflog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ccflog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ccflog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ccflog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.TIPOMOVIME)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.LIGACAOTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.DESTTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccfor_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.TIPOMOVIME)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.LIGACAOTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.DESTTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ccforne>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cep_bairro>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<cep_bairro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cep_bairro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cep_bairro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cep_bairro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cep_cidade>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<cep_cidade>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<cep_cidade>()
                .Property(e => e.DDD)
                .IsUnicode(false);

            modelBuilder.Entity<cep_cidade>()
                .Property(e => e.CODUF)
                .IsUnicode(false);

            modelBuilder.Entity<cep_cidade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cep_cidade>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cep_cidade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cep_cidade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.COMPLEMEN)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.BAIRROINI)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.BAIRROFIN)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.CODUF)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.UF)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cep_logra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.BANDEIRA)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.AGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CONTACORRE)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CODDEV)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.ORIGLOC)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.OPERADOR)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<chca>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaoarq>()
                .Property(e => e.NOMEARQ)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaoarq>()
                .Property(e => e.OPERADORA)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaoarq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaodet>()
                .Property(e => e.COMPROVANTE)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaodet>()
                .Property(e => e.AUTENTICACAO)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaodet>()
                .Property(e => e.OCOR_DESC)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaodet>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaodet>()
                .Property(e => e.TABORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaodet>()
                .Property(e => e.LINK)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaodet>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca_cartaodet>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.BANDEIRA)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.AGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CONTACORRE)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CODDEV)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.ORIGLOC)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.OPERADOR)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<chca_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcaag_m>()
                .Property(e => e.TIPOAGEN)
                .IsUnicode(false);

            modelBuilder.Entity<chcaag_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcaag_m>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcaag_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcaag_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcaag_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<chcaag_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcaagen>()
                .Property(e => e.TIPOAGEN)
                .IsUnicode(false);

            modelBuilder.Entity<chcaagen>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcaagen>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcaagen>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcaagen>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcaagen>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<chcaagen>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcacateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.TIPOHIST)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<chcahi_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.TIPOHIST)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<chcahist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcalog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<chcalog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcalog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<chcalog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcalog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<chcarat_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgarq>()
                .Property(e => e.ARQUIVO)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgarq>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgarq>()
                .Property(e => e.CAMPOCHAVE)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgarq>()
                .Property(e => e.CAMPOVALOR)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgarq>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgarq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgarq>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgarq>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.REGRA)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.ARQUIVO)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.CAMPOCHAVE)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.CAMPOVALOR)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cnslgger>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincpos>()
                .Property(e => e.DICTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincpos>()
                .Property(e => e.CODIGOAUX)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincpos>()
                .Property(e => e.DICEMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincpos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincpos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincpos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincpos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincseq>()
                .Property(e => e.DICTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincseq>()
                .Property(e => e.FORCEINCREMENT)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincseq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincseq>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincseq>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cnssincseq>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cobdoc_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobdoc_m>()
                .Property(e => e.ORIGEMLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<cobdoc_m>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cobdoc_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobdoc_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobdoc_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobdoc_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cobexpmovconf>()
                .Property(e => e.CODCONV)
                .IsUnicode(false);

            modelBuilder.Entity<cobexpmovconf>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cobexpmovconf>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<cobexpmovconf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<cobexpmovconf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobexpmovconf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobglobalvar>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<cobglobalvar>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<cobglobalvar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobglobalvar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<coblog_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<coblog_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<coblog_m>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<coblog_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CONVENIO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.SEQ_EXTERNA)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.SACADOTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.SACADOEMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.SACADOEMAILCC)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DC_BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DC_AGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DC_AGENDIG)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DC_CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DC_CONTDIG)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DC_TITULAR)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.DC_CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.RAZ_SOCIAL)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobra_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CONVENIO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.SEQ_EXTERNA)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.SACADOTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.SACADOEMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.SACADOEMAILCC)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DC_BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DC_AGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DC_AGENDIG)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DC_CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DC_CONTDIG)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DC_TITULAR)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.DC_CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.RAZ_SOCIAL)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobranca>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CODCONV)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.SEQ_EXTERNA)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.AGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.AGENDIG)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CEDENCOD)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CEDENDIG)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CONVBANCO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.DCC)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.LAYOUT_OCORR)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CEDENTE)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.ESPECIEDOC)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.ACEITE)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CARTEIRA)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.ESPECIE)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.MENSAGEM1)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.MENSAGEM2)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.MSGBANCO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.IMAGEM_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.VISUAL)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.IMPEXPPROC)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.IMPEXPVARS)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvlog>()
                .Property(e => e.CODCONV)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvparc>()
                .Property(e => e.CODCONV)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvparc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvparc>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvparc>()
                .Property(e => e.FILT_CATEG)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvparc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvparc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvparc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrconvparc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cobrdocu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrdocu>()
                .Property(e => e.ORIGEMLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<cobrdocu>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cobrdocu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrdocu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrdocu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobrdocu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cobrlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cobrlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<cobrlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contdedica>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<contdedica>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<contdedica>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contdedica>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contdedica>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contdedica>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contenvol>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<contenvol>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<contenvol>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contenvol>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contenvol>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contenvol>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contenvol>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contfinan>()
                .Property(e => e.FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<contfinan>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<contfinan>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<contfinan>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contfinan>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contfinan>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contfinan>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contfinan>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contfinansta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<continfo>()
                .Property(e => e.TIPOINFO)
                .IsUnicode(false);

            modelBuilder.Entity<continfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<continfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<continfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<continfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<continfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<continfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<continfocontsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contlogcont>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<contlogcont>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<contlogcont>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<contlogcont>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.MEMORIA)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contocor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.FAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.PROPOSTA)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CONTRATO1)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.MEMORIA)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contrato>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contresme>()
                .Property(e => e.OBS)
                .IsUnicode(false);

            modelBuilder.Entity<contresme>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contresme>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contresme>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contresme>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.TIPOREV)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.MEMORIA)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<contrevisao>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CODTPREVISAO)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<conttprev>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<contxgrupo>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<contxgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contxgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contxgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<contxgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.TIPOCOTA)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.URGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.ORIGDPTO)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.HISTORICO)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.COTTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.LIBERA_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.INSTRUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkgab>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchkliststa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklisttp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotforne>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<cotforne>()
                .Property(e => e.CONTATO)
                .IsUnicode(false);

            modelBuilder.Entity<cotforne>()
                .Property(e => e.TIPOENVIO)
                .IsUnicode(false);

            modelBuilder.Entity<cotforne>()
                .Property(e => e.HISTORICO)
                .IsUnicode(false);

            modelBuilder.Entity<cotforne>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotforne>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotforne>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotforne>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cotinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<cotinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cotlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<cotlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.CODUNIVERS)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.APROVA)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotprxfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.TPCODBARRA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CODBARRA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.TIPOPGTOBANC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.FORMAPGTOBANC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CODPGTO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.BANCOFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.AGEFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.AGEDACFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CONTAFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.DACFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.TIPOCONTAFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.UF)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.PLACA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.OPCAOPGTO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.BAIXATPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.BAIXADOC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.TPCODBARRA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CODBARRA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.TIPOPGTOBANC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.FORMAPGTOBANC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CODPGTO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.BANCOFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.AGEFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.AGEDACFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CONTAFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.DACFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.TIPOCONTAFAV)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.UF)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.PLACA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.OPCAOPGTO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.BAIXATPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.BAIXADOC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagar_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.TIPOPGTOBANC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.LAYOUTARQB)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbcfmpgto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagbctppgtotrib>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.FAVNOME)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.FAVCNPJ)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.FAVBANCO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.FAVAG)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.FAVCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.CODBARRA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.NUMDOC)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.AUTENTICACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.NOSSONUM)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.NOMEARQ)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.SEGMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimppgto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimpret>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimpret>()
                .Property(e => e.TPOPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimpret>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimpret>()
                .Property(e => e.IMPUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimpret>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimpret>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagimpret>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpaginfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cpaginfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpaginfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<cpaginfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpaginfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpaginfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpaginfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpaglog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cpaglog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpaglog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<cpaglog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpaglog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpagreneg>()
                .Property(e => e.USURENE)
                .IsUnicode(false);

            modelBuilder.Entity<cpagreneg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpagreneg>()
                .Property(e => e.OBS)
                .IsUnicode(false);

            modelBuilder.Entity<cpagreneg>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<cpagreneg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagreneg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagreneg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpagreneg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cpinf_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cpinf_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cpinf_m>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<cpinf_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpinf_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpinf_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cpinf_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cplog_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cplog_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cplog_m>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<cplog_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cplog_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cprat_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<crecatual>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<crecatual>()
                .Property(e => e.ALTCHECK)
                .IsUnicode(false);

            modelBuilder.Entity<crecatual>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecatual>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecatual>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecatual>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.BAIXATPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.BAIXADOC)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CONVCOBR)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.COBRA_CATEG)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creceb_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.BAIXATPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.BAIXADOC)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CONVCOBR)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.COBRA_CATEG)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creceber>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<crecinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<crecinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<crecinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<crecinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<creclog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<creclog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<creclog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<creclog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<creclog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecnegocia>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<crecnegocia>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<crecnegocia>()
                .Property(e => e.TPDUPLIC)
                .IsUnicode(false);

            modelBuilder.Entity<crecnegocia>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<crecnegocia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecnegocia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecnegocia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecnegocia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<crecoriginal>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<crecoriginal>()
                .Property(e => e.RENEGOCIADO)
                .IsUnicode(false);

            modelBuilder.Entity<crecoriginal>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecoriginal>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecprod>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<crecprod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<crecprod>()
                .Property(e => e.NAOFATURAR)
                .IsUnicode(false);

            modelBuilder.Entity<crecprod>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<crecprod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecprod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecprod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecprod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<crecreneg>()
                .Property(e => e.USURENE)
                .IsUnicode(false);

            modelBuilder.Entity<crecreneg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<crecreneg>()
                .Property(e => e.OBS)
                .IsUnicode(false);

            modelBuilder.Entity<crecreneg>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<crecreneg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecreneg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecreneg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crecreneg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<crinf_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<crinf_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<crinf_m>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<crinf_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crinf_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crinf_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crinf_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<crlog_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<crlog_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<crlog_m>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<crlog_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crlog_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<crrat_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.CODTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.CAMPO)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.FORMATO)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.VALORFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqcampos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqtabelas>()
                .Property(e => e.CODTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqtabelas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqtabelas>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqtabelas>()
                .Property(e => e.TBRET)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqtabelas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqtabelas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqtabelas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<dic_scr_arqtabelas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<difw_dicctrl>()
                .Property(e => e.CHECANDO)
                .IsUnicode(false);

            modelBuilder.Entity<difw_dicctrl>()
                .Property(e => e.ULTCHK_CADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<difw_dicctrl>()
                .Property(e => e.ULTCHK_MAQUINA)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.ORIGEMLOG)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.TIPOLOG)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.CNSSINCHK)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<difw_tablog>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<empcert>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<empcert>()
                .Property(e => e.SERIAL)
                .IsUnicode(false);

            modelBuilder.Entity<empcert>()
                .Property(e => e.SENHA)
                .IsUnicode(false);

            modelBuilder.Entity<empcert>()
                .Property(e => e.FINALIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<empcert>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<empcert>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<empcert>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<empcert>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<empinfo>()
                .Property(e => e.CODEMPINFO)
                .IsUnicode(false);

            modelBuilder.Entity<empinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<empinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<empinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<empinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<empinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<empinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<empinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<emptpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<equagend>()
                .Property(e => e.TIPOAGENDA)
                .IsUnicode(false);

            modelBuilder.Entity<equagend>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<equagend>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<equagend>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equagend>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equagend>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equagend>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<equinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<equinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<equinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<equinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.MARCA)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.FAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.MODELO)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.SN)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.PN)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.FABRICANTE)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equipame>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equlocal>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<equlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<equlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<equlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<equlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equlog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equocorr>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<equocorr>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<equocorr>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<equocorr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equocorr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equocorr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equocorr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<equxgrp>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<equxgrp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equxgrp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equxgrp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<equxgrp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomiss>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomiss>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomiss>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomiss>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomiss>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatcomisstp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatextra>()
                .Property(e => e.TIPOEXTRA)
                .IsUnicode(false);

            modelBuilder.Entity<fatextra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatextra>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<fatextra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatextra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatextra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatextra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatgrvalidnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fatinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<fatinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fatlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<fatlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatlog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.DESC_FISC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CLFISCAL_COD)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.ICMS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.ICMS_BASE_MOD)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.ICMSST_CEST)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.ICMS_B_MOD_SUB)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.ICMS_MOTDESONERA)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.IPI_CST)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.IPI_CENQ)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.PIS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.COFINS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.COFINS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.ISS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CODSERVLISTA)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.ISS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.ISS_CODTRIBMUN)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.INSS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.IR_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CSLL_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CODSERIE)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.RETENCAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.PADRAOEMPR)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.MODELO)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.SERIECODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.VISUAL)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatserie>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fattribu>()
                .Property(e => e.TRIBUTO)
                .IsUnicode(false);

            modelBuilder.Entity<fattribu>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<fattribu>()
                .Property(e => e.COD_TRIB)
                .IsUnicode(false);

            modelBuilder.Entity<fattribu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fattribu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fattribu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fattribu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TIPOFAT)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.SERIE)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.NFETIPOEMISSAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.NFENUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.NFEPROTOCOLO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.NFESTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.RAZ_SOCIAL)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.INSC_MUN)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENDNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.EMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_ENDNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_CEP)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ENTR_PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSP_RAZ)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPCNPJ)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSP_RNTC)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPIE)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPENDER)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPCIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPEMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPPLACA)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPUFPLAC)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TIPOFRETE)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRMODAFRETE)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.VIATRANSP)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPESPECI)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPMARCA)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPPEBRUT)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TRSPPELIQU)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.MODELOECF)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CUPOM)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.TIPOMSG)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.EMIS_USU)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CALCULADO)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CANCELAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CANCELAMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.EMAIL_STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatura>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.ID)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.CHECAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.ATIVO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.FORMULA)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatvalidanf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.PIS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.COFINS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.COFINS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.CSLL_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatvenc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ficonlog>()
                .Property(e => e.CODCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<ficonlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ficonlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ficonlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ficonlog>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ficonlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ficonlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<ficonlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CODDRE)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovdre_estr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.OBSERVA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.OBSERVAAUX)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.LIGATAB)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.RATEIO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovi_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.OBSERVA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.OBSERVAAUX)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.LIGATAB)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.RATEIO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovime>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf_m>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovinf_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovl_m>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovl_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovl_m>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<fimovl_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<fimovlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.LIGATAB)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovpre>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxch>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxch>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxch>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxch>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxcp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxcp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxcp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxcp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxcr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxcr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxcr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimovxcr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimrat_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimxch_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxch_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxch_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxch_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimxcp_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxcp_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxcp_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxcp_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fimxcr_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxcr_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxcr_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fimxcr_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<finfecha>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<finfecha>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<finfecha>()
                .Property(e => e.AUDITORIA)
                .IsUnicode(false);

            modelBuilder.Entity<finfecha>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfecha>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfecha>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfecha>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_info>()
                .Property(e => e.CODFOCO)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_info>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_info>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_info>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_info>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_info>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_info>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_info>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfoco_infotp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<finfocoxconta>()
                .Property(e => e.CODFOCO)
                .IsUnicode(false);

            modelBuilder.Entity<finfocoxconta>()
                .Property(e => e.CODCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<finfocoxconta>()
                .Property(e => e.PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<finfocoxconta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfocoxconta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfocoxconta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<finfocoxconta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.CODRATEIO)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.SCRCAMPO)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.SCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.CODRATEIO)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.OBRIGATORI)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.NCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.NPLANO)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.NCCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.NCLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firatfil>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.CODRATEIO)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.DESCAUX)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.VALVAR)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.SCRCAMPO)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firatlan>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.STAPAGDEF)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.STARECDEF)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.NAOCOB)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.NAOFAT)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.TPDEPEND)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fireccateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firechist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firechist>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<firechist>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<firechist>()
                .Property(e => e.CONVENIO)
                .IsUnicode(false);

            modelBuilder.Entity<firechist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firechist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firechist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firechist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firecinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<firecinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<firecinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fireclog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fireclog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fireclog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<fireclog>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<fireclog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fireclog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<fireclog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.EXECUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CONVCOBR)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.FATURAR)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.ISSPLANO)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.ISSMENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CONTRATO)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.COBRA_CATEG)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecorrente>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.NAOFATURAR)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firecprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firecstat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<firectpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.ITEM)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CEST)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_cest>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_credcart>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_credcart>()
                .Property(e => e.RAZ_SOCIAL)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_credcart>()
                .Property(e => e.CNPJ)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_credcart>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_credcart>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_credcart>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_credcart>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_ipi_enq>()
                .Property(e => e.CENQ)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_ipi_enq>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_ipi_enq>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_ipi_enq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_ipi_enq>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_ipi_enq>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_ipi_enq>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CODFLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_op_fluxo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_partilha>()
                .Property(e => e.CODPARTILHA)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_partilha>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_partilha>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_partilha>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_partilha>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CONVCOBR)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.FATURAR)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.ISSPLANO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.ISSMENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CONTRATO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.COBRA_CATEG)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcarte>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxchist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxchist>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<fxchist>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<fxchist>()
                .Property(e => e.CONVENIO)
                .IsUnicode(false);

            modelBuilder.Entity<fxchist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxchist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxchist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxchist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxcinfo>()
                .Property(e => e.TIPOINFO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxcinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxclog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxclog>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<fxclog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxclog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcprodu>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcprodu>()
                .Property(e => e.NAOFATURAR)
                .IsUnicode(false);

            modelBuilder.Entity<fxcprodu>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<fxcprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxcprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxcrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CONTRATO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.ST2)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdesp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxdhist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdhist>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<fxdhist>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<fxdhist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdhist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdhist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdhist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxdinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxdlog>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdlog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdprodu>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fxdrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedgabfluxopub>()
                .Property(e => e.IDFLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<gedgabfluxopub>()
                .Property(e => e.IDATIVIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<gedgabfluxopub>()
                .Property(e => e.DEPARTAMEN)
                .IsUnicode(false);

            modelBuilder.Entity<gedgabfluxopub>()
                .Property(e => e.LIBERAR)
                .IsUnicode(false);

            modelBuilder.Entity<gedgabfluxopub>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedgabfluxopub>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedgabfluxopub>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedgabfluxopub>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedinfotp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedstafluxopub>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.PER_INSERIR)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.PER_EDITAR)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.PER_VISUALIZAR)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.PER_VISVERANT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.PER_PUBLICAR)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.PER_TRIGGER)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.FLUXOPUB)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.EXPR_PRECAMPOS)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.SAVECOPYSERVER)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.FAZMORTO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.IDATIVIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.OBRIGAOBS)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpatividade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.IDFLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtpfluxo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.ATIVO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtrigger>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ger_email>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_email>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_email>()
                .Property(e => e.CORPO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_email>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_email>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_email>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_email>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PROD_MARCA)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PROD_FAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PROD_CATEG)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PES_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PES_CATEG)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PES_SEG)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PES_ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PED_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PED_FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.PED_TPFRETE)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.CUMULATIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_regdesacr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_pk>()
                .Property(e => e.CODTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_pk>()
                .Property(e => e.PK_VALORES)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_pk>()
                .Property(e => e.EXPRESSAO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_pk>()
                .Property(e => e.GRPS)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_pk>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_pk>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_pk>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_pk>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tabelas>()
                .Property(e => e.CODTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tabelas>()
                .Property(e => e.FILTROS_OBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tabelas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tabelas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tabelas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tabelas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tbfilhas>()
                .Property(e => e.CODTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tbfilhas>()
                .Property(e => e.TABFILHA)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tbfilhas>()
                .Property(e => e.FILTROS_OBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tbfilhas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tbfilhas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tbfilhas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_tabreg_tbfilhas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CODLOCALIZACAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.LATITUDE)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.LONGITUDE)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlocalizacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.ACAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.OK)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogconexao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gerprnpr>()
                .Property(e => e.CODIMPR)
                .IsUnicode(false);

            modelBuilder.Entity<gerprnpr>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<gerprnpr>()
                .Property(e => e.VISUAL)
                .IsUnicode(false);

            modelBuilder.Entity<gerprnpr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerprnpr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerprnpr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerprnpr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CODREGIAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerregiao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_INT_NAME)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_DESC)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_NAME)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_ENTITY)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_ROOT)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_INT_PARENT)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_DATATYPE)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_DATAVALUE)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.K_KEYTYPE)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerregistro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CODSERV)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerservpostal>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<itsaixetiq>()
                .Property(e => e.TOTVOL)
                .IsUnicode(false);

            modelBuilder.Entity<itsaixetiq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<itsaixetiq>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<itsaixetiq>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<itsaixetiq>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_info>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_info>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_info>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_info>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_info>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_info>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.TIPOMOVIM)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.DONODPTO)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.OBSERVA)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.MOVLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.FECHATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.FECHAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.ORIGEMLOC)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovime>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<matmovlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<matmovlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<matmovlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<matmovlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovlog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<matmovlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.CODBARRA)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.CODUNIVERS)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.UNID)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.ORIGEMLOC)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<matmovprod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TIPOFAT)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.SERIE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.RAZ_SOCIAL)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.INSC_MUN)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.ENDNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.EMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSP_RAZ)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPCNPJ)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPIE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPENDER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPCIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPPLACA)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPUFPLAC)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TIPOFRETE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRMODAFRETE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.VIATRANSP)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPESPECI)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPMARCA)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPPEBRUT)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TRSPPELIQU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CUPOM)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.TIPOMSG)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.EMIS_USU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CALCULADO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CANCELAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CANCELAMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.INFOS_XML)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_mov>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.DESC_FISC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CLFISCAL_COD)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.ICMS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.ICMS_BASE_MOD)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.ICMSST_CEST)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.ICMS_B_MOD_SUB)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.ICMS_MOTDESONERA)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.IPI_CST)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.IPI_CENQ)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.PIS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.COFINS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.COFINS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CODSERVLISTA)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.ISS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.ISS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.ISS_CODTRIBMUN)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.INSS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.IR_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CSLL_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.INFOS_XML)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_pro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.PIS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.COFINS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.COFINS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.CSLL_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mftmp_ven>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CODKIT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kit>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.FASE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_status>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.FLAG_PEDIDO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.FLAG_PRODUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CONTRAPARTIDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CONF_RESTR)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CONF_COMPL)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.HAB_TRANSF)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.HAB_ESTORNO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.PER_ESTORNO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.ZERA_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.ZERA_TPACERTO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.STATUS_FINAL)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpmov>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_tpperda>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<movfciproc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<movfciproc>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<movfciproc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<movfciproc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.CODMONITCONF)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.ATIVO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.EXEC_PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.PER_GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitconf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CODAVALIA)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.ALVO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_tbcodavalia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.TIPOLOG)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_log>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.TIPOLOTE)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.EMISUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.EMISARQ)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.RETUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.RETARQ)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.CONC_OK)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lote>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_lotxfat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CODUF)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.UF)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.NOMEUF)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CODMESO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.NOMEMESO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CODMICRO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.MICRONOME)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CODMUN)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.MUNNOME)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CODDISTR)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.DISTRNOME)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CODSUBDISTR)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.SUBDISTRNOME)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_ibge>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_siafi>()
                .Property(e => e.UF)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_siafi>()
                .Property(e => e.CNPJ)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_siafi>()
                .Property(e => e.MUNICIPIO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_siafi>()
                .Property(e => e.SIAFI)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_siafi>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_siafi>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_siafi>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_municipio_siafi>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CODPAIS)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_pais_bacen>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfeextra>()
                .Property(e => e.TIPOEXTRA)
                .IsUnicode(false);

            modelBuilder.Entity<nfeextra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfeextra>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<nfeextra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfeextra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfeextra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfeextra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfeinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<nfeinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfeinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<nfeinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfeinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfeinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfeinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfelog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<nfelog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfelog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<nfelog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfelog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TIPOENT)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.MODELO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.SERIE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.SERIEFAT)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.ESPECIE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.NFETIPOEMISSAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.NFENUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.NFEPROTOCOLO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.NFESTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RAZ_SOCIAL)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.ENDNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RET_LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RET_ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RET_ENDNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RET_COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RET_BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RET_CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RET_ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.RET_CEP)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSP_RAZ)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPCNPJ)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSP_RNTC)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPIE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPENDER)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPCIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPEMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPPLACA)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPUFPLAC)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TIPOFRETE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRMODAFRETE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.VIATRANSP)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPESPECI)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPMARCA)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPPEBRUT)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPPELIQU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPTIPOCTE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.TRSPCHAVECTE)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.MODELOECF)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CUPOM)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.ENTRMATER_USU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.EMIS_USU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CANCELAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CANCELAMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfentra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.DESC_FISC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CLFISCAL_COD)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.ICMS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.ICMSST_CEST)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.ICMS_MOTDESONERA)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.IPI_CST)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.IPI_CENQ)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.PIS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.COFINS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.COFINS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.ISS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.ISS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.INSS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.IR_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CSLL_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfeprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nferat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfetribu>()
                .Property(e => e.TRIBUTO)
                .IsUnicode(false);

            modelBuilder.Entity<nfetribu>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<nfetribu>()
                .Property(e => e.COD_TRIB)
                .IsUnicode(false);

            modelBuilder.Entity<nfetribu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfetribu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfetribu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfetribu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.PIS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.COFINS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.COFINS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.CSLL_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfevenc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.CODCAT)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_categ>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<op_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<op_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<op_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_ltprsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_sta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CODTP)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.NAO_BAIXA_ESTOQUE)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_tipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.DESCRESU)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.SERVICO)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.ABC_OS)
                .IsUnicode(false);

            modelBuilder.Entity<o>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.TIPOSERV)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativ_orca>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.ORDEM)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CODDNA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.PREV_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.ATV_FATOPLAN)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.POSUSUARIO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.TIPORESTR)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.PRIORIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_atividade>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_ativrec>()
                .Property(e => e.PAPEL)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CODDSTFATO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_dstfato>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_fato>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_fato>()
                .Property(e => e.CODTPATVFATO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_fato>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_fato>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_fato>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_fato>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CODTPATVFATO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.DESCRBANDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CATEGESPEC)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CODESPEC)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.PROCFILTRO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.ATIVADO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.SELECTEXPR)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atv_tpfato>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvpred>()
                .Property(e => e.TIPOPRED)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvpred>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvpred>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvpred>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvpred>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvpred>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvpred>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CODPRIORIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvprioridade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.INSTRUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.LIBERA_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chkgab>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.LIBERA_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.OK_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.OK_CODRESULT)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.OK_RESULTADO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.OK_OBS)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.INSTRUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CODRESULT)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.SITUACAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_chklistresult>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CODMEIO)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comumeio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.EVENTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.CODPERIOD)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.CODMEIO)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.DOCUMENTOS)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.PAPEL)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comunica>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CODPERIOD)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_comuperiod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_conf>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<os_conf>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_conf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_conf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolvidos>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolvidos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolvidos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolvidos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolvidos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolvidos>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_envolvidos>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipcateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.OBS)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_equipxos>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CODGRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupoos>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupoos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupoos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupoos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_grupoos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_info>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_info>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_info>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<os_info>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_info>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_info>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_info>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_integrext>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<os_integrext>()
                .Property(e => e.ORIGEMID)
                .IsUnicode(false);

            modelBuilder.Entity<os_integrext>()
                .Property(e => e.VARIAVEL)
                .IsUnicode(false);

            modelBuilder.Entity<os_integrext>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_integrext>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_integrext>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_log>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<os_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<os_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_log>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.TIPOMO)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.TIPOSERV)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_moprev>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CODPAPEL)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_papel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_planeja>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_planeja>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_planeja>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_planeja>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_planeja>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_planeja>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_planeja>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_prodprev>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.PLAN_TPFATOS)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.PLAN_EXPR_CALC)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.REAL_TPFATOS)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.REAL_EXPR_CALC)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recexprcalc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.DESCRBANDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.TPORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.ATIVADO)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.SELECTEXPRQTD)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.SELECTEXPRVAL)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.VARS_PROC)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_rectpfato>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.PLANEJA)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recurso>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.NOMEIMG)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.APONTATRAB)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recursotp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_sum>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_sum>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_sum>()
                .Property(e => e.TIPODISTSTD)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_sum>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_sum>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_sum>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_sum>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_sum>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.TIPOFATO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxativ_vpt>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxresp>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxresp>()
                .Property(e => e.PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxresp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxresp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxresp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxresp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxvalor>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxvalor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxvalor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxvalor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_recxvalor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.PROBABILIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.IMPACTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.PRIORITARIO)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.RESPOSTA)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.CONTROLE)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_risco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscocateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoclass>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoclass>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoclass>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoclass>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoclass>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoclass>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoclass>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CODIMPACTO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoimpac>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CODPROB)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscoprob>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscosta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_riscotp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CODTPFOCO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpfoco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.ATV_VER_QTD)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.ATV_VER_VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.ATV_VER_REAL_QTD)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.ATV_VER_REAL_VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.ATV_VER_REAL_DTINI)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.ATV_VER_REAL_DTFIN)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.ATV_VER_DIFPREVXREAL)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.ATV_VER_DIFPORCENT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tpplaneja>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tppred>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_tprestr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<patlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<patlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<patlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<patlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patmanut>()
                .Property(e => e.TIPOMANUT)
                .IsUnicode(false);

            modelBuilder.Entity<patmanut>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<patmanut>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<patmanut>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patmanut>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patmanut>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patmanut>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<patmovim>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<patmovim>()
                .Property(e => e.LOCALORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<patmovim>()
                .Property(e => e.LOCALDEST)
                .IsUnicode(false);

            modelBuilder.Entity<patmovim>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<patmovim>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patmovim>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patmovim>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<patrinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<patrinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<patrinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<patrinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patrinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patrinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patrinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<patxgrp>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<patxgrp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patxgrp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patxgrp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patxgrp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_staitem>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ped_conf>()
                .Property(e => e.CODCONF)
                .IsUnicode(false);

            modelBuilder.Entity<ped_conf>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<ped_conf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_conf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_hist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_hist>()
                .Property(e => e.TIPOPED)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_hist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_info>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_info>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_info>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_info>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_info>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_info>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_info>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_log>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_log>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_log>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.GRUPOPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_prrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_rec_tpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.EXECUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.TIPOPED)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.ORIGDPTO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.TIPOTRANSP)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.STATUSPED)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.NEGOCIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.RECEBIMENT)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ped_recorrencia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.CODCMPCALC)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.AGRUPAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.ATIVADA)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedcmpcalc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CARTAOCRED)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.DIAFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.DESCRHIST)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.NAOHAB_ROMANEIO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.RASTREABILIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprdetsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CODTPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.NAO_FISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpdoc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedtpend>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.AGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.AGENDIG)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.NUMCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.NUMCONTADIG)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.TITULAR)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.TIPOCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.OBS)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pescontabanco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.TIPOCRED)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.LIBERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.BLOQMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.BLOQUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.INFORMACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pescredit>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.SEXO)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.APELIDO)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.CPF)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.RG)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.DDI)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.FAX)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.CELULAR)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.VOIP)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.EMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesdepen>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.REGIAO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.DDI)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.FAX)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CELULAR)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.VOIP)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.EMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CONTATO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesender>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pesfoto>()
                .Property(e => e.TIPOFOTO)
                .IsUnicode(false);

            modelBuilder.Entity<pesfoto>()
                .Property(e => e.FOTO_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<pesfoto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesfoto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesfoto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesfoto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<peshomol>()
                .Property(e => e.TPHOMOL)
                .IsUnicode(false);

            modelBuilder.Entity<peshomol>()
                .Property(e => e.FAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<peshomol>()
                .Property(e => e.MARCA)
                .IsUnicode(false);

            modelBuilder.Entity<peshomol>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<peshomol>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<peshomol>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<peshomol>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<peshomol>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pesinfo>()
                .Property(e => e.TIPOINFO)
                .IsUnicode(false);

            modelBuilder.Entity<pesinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pesinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<pesinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<peslog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<peslog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<peslog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<peslog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<peslog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.PES_CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.TABELA)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.CAMPO)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.VALOR_PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.VALOR_POSSIV)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesregpreench>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.COBRA_CATEG)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.MATRICULA)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.FIS_JUR)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CLI_FOR)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.RAZ_SOCIAL)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.SEGMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.EMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.SITE)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.DDI)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.FAX)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CELULAR)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.VOIP)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.REGIAO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.TPEMPICMS_CLI)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.TPEMPICMS_FOR)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.TPEMPIPI_FOR)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.TPEMPPIS_FOR)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.TPEMPISS_FOR)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.INSC_MUN)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.INSC_PROD)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.ZFINSCR)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNAE)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.RNTC)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CRT)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CONTATO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNSHASHMD5)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pessoa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pesxdoc>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pesxdoc>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pesxdoc>()
                .Property(e => e.UF)
                .IsUnicode(false);

            modelBuilder.Entity<pesxgrupo>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<pesxgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesxgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesxgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesxgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_conf>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_conf>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_conf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_conf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.CNF_PROP_POSS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.CLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.GERENCIAL)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_det>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.CODTPFECHA)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.PERIODICIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.CONSIDGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_FISC_E)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_FISC_S)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.ATIV_FISC_PDVS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_FISC_PDVS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_FISC_OPE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_FISC_OPS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_FISC_TRANSF)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_FISC_MS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_FISC_ME)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.ALG_FISC_CUSTMED)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.APURA_FISC_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.APURA_FISC_ACABINTE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.FILT_REAL_LOG)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.HAB_DATAS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.HAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.TRAVA_FISC)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.TRAVA_FISI)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_tpfecha>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fant_tp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_ft_tp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prco_proccab>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prco_proccab>()
                .Property(e => e.CODTPREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<prco_proccab>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<prco_proccab>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_proccab>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_proccab>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_proccab>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.CODREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.RESPORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.RESPNOME)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.COMPLEMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_procmov>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.CODREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.CODTPREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.ATIVADA)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.CODTPREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prco_regratp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pro_cockpit_tpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pro_conf>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<pro_conf>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<pro_conf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pro_conf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.TIPOACERTO)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.MOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proacert>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.PROGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.CODUNIVERS)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.ESTR_USAR)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.ESTR_PADRAOREQ)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.ESTR_AUTOROBS)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.ESTR_PRODPAIOBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proalter>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.COD_BARRA)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<probarra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prochklisttp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CODCLCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CODALIAS)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proclcusto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.CODCMPCALC)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.AGRUPAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.SERIE)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.ATIVADA)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procmpcalc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.ORIGEMTAB2)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi_rec>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi_rec>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi_rec>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctativi_rec>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNF_SETUP)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNF_PROD)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctattp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proctrab>()
                .Property(e => e.CODCENTRO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrab>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrab>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrab>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrab>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrab>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrab>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabimg>()
                .Property(e => e.CODCENTRO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabimg>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabimg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabimg>()
                .Property(e => e.IMAGEM_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabimg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabimg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabimg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabimg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrabtpimg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proctrest>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proctrest>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proctrest>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proctrest>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrest>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrest>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proctrest>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<procusto>()
                .Property(e => e.CODCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<procusto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<procusto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procusto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procusto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procusto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procustotp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CODRESU)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CODUNIVERS)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CODANP)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.DESCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.DESCRESU)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.DEPARTAMEN)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.FAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.LINHA)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CODCLCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.MARCA)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.PLANO_E)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.PLANO_S)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.TIPOLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.LOCAL_DEF)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.LOCALIZA)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.TIPOGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CTRLOTE)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.LOTEUNICO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.MOVLOTEINTEGRAL)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.FANTASMA)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.PESOVARIAV)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.PESOUNITAR)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.BLOQALTDESCR)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.UN_ENTRADA)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CODCLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.ICMSST_CEST)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.ICM)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.ISS)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.IPI)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.OBS)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.OBS_AQUISICAO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.ESTR_TPGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.ESTR_GRADEOBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.ENG_TPGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.PUBLICA_OBS)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.EXPRVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CNSHASHMD5)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<produto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.ENGGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.EFETIVIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.INFO_GERAL)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.OBJETIVO)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.APLICABILIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.INSTR_GERAL)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.PUBL_AFETADAS)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.INFO_MO)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.MOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.PUBLICA_OBS)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proengversao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.COMPONENTE)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.COMPGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.BAIXA)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.EXPRVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestru>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proestruref>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<proestruref>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestruref>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestruref>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestruref>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proestsubpro>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proestsubpro>()
                .Property(e => e.SUBPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proestsubpro>()
                .Property(e => e.SUBPROGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proestsubpro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestsubpro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestsubpro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proestsubpro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.EXPRVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proesttar>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.CODFER)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.FABRICANTE)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.MODELO)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.PN)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.APLICAB)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proferramenta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.CODMUN)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.ISS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.PIS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.COFINS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.CSLL_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.INSS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.IR_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_servxufxcl>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<profoto>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<profoto>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<profoto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<profoto>()
                .Property(e => e.FOTO_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<profoto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profoto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profoto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profoto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proftconv>()
                .Property(e => e.CODPROD)
                .IsUnicode(false);

            modelBuilder.Entity<proftconv>()
                .Property(e => e.UN_ENTRADA)
                .IsUnicode(false);

            modelBuilder.Entity<proftconv>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<proftconv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proftconv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proftconv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proftconv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proinfo>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<proinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proinventar>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proinventar>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proinventar>()
                .Property(e => e.RESPONSA)
                .IsUnicode(false);

            modelBuilder.Entity<proinventar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proinventar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proinventar>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proinventar>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv_tp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolink>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prolog>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<prolog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prolog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prolog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<prolog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.COD_BARRA)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.TIPOPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.GRUPOPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<promburro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.CODUNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.AGRUPAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.N_SOMA_TEMP)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.RASTREABTAB)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.NOMEIMG)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc_t>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc_t>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc_t>()
                .Property(e => e.CODUNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc_t>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc_t>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalc_t>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalctar>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalctar>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalctar>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalctar>()
                .Property(e => e.AGRUPAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalctar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalctar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalcvar>()
                .Property(e => e.CODTPVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalcvar>()
                .Property(e => e.VALORVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalcvar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proneccalcvar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.CODUNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.AGRUPAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.RASTREABTAB)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proneccomp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecconf>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecconf>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<pronecconf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecconf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.CODUNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.AGRUPAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.RASTREABTAB)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecmanu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecorigem>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprin>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprin>()
                .Property(e => e.CALC_CUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprin>()
                .Property(e => e.VERIF_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprin>()
                .Property(e => e.CONTR_INTERNO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprin>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprin>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprin>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprin>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.P_N_CHK_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.P_N_CHK_EST)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.P_N_CHK_PROC)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.P_N_CHK_PREV)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.P_N_SOMA_PREV)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.F_N_CHK_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.F_N_CHK_EST)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.F_N_CHK_DISP)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.F_N_CHK_PROC)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.F_N_CHK_PREV)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.F_N_SOMA_PREV)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.LOCAL_ABASTECI)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.ORIGEMDESC)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprodvar>()
                .Property(e => e.CODTPVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprodvar>()
                .Property(e => e.VALORVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprodvar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronecprodvar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.PORCAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.UN_PORCAO)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CALOR_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CALOR_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CARBO_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CARBO_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.PROTE_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.PROTE_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.GORDU_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.GORDU_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.GORDUSAT_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.GORDUSAT_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.GORDTRANS_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.GORDTRANS_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.COLEST_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.COLEST_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.FIBRA_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.FIBRA_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CALCIO_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CALCIO_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.FERRO_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.FERRO_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.SODIO_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.SODIO_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.ENERGETICO_VL)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.ENERGETICO_VD)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pronutri>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proopc_preco>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<proopc_preco>()
                .Property(e => e.CODGRUPREC)
                .IsUnicode(false);

            modelBuilder.Entity<proopc_preco>()
                .Property(e => e.CODTIPPREC)
                .IsUnicode(false);

            modelBuilder.Entity<proopc_preco>()
                .Property(e => e.FACILTROCO)
                .IsUnicode(false);

            modelBuilder.Entity<proopc_preco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proopc_preco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proopc_preco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proopc_preco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.CODOPT)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.DESCRESU)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.CODTPOPT)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proopcio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CODOPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CFOP_INTERNO)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CFOP_INTESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CFOP_EXTERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prooperacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.CODTIPPREC)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.CODGRUPREC)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.FACILTROCO)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<propcven>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.TECLA)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.TECLADO)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.RECEITA)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.CODETIQUETA)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<propesovar>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CODTPPLAN)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.ATEND_VENDA)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplntipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.CODUNIVERS)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.LOCALIZA)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprfoto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proprftpai>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proprftpai>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proprftpai>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprftpai>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprftpai>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprftpai>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.FILTRO)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CONFIGFILT)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proprtpfoto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CODFAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.DESCRITEM)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CENTROTRAB)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CODHORARIO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrec>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecimg>()
                .Property(e => e.CODFAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecimg>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecimg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecimg>()
                .Property(e => e.IMAGEM_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecimg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecimg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecimg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecimg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrectpimg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstd>()
                .Property(e => e.CODHORARIO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstd>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstd>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstd>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstd>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstd>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursoimg>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursoimg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursoimg>()
                .Property(e => e.IMAGEM_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursoimg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursoimg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursoimg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursoimg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recursotpimg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_staplaneja>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplaneja>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpplanner>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.TIPODISP)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tpprogextra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprealizado>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_tprecurso>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.CENTRO)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.NAO_SOLIC_TEMPO)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.ACESSO_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarefa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protarinfo>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<protarinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<protarinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<protarinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<protarinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.IMAGEM_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.LEGENDA)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarinstru>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protarxfer>()
                .Property(e => e.CODFER)
                .IsUnicode(false);

            modelBuilder.Entity<protarxfer>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<protarxfer>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarxfer>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarxfer>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protarxfer>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpfer>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpinstru>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protplocal>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<protpvarval>()
                .Property(e => e.CODTPVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<protpvarval>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<protpvarval>()
                .Property(e => e.CODALTERNAT)
                .IsUnicode(false);

            modelBuilder.Entity<protpvarval>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpvarval>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpvarval>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<protpvarval>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<provariacao>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<provariacao>()
                .Property(e => e.CODTPVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<provariacao>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<provariacao>()
                .Property(e => e.VALOR_PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<provariacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<provariacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<provariacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<provariacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proxcust>()
                .Property(e => e.CODPRODU)
                .IsUnicode(false);

            modelBuilder.Entity<proxcust>()
                .Property(e => e.CODCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<proxcust>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<proxcust>()
                .Property(e => e.ACUMULADO)
                .IsUnicode(false);

            modelBuilder.Entity<proxcust>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxcust>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxcust>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxcust>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proxfor>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proxfor>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<proxfor>()
                .Property(e => e.UE_ORIG)
                .IsUnicode(false);

            modelBuilder.Entity<proxfor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxfor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxfor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxfor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrade>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrade>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrade>()
                .Property(e => e.ESTRGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrade>()
                .Property(e => e.PUBLICA_OBS)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrade>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrp>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrp>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxgrp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proxopt>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proxopt>()
                .Property(e => e.CODTPOPT)
                .IsUnicode(false);

            modelBuilder.Entity<proxopt>()
                .Property(e => e.CODOPT)
                .IsUnicode(false);

            modelBuilder.Entity<proxopt>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxopt>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxopt>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxopt>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<rem_log>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<rem_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.CODPROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.PROC_TPINFO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.SCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_proc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refsta>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.DEB_CRED)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.PLCONTADESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.PLCONTAORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CCUSTODESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CCUSTOORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_tpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CODCOMPET)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respcompet>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.SEXO)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.APELIDO)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.CPF)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.RG)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.DDI)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.FAX)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.CELULAR)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.VOIP)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.EMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respdepen>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respdisp>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<respdisp>()
                .Property(e => e.OSTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<respdisp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respdisp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respdisp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respdisp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respevento>()
                .Property(e => e.TIPOEVENTO)
                .IsUnicode(false);

            modelBuilder.Entity<respevento>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<respevento>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<respevento>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respevento>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respevento>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respevento>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respfoto>()
                .Property(e => e.TIPOFOTO)
                .IsUnicode(false);

            modelBuilder.Entity<respfoto>()
                .Property(e => e.FOTO_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<respfoto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfoto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfoto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfoto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncomp>()
                .Property(e => e.FUNCAO)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncomp>()
                .Property(e => e.CODCOMPET)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncomp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncomp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncomp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncomp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncresp>()
                .Property(e => e.FUNCAO)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncresp>()
                .Property(e => e.CODRESP)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncresp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncresp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncresp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respfuncresp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respgookey>()
                .Property(e => e.EMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<respgookey>()
                .Property(e => e.SCOPE)
                .IsUnicode(false);

            modelBuilder.Entity<respgookey>()
                .Property(e => e.ACCESS_TOKEN)
                .IsUnicode(false);

            modelBuilder.Entity<respgookey>()
                .Property(e => e.TOKEN_TYPE)
                .IsUnicode(false);

            modelBuilder.Entity<respgookey>()
                .Property(e => e.REFRESH_TOKEN)
                .IsUnicode(false);

            modelBuilder.Entity<respgookey>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<respgookey>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respgookey>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respinfo>()
                .Property(e => e.TIPOINFO)
                .IsUnicode(false);

            modelBuilder.Entity<respinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<respinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<respinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<resplog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<resplog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<resplog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<resplog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<resplog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.APELIDO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.SEXO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.FUNCAO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.RG)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CPF)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.REGIMECONTR)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.REGPROF)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.NCARTTRAB)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.NPIS)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.REGIAO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.DDI)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.FAX)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CELULAR)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.EMAIL)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.RESP_USUAR)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.RESP_SENHA)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.USU_APLIC)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.SINC_EXT_ATIVO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.SINC_EXT_SENHA)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.SINC_EXT_ID)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CNH)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CNHCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.MOTORISTA)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.TIPOMO)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<responsa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CODREGIMECONTR)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respregimecontr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CODRESP)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respresponsa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<resptpdep>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<respxgrupo>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<respxgrupo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respxgrupo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respxgrupo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<respxgrupo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_gina>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_gina>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_gina>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_gina>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_ivens>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_ivens>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_ivens>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_ivens>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_junior>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_junior>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_junior>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_junior>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_monique>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_monique>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_monique>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_monique>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_paula>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_paula>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_paula>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_paula>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_viviane>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_viviane>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_viviane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_viviane>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temp_viviane>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempcintia>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempcintia>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempcintia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempcintia>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempcintia>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempedmea>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempedmea>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempedmea>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempedmea>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempedmea>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempelianacns>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempelianacns>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempelianacns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempelianacns>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempelianacns>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempgina>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempgina>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempgina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempgina>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempgina>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempivens>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempivens>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempivens>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempivens>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmarcelo>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmarcelo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmarcelo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmarcelo>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmarcelo>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmateuscns>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmateuscns>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmateuscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmateuscns>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_tempmateuscns>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temppaula>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temppaula>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temppaula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temppaula>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temppaula>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprafaelkcns>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprafaelkcns>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprafaelkcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprafaelkcns>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprafaelkcns>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temproberto>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temproberto>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temproberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temproberto>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temproberto>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprodrigocns>()
                .Property(e => e.DATA)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprodrigocns>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprodrigocns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprodrigocns>()
                .Property(e => e.FECHAMOM)
                .IsUnicode(false);

            modelBuilder.Entity<romaneioxped_temprodrigocns>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.TPCHK)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.TPTURNO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.HELP)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.OBRIGA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.TPRESP)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.OPCOES)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkgabarito>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chklist>()
                .Property(e => e.RESULTADO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chklist>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chklist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chklist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chklist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chklist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chklist>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chklist>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chkstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_chktp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_dialogo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_dialogo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_dialogo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_dialogolido>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_dialogolido>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_dialogolido>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_dialogolido>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_envolgab>()
                .Property(e => e.TPOCOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_envolgab>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_envolgab>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_envolgab>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_envolgab>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_local>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<rot_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_log>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_log>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_log>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorenvol>()
                .Property(e => e.TIPOENVOL)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorenvol>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorenvol>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorenvol>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorenvol>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorimg>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorimg>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorimg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorimg>()
                .Property(e => e.IMAGEM_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorimg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorimg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorimg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorimg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorlog>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.TPOCOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.FOTO_OCORR_TP)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.EQUIPDESC)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorrencia>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocorstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.TEMPLATE)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_ocortpimg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_perfil>()
                .Property(e => e.ORIG_TAB)
                .IsUnicode(false);

            modelBuilder.Entity<rot_perfil>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_perfil>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_perfil>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_perfil>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CODCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provcateg>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CODCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.TEMPL_SOLICITA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclass>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CODCLASSFECHA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.ACAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provclassfecha>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.TPOCOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provgab>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.RESPOSTA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.JUSTIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CODURGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CLASSFECHA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.FOTO_PROV_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.AUDIT_OBSERVACOES)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_providencia>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provlog>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.AMOCATEG)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.AMOTPSER)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.APONT_OBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.PERM_REAGEND)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CLASSPROV_OBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CATEGPROV_OBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.USA_LIBERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.USA_NEGOCIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.PROV_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.DERIV_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.DERIV_PREFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.DERIV_CLASSFECHA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.DERIV_OBRIG)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provtpderiv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CODURG)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_provurgencia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_status>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpfecha>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rot_tpturno>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.TPTURNO)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.TPFECHA)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<roturno>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sai_conf>()
                .Property(e => e.CODCONF)
                .IsUnicode(false);

            modelBuilder.Entity<sai_conf>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<sai_conf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sai_conf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.REALIZA_FECHA)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.REALIZA_EXPFINAN)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSGRPIN)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSGRPOUT)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.TAB_EDIT)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSPROXSTA)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSOBRIGAMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.NCONSIDFLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.STA_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.GRUPO_MONIT)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saistat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CODAGRUP)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspagrup>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.CODINSP)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.CODAGRUP)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.ATIVADA)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_inspcnf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_emails_env>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<se_emails_env>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_emails_env>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_emails_env>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_emails_env>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<se_grupo_email>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<se_grupo_email>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_grupo_email>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_grupo_email>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_grupo_email>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<sped_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<sped_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<sped_log>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<sped_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_log>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_log>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.SEQ_EXTERNA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.CONVENIO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.NUMDOC)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.AGENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.AGENCIADIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.CONTA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.CONTADIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.ARQUIVO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.IMPORTAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.LIMPEZA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cobimpor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_jonas>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_jonas>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_marcelo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_marcelo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_marcelo>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_paula>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_paula>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_tatiane>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_tatiane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_info_tatiane>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_pro_jonas>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_pro_marcelo>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_pro_paula>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_pro_tatiane>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_qtd_jonas>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_qtd_jonas>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_qtd_marcelo>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_qtd_marcelo>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_qtd_paula>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_qtd_paula>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_qtd_tatiane>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_cockpitmater_qtd_tatiane>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_a>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_a>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_assuero>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_assuero>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_brunoscns>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_brunoscns>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_ernando>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_ernando>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_gilmarcio>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_gilmarcio>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_gina>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_gina>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_isaac>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_isaac>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_ivens>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_ivens>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_jailson>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_jailson>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_jonas>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_jonas>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_junior>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_junior>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_marcelo>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_marcelo>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_marvin>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_marvin>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_paula>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_engpos_paula>()
                .Property(e => e.PRODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.DESCRAGRUPA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.DESCRPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.STATUSPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea>()
                .Property(e => e.LIB_RECEB)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea_f>()
                .Property(e => e.TIPORECEB)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_edmea_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.DESCRAGRUPA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.DESCRPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.STATUSPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina>()
                .Property(e => e.LIB_RECEB)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina_f>()
                .Property(e => e.TIPORECEB)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_gina_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.DESCRAGRUPA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.DESCRPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.STATUSPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens>()
                .Property(e => e.LIB_RECEB)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens_f>()
                .Property(e => e.TIPORECEB)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_ivens_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.DESCRAGRUPA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.DESCRPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.STATUSPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula>()
                .Property(e => e.LIB_RECEB)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula_f>()
                .Property(e => e.TIPORECEB)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_entxped_paula_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.CODUNIVERS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_jonas_compedprod>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_montaregralote>()
                .Property(e => e.CODREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_montaregralote>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_montaregralote>()
                .Property(e => e.CODTPREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_montaregralote>()
                .Property(e => e.ATIVADA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_montaregralote>()
                .Property(e => e.NOMEPROC)
                .IsUnicode(false);

            modelBuilder.Entity<temp_montaregralote>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_alexandre_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_assuero_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_claudiana_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_edmea_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ernando_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gilmarcio_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_gina_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_ivens_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jailson_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_jonas_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opconsu_paula_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_alexandre_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_assuero_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_claudiana_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_edmea_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ernando_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gilmarcio_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_gina_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_ivens_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jailson_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_jonas_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.CONT_GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.CONT_LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.CONT_LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula>()
                .Property(e => e.LIB_APONT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.BX_CONSUMO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.BX_PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.CODGRADEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.CODLOCALORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_opprod_paula_f>()
                .Property(e => e.LOTEORIG)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.CODUNIVERS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_paula_compedprod>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_marcelo>()
                .Property(e => e.LANCAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_marcelo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_marcelo>()
                .Property(e => e.ULTSTADESCR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_marcelo>()
                .Property(e => e.FORNECEDOR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_marcelo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_paula>()
                .Property(e => e.LANCAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_paula>()
                .Property(e => e.ULTSTADESCR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_paula>()
                .Property(e => e.FORNECEDOR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_paula>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_tatiane>()
                .Property(e => e.LANCAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_tatiane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_tatiane>()
                .Property(e => e.ULTSTADESCR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_tatiane>()
                .Property(e => e.FORNECEDOR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_pedmonitsta_tatiane>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodatendido>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodatendido>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodatendido>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodatendido>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodatendido>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodatendido>()
                .Property(e => e.MOVLOTEINTEGRAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodatendido>()
                .Property(e => e.BLOQUEADO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodped>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodped>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodped>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodped>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodped>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodped>()
                .Property(e => e.NUMITEMPEDCLI)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodproduzido>()
                .Property(e => e.CODPROD)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodproduzido>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodproduzido>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodproduzido>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodproduzido>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodproduzido>()
                .Property(e => e.MOVLOTEINTEGRAL)
                .IsUnicode(false);

            modelBuilder.Entity<temp_prodproduzido>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_a>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_alexandre>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_brunofcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_claudiana>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_edmea>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ernando>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_eunice>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gilmarcio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_ivens>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_julio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_leonardomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_monique>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_norberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_raquel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_renatomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_aprven_pedido_teste>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_alexandre>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_amauri>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_assuero>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_brunofcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_camilocns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_claudiana>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_edmea>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_elianagcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ernando>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gilmarcio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_ivens>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jailson>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_jonas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_kelly>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_marvin>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_serginhocns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_tatiane>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teresaacns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_teste>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_entrada_thiago>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_a>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_alessandro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_andrecns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_assuero>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_auditoria>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunofcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_brunoscns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_cintia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_elianagcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_eunice>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ivens>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_jonas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_julio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_marcelo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_monique>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_nicolemcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_norberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_raquel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_renatomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_ricardobcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_samerscns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_teresaacns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_viviane>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_fecven_pedido_williamccns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_alessandro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_andrecns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_assuero>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_auditoria>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunofcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_brunoscns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_camilocns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_cintia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_diegoscns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_edegardscns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eimy>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_elianagcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_eunice>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_ivens>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_jailson>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_julio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_leandro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_marcelo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_monique>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_nicolemcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_norberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_rafaelrcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_raquel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_renatomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_roberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teresaacns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_teste>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_viviane>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_lanven_pedido_williamccns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_alessandro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_eimy>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_monique>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_raquel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_fecven_pedido_renatomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_alessandro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_assuero>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_auditoria>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_brunoscns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eimy>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_eunice>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jailson>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_jonas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_monique>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_norberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_raquel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teresaacns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_lanven_pedido_teste>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_brunofcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_eimy>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_jailson>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_leonardomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_monique>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_raquel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_o_ven_pedido_teresaacns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_claudiana>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_ernando>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gilmarcio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_leandro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ped_recorrencia_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_alexandre>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_amauri>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_assuero>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_auditoria>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_brunofcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_edmea>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ernando>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gilmarcio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_isaac>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ivens>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jailson>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_jonas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_julio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_leonardomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_marcelo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_renatomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_ricardobcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_roberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_tatiane>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_teresaacns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_thiago>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_pedido_williamccns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_a>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_alexandre>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_amauri>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_assuero>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_brunofcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_cintia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_claudiana>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edegardscns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_edmea>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_erikaycns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ernando>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gilmarcio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_ivens>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jailson>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_jonas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_kelly>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_marvin>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_monique>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_norberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_teste>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_saida_williamccns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_a>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alessandro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_alexandre>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_amauri>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_andrecns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_assuero>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_brunofcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_cintia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edegardscns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_edmea>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eimy>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ernando>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_eunice>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gilmarcio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_gina>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_ivens>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jailson>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_jonas>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_julio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_leonardomcns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marcelo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_marvin>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_monique>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_norberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_paula>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_raquel>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_roberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_teste>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_viviane>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_pedido_williamccns>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_alexandre>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_gilmarcio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_junior>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_luis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_norberto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.PRODUTOINT)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.ORIGEMCLASS)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<temp_rateio_ven_recorrencia_viviane>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_ivens>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_ivens>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_ivens>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_ivens>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_luis>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_luis>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_luis>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_luis>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_norberto>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_norberto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_norberto>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_norberto>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_paula>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_paula>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_paula>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_paula>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_viviane>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_viviane>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_viviane>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<tempprodped_viviane>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<tg_categoria>()
                .Property(e => e.CODCATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<tg_categoria>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_categoria>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_categoria>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_categoria>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_categoria>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tg_globalvars>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_globalvars>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<tg_globalvars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_globalvars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log>()
                .Property(e => e.OK)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log_generico>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log_generico>()
                .Property(e => e.ID_CONTR)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log_generico>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log_generico>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<tg_log_generico>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.TAREFAPAI)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.CODCATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.ATIVADO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.FREQUNID)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.NLOGAREXECOK)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.DIA1)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.DIA2)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.DIA3)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.DIA4)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.DIA5)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.DIA6)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.DIA7)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES1)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES2)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES3)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES4)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES5)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES6)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES7)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES8)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES9)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES10)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES11)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.MES12)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.ULTSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.FORCAEXEC)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_tarefa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_unidade>()
                .Property(e => e.CODUNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<tg_unidade>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_unidade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_unidade>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_unidade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_unidade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tg_vars>()
                .Property(e => e.VAR_NOME)
                .IsUnicode(false);

            modelBuilder.Entity<tg_vars>()
                .Property(e => e.VAR_DESC)
                .IsUnicode(false);

            modelBuilder.Entity<tg_vars>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<tg_vars>()
                .Property(e => e.VAR_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<tg_vars>()
                .Property(e => e.VAR_VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<tg_vars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tg_vars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CRITERIO)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.MEMOCALC)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_criterios>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tm_critxtpserv>()
                .Property(e => e.TPSERV)
                .IsUnicode(false);

            modelBuilder.Entity<tm_critxtpserv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_critxtpserv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_critxtpserv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_critxtpserv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CODJUSTIFIC)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tm_justific>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_brunoscns_crecrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_crecrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_fimovrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_cintia_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_edmea_pedrateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_elianagcns_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_crecrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_fimovrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_gina_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_fimovrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_ivens_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_ajustesaldo>()
                .Property(e => e.CODCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_ajustesaldo>()
                .Property(e => e.DESCRCONTA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_julio_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_junior_sairateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_monique_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_nicolemcns_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_norberto_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_crecrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_fimovrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_pedrateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_paula_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_roberto_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_teste_ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_thiago_pedrateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_vanessa_cpagrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<tmp_williamccns_sairateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.FEEDBACK)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.CHR_CRIPTO)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.ORIGEMID)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torpedo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<torpresp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torpresp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torpresp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torpresp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.ICONE)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.PISCA)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.POPUP)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<torptipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.CODBANCO)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.OCORPGTO)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.BAIXADEB)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.METODO)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_banocpgto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CRITERIO)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.MEMOCALC)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_criterio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_loggeral>()
                .Property(e => e.TIPOLOG)
                .IsUnicode(false);

            modelBuilder.Entity<un_loggeral>()
                .Property(e => e.IDEXTERNO)
                .IsUnicode(false);

            modelBuilder.Entity<un_loggeral>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_loggeral>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<un_loggeral>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<un_loggeral>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_loggeral>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_medconv>()
                .Property(e => e.CODUNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<un_medconv>()
                .Property(e => e.CONVDE)
                .IsUnicode(false);

            modelBuilder.Entity<un_medconv>()
                .Property(e => e.CONVPARA)
                .IsUnicode(false);

            modelBuilder.Entity<un_medconv>()
                .Property(e => e.FATOR)
                .IsUnicode(false);

            modelBuilder.Entity<un_medconv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_medconv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_medconv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_medconv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.IDPESQINFO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.IDPESQUISA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.PERGUNTA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.HINT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.TIPODADO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.BANDA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.ESTRUTURA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.MASCARA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.VALID)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.VLDEFAULT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.INTERROGA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.MULTIPLA_ESCOLHA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqinfo>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.PER_INSERIR)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.PER_EDITAR)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.PER_VISUALIZAR)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqtipo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.IDPESQUISA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.NAO_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.SCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisa>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.TIPOPED)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.STAPED)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.ATIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.GRUPOAPROVA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avaliaregra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_conf>()
                .Property(e => e.CODCONF)
                .IsUnicode(false);

            modelBuilder.Entity<ven_conf>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_conf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_conf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CODFASE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.ORCAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_fase>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_formapgparc>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_formapgparc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<ven_formapgparc>()
                .Property(e => e.TPDOCFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_formapgparc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_formapgparc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_formapgparc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_formapgparc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_info>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_info>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_info>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_info>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_info>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_info>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_info>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.CODLOTE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.GRUPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.ACAOMKT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_lote>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CODMOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_motbloq>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CODSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CNSBLOQ)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_prodstatus>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_hist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_hist>()
                .Property(e => e.TIPOPED)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_hist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_info>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_info>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_info>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_info>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_info>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_info>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_info>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_log>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_log>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_log>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.GRUPOPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_prrat>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rec_tpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.EXECUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.TIPOPED)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.DEPTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.CODREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.MARKETING)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.STATUSPED)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.INFO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.TIPOMSG)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.EXPEDFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.EXPEDSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.CONTA_FRETE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.ESPECIE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.MARCA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.PESOBRUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.PESOLIQUIDO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_recorrencia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regitem>()
                .Property(e => e.CODREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regitem>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regitem>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regitem>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regitem>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CODREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_regra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.TPEND_PESSOA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.ENDPRIN_PESSOA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.LANCA_AUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.ATUALIZA_ENDPES)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpender>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CODTIPOLOG)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CNSTREE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tplog>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_tpvender>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_validacao>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_validacao>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_validacao>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_validacao>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_validacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_validacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_validacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_validacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.FIS_JUR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CNPJ_CPF)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.IE_RG)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.DDI)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.FAX)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CELULAR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CONTATO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.RESTR_GRUPO_PESSOA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_vendedor>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_verdade>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_verdade>()
                .Property(e => e.TIPOPED)
                .IsUnicode(false);

            modelBuilder.Entity<ven_verdade>()
                .Property(e => e.FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<ven_verdade>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_verdade>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_verdade>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_verdade>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.OK)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.HOST)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.USUARIO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.VARS)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.DATAIN)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.DATAOUT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.CODTPDADO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.ESTRUTDADO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servpars>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servxusu>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servxusu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servxusu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servxusu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servxusu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CODTPDADO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.SUPERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CONSOLIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CNSPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_tipodado>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.TIPO_AVISO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.CANAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.FASE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.SCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_acoes>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.TIPO_AVISO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.DIARIO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.PRIVADO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CONCLUI_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.ORIGEM_MODULO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.ORIGEM_TABELA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.SINC_EXT_ID)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.TIPO_AVISO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.DIARIO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.PRIVADO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CONCLUI_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.ORIGEM_MODULO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.ORIGEM_TABELA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.SINC_EXT_ID)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_agenda_m>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eveeditmp>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eveeditmp>()
                .Property(e => e.ADICIONADO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.TIPOEVENTO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.DETALHES)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.PAUTA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.CONCLUITIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.TIPO_AVISO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.DIARIO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.TIPOEVENTO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.DETALHES)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.PAUTA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.CONCLUITIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.TIPO_AVISO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.DIARIO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_eventos_m>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.DETALHES)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.PRIORIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.CONCLUI_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.ORIG_SISTEMA)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ag_lembretes>()
                .Property(e => e.IMAGEM_TPI)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.TIPOMO)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.TIPOSERV)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.DPTOREQUIS)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.ORIGEMLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.DONOTAB)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.FOCOTAB)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CODRECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<amo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindice>()
                .Property(e => e.CODINDICADOR)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindice>()
                .Property(e => e.CENTROCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindice>()
                .Property(e => e.TAG)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindice>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindice>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindice>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_gerindice>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind_mov>()
                .Property(e => e.IDINDICA)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind_mov>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind_mov>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind_mov>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_germoedaind_mov>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinfxtpivc>()
                .Property(e => e.TIPOIVC)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinfxtpivc>()
                .Property(e => e.TIPOINF)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinfxtpivc>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinfxtpivc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinfxtpivc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinfxtpivc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ivc_tpinfxtpivc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpgabaprova>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpgabaprova>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpgabaprova>()
                .Property(e => e.FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpgabaprova>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpgabaprova>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpgabaprova>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<base_ven_tpgabaprova>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cobloteimpor>()
                .Property(e => e.NOMEARQ)
                .IsUnicode(false);

            modelBuilder.Entity<cobloteimpor>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<cobloteimpor>()
                .Property(e => e.GERMOVUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobloteimpor>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<cobloteimpor>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobloteimpor>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobloteimpor>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cobloteimpor>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.LIBERA_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.OK_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.OK_RESULTADO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.INSTRUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<cotchklist>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.BXUSU)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<csmovimento>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.TIPOEXTRA)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entextra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.IDPESQUISA)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.IDPESQINFO)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<entinfo>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<entlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<entlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<entlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entlog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<entlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.TIPOAGENDA)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.DESC_FISC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CLFISCAL_COD)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.ISS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.INSS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.IR_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.FISC_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CUSTOTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.TIPOENTRA)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.DEPTO)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.TRSPPLACA)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.TRSPESPECI)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.TRSPPEBRUT)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.TRSPPELIQU)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.ORIGEMLOC)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.FISC_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.CALCULADO)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.EXPFINAN)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.ROMANEIO)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entrada>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entrateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entvenc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<entvenc>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<entvenc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entvenc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entvenc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entvenc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<entvenc>()
                .Property(e => e.DOCFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<entxped_itens>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<entxped_itens>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entxped_itens>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entxped_itens>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<entxped_itens>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fatlinkfatxnfe>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatlinkfatxnfe>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatlinkfatxnfe>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fatlinkfatxnfe>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_substitutoxuf>()
                .Property(e => e.UFDESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_substitutoxuf>()
                .Property(e => e.IEST)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_substitutoxuf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_substitutoxuf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_substitutoxuf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<fisc_substitutoxuf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.NOMEARQ)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.RESUMO)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.REFDOC)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.REFUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.DONDEP)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddoc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.NOMEARQ)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.BINARIO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.EXTENSAO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.REFVERSAO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.RESERVAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.PUBLICAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.HASHARQUIVO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.ORIGEMDESC)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarq>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarqant>()
                .Property(e => e.BINARIO)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarqant>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarqant>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarqant>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<geddocarqant>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.IDATIVIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.DEPARTAMEN)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<gedfluxopub>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.ORITAB)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.ORIID)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.ORIDES)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.ORITAB2)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.ORIID2)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.ORIDES2)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedlink>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedlog>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<gedlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedlog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedlog>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedlog>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.CODTIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.CAMPO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.BANDA)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.HINT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.CONTEXTO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.READONLY)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.TIPODADO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.MASCARA)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.VALORES)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.VALORES_ALT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.PADRAO_PORVAL)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.PADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.VALID)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.SCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gedtipdoc_cmp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midia>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midia>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midia>()
                .Property(e => e.DETALHES)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midia>()
                .Property(e => e.EXTENSAO)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midialink>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midialink>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midialink>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midialink>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ger_midialink>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gerferiado>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerferiado>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerferiado>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogsincro>()
                .Property(e => e.TIPOLOG)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogsincro>()
                .Property(e => e.TABELA)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogsincro>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogsincro>()
                .Property(e => e.INFO)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogsincro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogsincro>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogsincro>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<gerlogsincro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<itens_saixped>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<itens_saixped>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<itens_saixped>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<itens_saixped>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<itens_saixped>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.TIPOINVOICE)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.REFINVOICE)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.IMP_NOME)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.IMP_RESPONSA)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.DDI)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.FONE)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.FAX)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CELULAR)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CONTATO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CODPGTO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.PGTOMOEDA)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.TPFRETE)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.DIMENSOES)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CUBAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.MEDIDADPADRAO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.PESOLIQ)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.PESOBRUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.VALIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_invoice>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_packlist>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_packlist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_packlist>()
                .Property(e => e.TPEMBALAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_packlist>()
                .Property(e => e.MEDIDA)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_packlist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_packlist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_packlist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_packlist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_produto>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_produto>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_produto>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_produto>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_produto>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_produto>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ivc_produto>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.LOCALATENDE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.LOCALSOLICITA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.ENVIOUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.RECEBUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.FECHAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.DPTO_DONO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_carrinho>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kitprod>()
                .Property(e => e.CODKIT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kitprod>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kitprod>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kitprod>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kitprod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kitprod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kitprod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_kitprod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.CODTPPERDA)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.LOCAL_MOV)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.LOCAL_EMISS)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.DPTO_DONO)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.ORIGEMTAB2)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.RASTREABTAB)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mi_prod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<movfci>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<movfci>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<movfci>()
                .Property(e => e.ARQUIVO)
                .IsUnicode(false);

            modelBuilder.Entity<movfci>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<movfci>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<movfci>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<movfci>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitproc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitproc>()
                .Property(e => e.IDHD)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitproc>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitproc>()
                .Property(e => e.ORIGTAB)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitproc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitproc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitproc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitregs>()
                .Property(e => e.CODMONITCONF)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitregs>()
                .Property(e => e.CODAVALIA)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitregs>()
                .Property(e => e.VALOR_C)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitregs>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitregs>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitregs>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<mp_monitregs>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.CORRECAO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.NFENUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.NFEPROTOCOLO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.NFESTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.NFERETORNO)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<nfe_cce>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.CODINTERNO)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.TIPOLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_item>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<op_linkconpro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_linkconpro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_linksubpro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_linksubpro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_linktarpro>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<op_linktarpro>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_linktarpro>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.AGRUPAMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<op_tarefa>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvplconf>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvplconf>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvplconf>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvplconf>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<os_atvplconf>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.BPI)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.LOCALIZACAO)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.MARCA)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.MODELO)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.PN)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.SN)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<patrimonio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.FLUXOEND)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.TIPOEND)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.CODMUNICIPIO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_endereco>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pct_info>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_info>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_info>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_info>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_info>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_info>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_info>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.TIPOITEM)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.TAMANHO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<pct_item>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.FLUXO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.TPOPERA)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.TPPACOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.TAMANHO)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pct_pacote>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.TIPOENDER)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedender>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.TIPOEXTRA)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedextra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapgparc>()
                .Property(e => e.CODFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapgparc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapgparc>()
                .Property(e => e.TPDOCFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapgparc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapgparc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapgparc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedformapgparc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.NUMPEDFORN)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.TIPOPED)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.ORIGDPTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.TIPOTRANSP)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.TRSPPLACA)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.TRSPESPECI)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.TRSPPEBRUT)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.TRSPPELIQU)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.REF_INDIC)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.NEGOCIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.RECEBIMENT)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.FECHAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.CONCLUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.FISC_CALCULADO)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.FISC_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedido>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedinfo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pedinfo>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<pedinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pedlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<pedlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<pedlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.CODUNIVERS)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.DESC_FISC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.CLFISCAL_COD)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.ICMS_CNF)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.ISS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.INSS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.IR_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.FISC_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedprodudet>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedrateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.PRAZO)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.DEPARTAMEN)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.FAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.GRUPO)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.MARCA)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.CNSSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedrepre>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pedvenc>()
                .Property(e => e.DOCFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pesindicador>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_fecha>()
                .Property(e => e.CODTPFECHA)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_fecha>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_fecha>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_fecha>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.CONTEXTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.CNF_PROP_POSS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.CLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.QTD_INV)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.ALTERA_CM)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hfisc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.CONTEXTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.CNF_PROP_POSS)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.CLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.QTD_INV)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.ALTERA_CM)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_it_hreal>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.CLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.CODCLCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.F_OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.R_OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.LOGEDIT)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_item>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_log>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<pinv_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fanotacao>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fanotacao>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fanotacao>()
                .Property(e => e.DETALHES)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fanotacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fanotacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fanotacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fanotacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fatos>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fatos>()
                .Property(e => e.PCONTAS)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fatos>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fatos>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fatos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fatos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fatos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<plan_fatos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.FONTE)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.CHAVE)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.VERSAO)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procargatrib>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.OBRIGATORIO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.LIBERA_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.OK_DPTO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.OK_RESULTADO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.INSTRUCAO)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prochklist>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<procustotempo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_prodxclfisc>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_prodxclfisc>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_prodxclfisc>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_prodxclfisc>()
                .Property(e => e.CODCLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_prodxclfisc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_prodxclfisc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_prodxclfisc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_prodxclfisc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.TRIBUTO)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.OPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.CODCLFISCAL)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.RECUPERAR)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.CNF_TRIB)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<profisc_recupera>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proicmaliq>()
                .Property(e => e.CODICM)
                .IsUnicode(false);

            modelBuilder.Entity<proicmaliq>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<proicmaliq>()
                .Property(e => e.PDV_TRIB)
                .IsUnicode(false);

            modelBuilder.Entity<proicmaliq>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<proicmaliq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proicmaliq>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proicmaliq>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proicmaliq>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proissaliq>()
                .Property(e => e.CODISS)
                .IsUnicode(false);

            modelBuilder.Entity<proissaliq>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<proissaliq>()
                .Property(e => e.PDV_TRIB)
                .IsUnicode(false);

            modelBuilder.Entity<proissaliq>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<proissaliq>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proissaliq>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proissaliq>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proissaliq>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.TIPOMOV)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.PRODUTOPAI)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.ORIGEMLOC)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prolgmv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod>()
                .Property(e => e.CODTPPLAN)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod>()
                .Property(e => e.PROD_DESC)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod_dt>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod_dt>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod_dt>()
                .Property(e => e.CODLOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod_dt>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod_dt>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod_dt>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod_dt>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proplnprod_dt>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.CNSHASHMD5)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proqtd>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdtmp>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdtmp>()
                .Property(e => e.PRODUTOPAI)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdtmp>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdtmp>()
                .Property(e => e.GRADE)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdtmp>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdtmp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdvarlote>()
                .Property(e => e.CODTPVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdvarlote>()
                .Property(e => e.VALORVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdvarlote>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdvarlote>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdvarlote>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proqtdvarlote>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxetar>()
                .Property(e => e.CODFAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxetar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxetar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxetar>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxetar>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxrec>()
                .Property(e => e.CODFAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxrec>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxrec>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxrec>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxrec>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxtar>()
                .Property(e => e.CODTAREFA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxtar>()
                .Property(e => e.CODFAMILIA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxtar>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxtar>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxtar>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_familrecxtar>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.L_RECURSO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.L_MOMPLAN)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.L_TMPAJUSTADO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.CNSPREDECESSAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planeja>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planner>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planner>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planner>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planner>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planner>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planrec>()
                .Property(e => e.FAMILIAREC)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planrec>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planrec>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planrec>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_planrec>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_predecessao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_predecessao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_predecessao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_predecessao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progextra>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progextra>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progextra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progextra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progextra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progextra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstddisp>()
                .Property(e => e.CODHORARIO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstddisp>()
                .Property(e => e.DIASEMANA)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstddisp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstddisp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstddisp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_progstddisp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_realizado>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_realizado>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_realizado>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_realizado>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_realizado>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_realizado>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_rec_custo>()
                .Property(e => e.TIPOATV)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_rec_custo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_rec_custo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_rec_custo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_rec_custo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recurso>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recurso>()
                .Property(e => e.CENTROTRAB)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recurso>()
                .Property(e => e.CODHORARIO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recurso>()
                .Property(e => e.CODTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recurso>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recurso>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recurso>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<prorec_recurso>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CODOPERACAO)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CFOP_INTERNO)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CFOP_INTESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CFOP_EXTERIOR)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<proxoperacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.CODREF)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.TIPOINFO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.PLCONTADESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.PLCONTAORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.CCUSTODESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.CCUSTOORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.CODPROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_fecha>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.TIPOINFO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.PLCONTADESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.PLCONTAORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.CCUSTODESTINO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.CCUSTOORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_param>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.CODREF)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.TITULO)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<rem_refer>()
                .Property(e => e.CNSSINCCHK)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TIPOSAIDA)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.DEPTO)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.CONTA_FRETE)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPOBS)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPMOTORISTA)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPAJUDANTE)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPPLACA)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPESPECI)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPMARCA)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPNUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPUFPLAC)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPPEBRUT)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TRSPPELIQU)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.TIPOMSG)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.ORIGEMLOC)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.ROMANEIO)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.FATURADO)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.CALCULADO)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.FISC_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.EXPFINAN)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saida>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<saiextra>()
                .Property(e => e.TIPOEXTRA)
                .IsUnicode(false);

            modelBuilder.Entity<saiextra>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<saiextra>()
                .Property(e => e.AUXILIAR)
                .IsUnicode(false);

            modelBuilder.Entity<saiextra>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiextra>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiextra>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiextra>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.IDPESQUISA)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.IDPESQINFO)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<saiinfo>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sailog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<sailog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<sailog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<sailog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sailog>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sailog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<sailog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.PRODPAI)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.REFERENCIA)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.TIPOAGENDA)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.DESC_FISC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CLFISCAL_COD)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CODORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.ISS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.INSS_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.IR_RETER)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.FISC_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<saiprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sairateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.CODTPDOC)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.CONVENIO)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<saivenc>()
                .Property(e => e.DOCFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.DESCRESU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_gadgets>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetuser>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetuser>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetuvars>()
                .Property(e => e.VARNOME)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetuvars>()
                .Property(e => e.VARVALOR)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetuvars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetuvars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.VARNOME)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.VARTITULO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.VARDESC)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.USUALTERA)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.VARTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.VARVALOR)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.SCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.NATUALIZAR)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_ggetvars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panels>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panels>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panels>()
                .Property(e => e.DESCRESU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panels>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panels>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panels>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panels>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panels>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panvars>()
                .Property(e => e.VARNOME)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panvars>()
                .Property(e => e.VARDESC)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panvars>()
                .Property(e => e.VARTIPO)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panvars>()
                .Property(e => e.VARVALOR)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panvars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sccn_panvars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.SMTP_HOST)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.SMTP_USER)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.SMTP_PWD)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_FROM)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_TO)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_CC)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_CCO)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_REPLY)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_TITLE)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_TEXT)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_HTML)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.EMAIL_ATTACHED)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.EMAIL_FROM)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.EMAIL_TO)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.EMAIL_CC)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.EMAIL_REPLY)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.EMAIL_SUBJECT)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.EMAIL_BODY)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.EMAIL_BODYHTML)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.EMAIL_RAW)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.CONF_HOST)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.CONF_USER)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.CONF_PSWD)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.MARCA_ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.MARCA_ORIGEMID)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entranexo>()
                .Property(e => e.ANEXO_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entranexo>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entranexo>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entranexo>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<se_email_entranexo>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0120>()
                .Property(e => e.INF_COMP)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0120>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0120>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0120>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0120>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0145>()
                .Property(e => e.INFO_COMPL)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0145>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0145>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0145>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0145>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0208>()
                .Property(e => e.COD_TAB)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0208>()
                .Property(e => e.COD_GRU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0208>()
                .Property(e => e.MARCA_COM)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0208>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0208>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0208>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_0208>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p010>()
                .Property(e => e.CNPJ)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p010>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p010>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p010>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p010>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p100>()
                .Property(e => e.COD_ATIV_ECON)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p100>()
                .Property(e => e.COD_CTA)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p100>()
                .Property(e => e.INFO_COMPL)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p100>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p100>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p100>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p100>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p110>()
                .Property(e => e.NUM_CAMPO)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p110>()
                .Property(e => e.COD_DET)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p110>()
                .Property(e => e.INF_COMPL)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p110>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p110>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p110>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p110>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p119>()
                .Property(e => e.NUM_PROC)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p119>()
                .Property(e => e.IND_PROC)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p119>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p119>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p119>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p119>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p200>()
                .Property(e => e.COD_REC)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p200>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p200>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p200>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p200>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p210>()
                .Property(e => e.IND_AJ)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p210>()
                .Property(e => e.COD_AJ)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p210>()
                .Property(e => e.NUM_DOC)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p210>()
                .Property(e => e.DESCR_AJ)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p210>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p210>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p210>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_efd_p210>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_fiscal_1600>()
                .Property(e => e.MODULO)
                .IsUnicode(false);

            modelBuilder.Entity<sped_fiscal_1600>()
                .Property(e => e.REDE)
                .IsUnicode(false);

            modelBuilder.Entity<sped_proc>()
                .Property(e => e.TIPOSPED)
                .IsUnicode(false);

            modelBuilder.Entity<sped_proc>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<sped_proc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_proc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_proc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_proc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_procvars>()
                .Property(e => e.AGRUPA_COD)
                .IsUnicode(false);

            modelBuilder.Entity<sped_procvars>()
                .Property(e => e.AGRUPA_DESC)
                .IsUnicode(false);

            modelBuilder.Entity<sped_procvars>()
                .Property(e => e.VAR_DESC)
                .IsUnicode(false);

            modelBuilder.Entity<sped_procvars>()
                .Property(e => e.VAR_VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<sped_procvars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_procvars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_procvars>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_procvars>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.TIPOSPED)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.AGRUPA_COD)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.AGRUPA_DESC)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.VAR_COD)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.VAR_DESC)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.VAR_VALOR)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<sped_variaveis>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqestru>()
                .Property(e => e.IDPESQINFO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqestru>()
                .Property(e => e.CODIGO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqestru>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqestru>()
                .Property(e => e.CNSAJUDA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqestru>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqestru>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqestru>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqestru>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqlog>()
                .Property(e => e.IDPESQUISA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqlog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqlog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqlog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqlog>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqlog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqlog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqlog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqresp>()
                .Property(e => e.IDPESQINFO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqresp>()
                .Property(e => e.MULT_ALTERNAT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqresp>()
                .Property(e => e.RESPOSTA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqresp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqresp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqresp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqresp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqrestr>()
                .Property(e => e.IDPESQUISA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqrestr>()
                .Property(e => e.TABELA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqrestr>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqrestr>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqrestr>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesqrestr>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.IDPESQUISA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.ORIGEMID)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.ORIGEMDESC)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisado>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisadolog>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisadolog>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisadolog>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisadolog>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisadolog>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisadolog>()
                .Property(e => e.STATUS_ANT)
                .IsUnicode(false);

            modelBuilder.Entity<un_pesquisadolog>()
                .Property(e => e.STATUS_NOVO)
                .IsUnicode(false);

            modelBuilder.Entity<uuid_dup>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<uuid_dup>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.FORMA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.USUAPROVA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.USUREPROVA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.MOTIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.BLOQMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.BLOQDETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_aprova>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.STATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.APROVA_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.APROVA_USUARIO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.APROVA_OBS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_avalia>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_comissao>()
                .Property(e => e.CODREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_comissao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_comissao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_comissao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_comissao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.TIPOEND)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.CEP)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.LOGRADOURO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.ENDERECO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.COMPLEMENT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.BAIRRO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.CIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.ESTADO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.PAIS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.CPOSTAL)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_ender>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_log>()
                .Property(e => e.TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_log>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_log>()
                .Property(e => e.DETALHE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_log>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_log>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.PRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_loteprodu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.BANCO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.DOCUMENTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.CONVENIO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.BAIXAUSUAR)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.BAIXATIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_parc>()
                .Property(e => e.DOCFIXO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.MATRICULA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.NUMPEDCLI)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.TIPOPED)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.EMPRESA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.DEPTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.FORMAPG)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.TIPODOC)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CODREGRA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CATEGORIA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.MARKETING)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.ORIGEM)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.REFER)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.DESC_ACRESC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.MEMO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.INFO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.TIPOMSG)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.MENSAGEM)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CAR_TIPO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CAR_NUM)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CAR_DIG)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CAR_VALID)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CAR_AUT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CAR_HASH)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.FECHAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.EXPEDFORMA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.EXPEDSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.EXPEDUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.EXPEDTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.EMAPROVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.FATURADO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.COBRADO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.FISC_CALCULADO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.FISC_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CONTA_FRETE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.PLACA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.ESPECIE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.MARCA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.NUMERO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.PESOBRUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.PESOLIQUIDO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.UFPLACA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.AVALIA_REPRUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.AVALIA_REPRSTA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_pedido>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CODPRODUTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CODGRADE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.LOTE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.LOCAL)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CFOP)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.UNIDADE)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.DESC_FISC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.GRUPOPRECO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.DESC_ACRESC_MC)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.FISC_INFOS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.NUMPEDCLI)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.NUMITEMPEDCLI)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CNSSTATUS)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CNSSTATUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.BAIXAUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.ORIGEMTAB)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_produ>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_provariacao>()
                .Property(e => e.CODTPVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_provariacao>()
                .Property(e => e.VALORVARIACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_provariacao>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_provariacao>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_provariacao>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_provariacao>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.PLANO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.CCUSTO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.CLASSIFICA)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.FOCO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ven_rateio>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<venc_saixped>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<venc_saixped>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<venc_saixped>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<venc_saixped>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.CONF_DOC)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.DISP_TABELA)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupserv>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtab>()
                .Property(e => e.CODTABELA)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtab>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtab>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtab>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtab>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtabxusu>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtabxusu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtabxusu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtabxusu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservtabxusu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.USUARIO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.SENHA)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.OBSERVACAO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.CONF_USO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservusu>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservvars>()
                .Property(e => e.VARNOME)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservvars>()
                .Property(e => e.VARSCRIPT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservvars>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservvars>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservvars>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_agrupservvars>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrut>()
                .Property(e => e.CODESTRUT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrut>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrut>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrut>()
                .Property(e => e.EXEMPLO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrut>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrut>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrut>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrut>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.CODTPDADO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.ESTRUTDADO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.ESTRUTITEM)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.EXEMPLO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_estrutcmp>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.NOME)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.DESCRICAO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.DESCRITIVO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.EXEMPLO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.PROCESSO)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.VARIAVEIS)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.ESTRUT_IN)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.ESTRUT_OUT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.LOGDATAIN)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.LOGDATAOUT)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.AUTENTBASICA)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.CNSCADUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.CNSALTUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.CNSCANUSU)
                .IsUnicode(false);

            modelBuilder.Entity<ws_servicos>()
                .Property(e => e.CNSCANMOT)
                .IsUnicode(false);
        }
    }
}
