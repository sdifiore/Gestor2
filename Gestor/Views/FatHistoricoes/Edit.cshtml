@model Gestor.Models.FatHistorico

@{
    ViewBag.Title = "Alterar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Alterar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Faturamento Histórico</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Rotulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rotulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rotulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FitaRecLiq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FitaRecLiq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FitaRecLiq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FitaPeso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FitaPeso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FitaPeso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FitaHora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FitaHora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FitaHora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TuboRecLiq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TuboRecLiq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TuboRecLiq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TuboPeso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TuboPeso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TuboPeso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TuboHora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TuboHora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TuboHora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GxfPuroRecLiq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GxfPuroRecLiq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GxfPuroRecLiq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GxfPuroPeso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GxfPuroPeso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GxfPuroPeso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GxfPuroHora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GxfPuroHora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GxfPuroHora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GxfGrafRecLiq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GxfGrafRecLiq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GxfGrafRecLiq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GxfGrafPeso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GxfGrafPeso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GxfGrafPeso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GxfGrafHora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GxfGrafHora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GxfGrafHora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GraxaRecLiq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GraxaRecLiq, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GraxaRecLiq, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GraxaPeso, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GraxaPeso, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GraxaPeso, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GraxaHora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GraxaHora, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GraxaHora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Gravar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retornar a lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
